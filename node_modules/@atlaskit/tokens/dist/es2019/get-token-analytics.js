// Extend the Window interface to include optional analyticsWebClient

/**
 * Records a token call event to the analytics service. This is used to track which tokens are being used at runtime as they should be substituted by the values by @atlaskit/tokens/babel-plugin at build time.
 * @param token - The token that was called.
 * @param fallback - The fallback value that was used.
 */
export const recordTokenCall = async (token, fallback) => {
  try {
    var _window;
    // TODO: window.analyticsWebClient is a property specific to Jira. It is not available in the other products. We might consider to register a dedicated analytics client for logging token calls for each product to enable cohesive experience across different products.
    const analyticsClient = (_window = window) === null || _window === void 0 ? void 0 : _window.analyticsWebClient;
    if (analyticsClient) {
      // Check for a <style> element with a data-theme attribute in the document
      const isThemeEnabled = !!document.querySelector('style[data-theme]');

      // when such property exists, we are using it to send this event https://data-portal.internal.atlassian.com/analytics/registry/75682 which is registered specifically for Jira.
      analyticsClient.sendEvent({
        type: 'TRACK',
        payload: {
          action: 'called_at_runtime',
          actionSubject: 'token',
          source: 'design-system',
          attributes: {
            url: window.location.href,
            token,
            fallback,
            isThemeEnabled
          }
        }
      });
    }
  } catch (e) {
    // eslint-disable-next-line no-console
    console.error(e);
  }
};