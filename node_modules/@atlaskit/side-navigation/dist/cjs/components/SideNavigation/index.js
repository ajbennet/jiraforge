"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = require("react");
var _react2 = require("@emotion/react");
var _menu = require("@atlaskit/menu");
var _colors = require("@atlaskit/theme/colors");
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var sidebarMinWidth = '240px';
var sideNavStyles = (0, _react2.css)({
  display: 'flex',
  width: '100%',
  minWidth: sidebarMinWidth,
  height: '100%',
  position: 'relative',
  flexDirection: 'column',
  backgroundColor: "var(--ds-surface, ".concat(_colors.N10, ")"),
  color: "var(--ds-text-subtle, ".concat(_colors.N500, ")"),
  overflow: 'hidden'
});

/**
 * __Side navigation__
 *
 * A highly composable side navigation component that supports nested views.
 *
 * - [Examples](https://atlassian.design/components/side-navigation/examples)
 * - [Code](https://atlassian.design/components/side-navigation/code)
 * - [Usage](https://atlassian.design/components/side-navigation/usage)
 */
var SideNavigation = /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
  var children = props.children,
    testId = props.testId,
    label = props.label,
    _props$isServer = props.isServer,
    isServer = _props$isServer === void 0 ? false : _props$isServer,
    _props$isSSRPlacehold = props.isSSRPlaceholderEnabled,
    isSSRPlaceholderEnabled = _props$isSSRPlacehold === void 0 ? false : _props$isSSRPlacehold;
  return (0, _react2.jsx)("nav", (0, _extends2.default)({
    ref: ref,
    "data-testid": testId,
    "aria-label": label,
    css: sideNavStyles,
    "data-vc": "side-navigation".concat(isServer ? '-ssr' : '')
  }, isServer && isSSRPlaceholderEnabled && {
    'data-ssr-placeholder': 'side-navigation-placeholder'
  }, !isServer && isSSRPlaceholderEnabled && {
    'data-ssr-placeholder-replace': 'side-navigation-placeholder'
  }), (0, _react2.jsx)(_menu.SELECTION_STYLE_CONTEXT_DO_NOT_USE.Provider, {
    value: "notch"
  }, children));
});
var _default = exports.default = SideNavigation;