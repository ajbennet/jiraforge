import _extends from "@babel/runtime/helpers/extends";
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { css, jsx } from '@emotion/react';
import { ExitingPersistence, FadeIn } from '@atlaskit/motion';
import { useShouldNestedElementRender } from '../NestableNavigationContent/context';
var baseMotionStyles = css({
  position: 'absolute',
  zIndex: 1,
  // eslint-disable-next-line @atlaskit/design-system/ensure-design-token-usage, @atlaskit/design-system/no-physical-properties
  top: 0,
  // eslint-disable-next-line @atlaskit/design-system/ensure-design-token-usage, @atlaskit/design-system/no-physical-properties
  right: 0,
  // eslint-disable-next-line @atlaskit/design-system/ensure-design-token-usage, @atlaskit/design-system/no-physical-properties
  left: 0
});
var enteringStyles = css({
  position: 'static',
  zIndex: 2
});

/**
 * __Loading items__
 *
 * Loading items conditionally render based on the useShouldNestedElementRender() hook.
 */
var LoadingItems = function LoadingItems(_ref) {
  var children = _ref.children,
    isLoading = _ref.isLoading,
    fallback = _ref.fallback,
    testId = _ref.testId;
  var _useShouldNestedEleme = useShouldNestedElementRender(),
    shouldRender = _useShouldNestedEleme.shouldRender;
  if (!shouldRender) {
    return children;
  }
  return jsx(ExitingPersistence, null, jsx(FadeIn, {
    key: "loading-section-".concat(isLoading),
    duration: "medium"
  }, function (motion, state) {
    return jsx("span", _extends({}, motion, {
      "data-testid": testId && "".concat(testId, "--").concat(state),
      css: [baseMotionStyles, state === 'entering' && enteringStyles]
    }), isLoading ? fallback : children);
  }));
};
export default LoadingItems;