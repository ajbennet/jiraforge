import _extends from "@babel/runtime/helpers/extends";
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import { forwardRef } from 'react';

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { css, jsx } from '@emotion/react';
import { N500 } from '@atlaskit/theme/colors';
import { overrideStyleFunction } from '../../common/styles';
import { CustomItem } from '../Item';
const containerStyles = css({
  display: 'block',
  position: 'relative'
});

/**
 * __Container__
 *
 * A container for Header and Footer that safely handles props to the child component
 */
export const Container = ({
  children,
  'data-testid': testId,
  ...props
}) => {
  // https://stackoverflow.com/a/39333479
  const safeProps = (({
    className,
    onClick,
    onMouseDown,
    onDragStart,
    draggable,
    ref,
    tabIndex,
    disabled
  }) => ({
    className,
    onClick,
    onMouseDown,
    onDragStart,
    draggable,
    ref,
    tabIndex,
    disabled
  }))(props);
  return jsx("div", _extends({
    "data-testid": testId,
    css: containerStyles
  }, safeProps), children);
};
/**
 * __Header__
 *
 * - [Examples](https://atlassian.design/components/side-navigation/examples#header-and-footer)
 * - [Code](https://atlassian.design/components/side-navigation/code)
 */
const Header = /*#__PURE__*/forwardRef((props, ref) => {
  const cssFn = overrideStyleFunction(() => ({
    userSelect: 'auto',
    ['[data-item-title]']: {
      font: "var(--ds-font-heading-xsmall, normal 600 14px/16px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, system-ui, \"Helvetica Neue\", sans-serif)",
      color: `var(--ds-text, ${N500})`
    },
    // Will look interactive if the `component` is anything other than a div.
    'div&:hover': {
      backgroundColor: "var(--ds-background-neutral-subtle, transparent)",
      cursor: 'default'
    },
    'div&:active': {
      backgroundColor: "var(--ds-background-neutral-subtle, transparent)",
      color: `var(--ds-text, ${N500})`
    }
  }), props.cssFn);
  return jsx(CustomItem, _extends({}, props, {
    ref: ref,
    component: props.component || Container
    // eslint-disable-next-line @repo/internal/react/no-unsafe-overrides
    ,
    cssFn: cssFn
    // eslint-disable-next-line @repo/internal/react/no-unsafe-overrides
    ,
    overrides: {
      Title: {
        // eslint-disable-next-line @atlaskit/design-system/use-heading
        render: (_, {
          children,
          ...props
        }) => jsx("h2", props, children)
      }
    }
  }));
});
export default Header;