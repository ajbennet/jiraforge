export type EditorExperimentsConfig = typeof editorExperimentsConfig;
/**
 * When adding a new experiment, you need to add it here.
 * Please follow the pattern established in the examples and any
 * existing experiments.
 */
export declare const editorExperimentsConfig: {
    platform_editor_reduce_noisy_steps_ncs: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    'example-boolean': {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    'example-multivariate': {
        values: ("one" | "two" | "three")[];
        typeGuard: (value: unknown) => value is "one" | "two" | "three";
        defaultValue: "one" | "two" | "three";
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    'test-new-experiments-package': {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    support_table_in_comment: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    platform_editor_exp_lazy_node_views: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    platform_renderer_table_sticky_scrollbar: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    platform_editor_controls_performance_fixes: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    platform_editor_prevent_toolbar_layout_shifts: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    comment_on_bodied_extensions: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    advanced_layouts: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    single_column_layouts: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    support_table_in_comment_jira: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    'platform_editor_ai-prompts-placeholder': {
        values: ("test" | "control")[];
        typeGuard: (value: unknown) => value is "test" | "control";
        defaultValue: "test" | "control";
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    'nested-tables-in-tables': {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    platform_editor_ai_unsplash_page_header: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    platform_editor_blockquote_in_text_formatting_menu: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    platform_editor_advanced_code_blocks: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    platform_editor_element_drag_and_drop_multiselect: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    platform_editor_ai_edit_response_in_preview: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    platform_editor_controls: {
        values: ("control" | "variant1")[];
        typeGuard: (value: unknown) => value is "control" | "variant1";
        defaultValue: "control" | "variant1";
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    platform_editor_insertion: {
        values: ("control" | "variant1")[];
        typeGuard: (value: unknown) => value is "control" | "variant1";
        defaultValue: "control" | "variant1";
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    platform_editor_vanilla_dom: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    editor_text_highlight_orange_to_yellow: {
        values: ("test" | "control")[];
        typeGuard: (value: unknown) => value is "test" | "control";
        defaultValue: "test" | "control";
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    platform_editor_ai_proactive_ai_nudge_parameters: {
        values: ("control" | "variant1")[];
        typeGuard: (value: unknown) => value is "control" | "variant1";
        defaultValue: "control" | "variant1";
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    platform_editor_offline_editing_web: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    editor_ai_inline_suggestion_date_v2: {
        values: ("test" | "control")[];
        typeGuard: (value: unknown) => value is "test" | "control";
        defaultValue: "test" | "control";
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    platform_editor_tables_drag_and_drop: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    platform_editor_tables_table_selector: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    platform_editor_usesharedpluginstateselector: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    platform_renderer_fix_analytics_memo_callback: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    editor_ai_contextual_selection_toolbar_button: {
        values: ("test" | "control")[];
        typeGuard: (value: unknown) => value is "test" | "control";
        defaultValue: "test" | "control";
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    editor_ai_converge_free_gen_on_rovo: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    editor_ai_cmd_palette_remove_retry: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    platform_editor_stop_width_reflows: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    platform_editor_core_static_emotion: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    editor_ai_comment_freegen_rovo: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    confluence_p2m_style_recalc_and_expand_joint_exp: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    platform_editor_nodevisibility: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    platform_editor_breakout_resizing: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    platform_editor_exp_disable_lnv: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    platform_editor_ai_quickstart_command: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    editor_ai_in_editor_streaming: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    platform_editor_hide_floating_toolbar_in_ssr: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    platform_editor_smart_card_open_overlay_perf: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    platform_editor_toolbar_rerender_optimization_exp: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
    platform_editor_controls_toolbar_pinning_exp: {
        typeGuard: typeof import("./type-guards").isBoolean;
        defaultValue: boolean;
        productKeys?: import("./types").ProductKeys | undefined;
        param: string;
    };
};
