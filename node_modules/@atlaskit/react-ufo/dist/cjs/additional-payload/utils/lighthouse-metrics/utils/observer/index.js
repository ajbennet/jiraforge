"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.startLSObserver = startLSObserver;
exports.startLTObserver = startLTObserver;
var _const = require("../../const");
var _buffer = require("../buffer");
var pe = null;
function getObserver() {
  if (typeof PerformanceObserver !== 'function') {
    // Only instantiate the IntersectionObserver if it's supported
    return null;
  }
  if (pe !== null) {
    return pe;
  }
  var performanceObserverCallback = function performanceObserverCallback(list) {
    list.getEntries().forEach(function (entry) {
      if (entry.entryType === _const.PerformanceObserverEntryTypes.LayoutShift) {
        _buffer.EntriesBuffer[_const.PerformanceObserverEntryTypes.LayoutShift].push(entry);
      }
      if (entry.entryType === _const.PerformanceObserverEntryTypes.LongTask) {
        _buffer.EntriesBuffer[_const.PerformanceObserverEntryTypes.LongTask].push(entry);
      }
    });
  };
  pe = new PerformanceObserver(performanceObserverCallback);
  return pe;
}
function startLSObserver() {
  var _getObserver;
  (_getObserver = getObserver()) === null || _getObserver === void 0 || _getObserver.observe({
    type: _const.PerformanceObserverEntryTypes.LayoutShift,
    buffered: true
  });
}
function startLTObserver() {
  var _getObserver2;
  (_getObserver2 = getObserver()) === null || _getObserver2 === void 0 || _getObserver2.observe({
    type: _const.PerformanceObserverEntryTypes.LongTask,
    buffered: true
  });
}