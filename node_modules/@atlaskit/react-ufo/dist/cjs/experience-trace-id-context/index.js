"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.clearActiveTrace = clearActiveTrace;
exports.generateSpanId = generateSpanId;
exports.getActiveTrace = getActiveTrace;
exports.getActiveTraceAsQueryParams = getActiveTraceAsQueryParams;
exports.getActiveTraceHttpRequestHeaders = getActiveTraceHttpRequestHeaders;
exports.setActiveTrace = setActiveTrace;
exports.setInteractionActiveTrace = setInteractionActiveTrace;
var _makeTraceHttpRequestHeaders = require("./utils/make-trace-http-request-headers");
var state = {
  context: null
};
function generateSpanId() {
  return Array.from(new Array(16), function () {
    return Math.floor(Math.random() * 16).toString(16);
  }).join('');
}
function setInteractionActiveTrace(interactionId, experienceType) {
  setActiveTrace(interactionId.replace(/-/g, ''), generateSpanId(), experienceType);
}
function setActiveTrace(traceId, spanId, type) {
  state.context = {
    traceId: traceId,
    spanId: spanId,
    type: type
  };
}
function getActiveTrace() {
  return state.context || undefined;
}
function clearActiveTrace() {
  state.context = null;
}
function getActiveTraceHttpRequestHeaders(_url) {
  if (state.context === null) {
    return null;
  }
  var _state$context = state.context,
    traceId = _state$context.traceId,
    spanId = _state$context.spanId;
  return (0, _makeTraceHttpRequestHeaders.makeTraceHttpRequestHeaders)(traceId, spanId);
}
function getActiveTraceAsQueryParams(_url) {
  var traceHeaders = getActiveTraceHttpRequestHeaders(_url);
  return traceHeaders ? new URLSearchParams(traceHeaders).toString().toLowerCase() : null;
}