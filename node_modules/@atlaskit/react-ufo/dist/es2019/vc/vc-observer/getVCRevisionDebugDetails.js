export function getVCRevisionDebugDetails({
  revision,
  isClean,
  abortReason,
  VCEntries,
  componentsLog,
  interactionId
}) {
  return {
    revision,
    isClean,
    abortReason,
    vcLogs: VCEntries.map(entry => ({
      time: entry.time,
      viewportPercentage: entry.vc,
      entries: entry.elements.map(element => {
        var _componentsLog$entry$;
        const logEntry = (_componentsLog$entry$ = componentsLog[entry.time]) === null || _componentsLog$entry$ === void 0 ? void 0 : _componentsLog$entry$.find(log => log.targetName === element);
        return {
          elementName: element,
          type: logEntry === null || logEntry === void 0 ? void 0 : logEntry.type,
          rect: logEntry === null || logEntry === void 0 ? void 0 : logEntry.intersectionRect,
          visible: true,
          attributeName: logEntry === null || logEntry === void 0 ? void 0 : logEntry.attributeName,
          oldValue: logEntry === null || logEntry === void 0 ? void 0 : logEntry.oldValue,
          newValue: logEntry === null || logEntry === void 0 ? void 0 : logEntry.newValue
        };
      })
    })),
    interactionId
  };
}