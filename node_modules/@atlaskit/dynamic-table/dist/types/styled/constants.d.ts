import { type ReactNode, type Ref } from 'react';
export interface TruncateStyleProps {
    width?: number;
    isFixedSize?: boolean;
    shouldTruncate?: boolean;
    children?: ReactNode;
    testId?: string;
    innerRef?: Ref<HTMLTableCellElement | HTMLTableRowElement> | undefined;
    className?: string;
}
export declare const truncationWidthStyles: import("@emotion/react").SerializedStyles;
export declare const fixedSizeTruncateStyles: import("@emotion/react").SerializedStyles;
export declare const overflowTruncateStyles: import("@emotion/react").SerializedStyles;
export declare const getTruncationStyleVars: ({ width }: TruncateStyleProps) => {
    "--local-dynamic-table-width": string;
} | undefined;
export declare const cellStyles: import("@emotion/react").SerializedStyles;
