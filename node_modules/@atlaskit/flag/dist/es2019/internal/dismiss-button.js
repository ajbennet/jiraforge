import React, { memo } from 'react';
import CloseIcon from '@atlaskit/icon/core/migration/close--cross';
import ChevronDownIcon from '@atlaskit/icon/utility/migration/chevron-down--hipchat-chevron-down';
import ChevronUpIcon from '@atlaskit/icon/utility/migration/chevron-up--hipchat-chevron-up';
import { Pressable, xcss } from '@atlaskit/primitives';
import { flagTextColorToken } from '../theme';
const buttonStyles = xcss({
  display: 'flex',
  width: '24px',
  height: '24px',
  padding: 'space.0',
  alignItems: 'center',
  justifyContent: 'center',
  flex: '0 0 auto',
  background: 'none',
  borderStyle: 'none',
  cursor: 'pointer',
  whiteSpace: 'nowrap'
});
const DismissButtonComponent = ({
  appearance,
  onClick,
  isBold,
  isExpanded,
  testId
}) => {
  let ButtonIcon = CloseIcon;
  let buttonLabel = 'Dismiss';
  let size = 'small';
  let buttonTestId = testId && `${testId}-dismiss`;
  if (isBold) {
    ButtonIcon = isExpanded ? ChevronUpIcon : ChevronDownIcon;
    buttonLabel = isExpanded ? 'Collapse' : 'Expand';
    size = 'medium';
    buttonTestId = testId && `${testId}-toggle`;
  }
  return /*#__PURE__*/React.createElement(Pressable, {
    xcss: buttonStyles,
    onClick: onClick,
    "aria-expanded": isBold ? isExpanded : undefined,
    testId: buttonTestId,
    "aria-label": buttonLabel
  }, /*#__PURE__*/React.createElement(ButtonIcon, {
    label: "",
    LEGACY_size: size,
    LEGACY_primaryColor: flagTextColorToken[appearance],
    color: flagTextColorToken[appearance]
  }));
};
const DismissButton = /*#__PURE__*/memo(DismissButtonComponent);

// eslint-disable-next-line @repo/internal/react/require-jsdoc
export default DismissButton;