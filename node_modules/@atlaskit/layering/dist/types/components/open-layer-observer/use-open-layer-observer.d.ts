import { type OpenLayerObserverInternalAPI } from './types';
type OpenLayerObserverPublicAPI = Pick<OpenLayerObserverInternalAPI, 'getCount' | 'onChange'>;
/**
 * A hook for use within an `OpenLayerObserver` component. It provides access to:
 *
 * - `getCount`: a function that returns the current count of open layers under the observer.
 * - `onChange`: a function that allows you to subscribe to changes in the layer count. It returns a
 * cleanup function to unsubscribe, which you should call when the component unmounts.
 *
 * Example usage:
 * ```tsx
 * const openLayerObserver = useOpenLayerObserver();
 * useEffect(() => {
 *   return openLayerObserver.onChange(function onChange({ count })) {
 *     // react to changes in the layer count
 *   });
 * }, [openLayerObserver]);
 * ```
 */
export declare function useOpenLayerObserver(): OpenLayerObserverPublicAPI;
export {};
