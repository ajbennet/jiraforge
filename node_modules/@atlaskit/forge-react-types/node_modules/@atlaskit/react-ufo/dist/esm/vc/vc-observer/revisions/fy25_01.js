import _createClass from "@babel/runtime/helpers/createClass";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
import { FY24_01Classifier } from './fy24_01';
export var FY25_01Classifier = /*#__PURE__*/function (_FY24_01Classifier) {
  function FY25_01Classifier() {
    var _this;
    _classCallCheck(this, FY25_01Classifier);
    _this = _callSuper(this, FY25_01Classifier);
    _defineProperty(_this, "revision", 'fy25.01');
    _defineProperty(_this, "types", ['attr']);
    _defineProperty(_this, "filters", [{
      name: 'not-visible',
      filter: function filter(_ref) {
        var type = _ref.type,
          ignoreReason = _ref.ignoreReason;
        return !(ignoreReason !== null && ignoreReason !== void 0 && ignoreReason.includes('not-visible'));
      }
    }]);
    _defineProperty(_this, "removedFilters", []);
    _this.mergeConfig();
    return _this;
  }
  _inherits(FY25_01Classifier, _FY24_01Classifier);
  return _createClass(FY25_01Classifier);
}(FY24_01Classifier);
export var revFY25_01Classifier = new FY25_01Classifier();