import { NON_BOOLEAN_VALUE } from '../constants';
const startsAsObject = value => {
  try {
    if (value.charAt(0) === '{') {
      return true;
    }
  } catch (e) {
    return false;
  }
  return false;
};
const isObject = value => value && typeof value === 'object' && value.constructor === Object;
const isString = input => {
  let result;
  try {
    result = typeof input === 'string' || input instanceof String;
  } catch (err) {
    // swallow any errors
    result = false;
  }
  return result;
};
export const shouldRedactValue = value => isString(value) && startsAsObject(value) || isObject(value);
export const redactValue = featureFlagValue => shouldRedactValue(featureFlagValue) ? NON_BOOLEAN_VALUE : featureFlagValue;