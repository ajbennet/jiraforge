import { makeTraceHttpRequestHeaders } from './utils/make-trace-http-request-headers';
const state = {
  context: null
};
export const generateSpanId = () => {
  return Array.from(new Array(16), () => Math.floor(Math.random() * 16).toString(16)).join('');
};
export const setInteractionActiveTrace = (interactionId, experienceType) => {
  setActiveTrace(interactionId.replace(/-/g, ''), generateSpanId(), experienceType);
};
export const setActiveTrace = (traceId, spanId, type) => {
  state.context = {
    traceId,
    spanId,
    type
  };
};
export const getActiveTrace = () => state.context || undefined;
export const clearActiveTrace = () => {
  state.context = null;
};
export const getActiveTraceHttpRequestHeaders = _url => {
  if (state.context === null) {
    return null;
  }
  const {
    traceId,
    spanId
  } = state.context;
  return makeTraceHttpRequestHeaders(traceId, spanId);
};
export const getActiveTraceAsQueryParams = _url => {
  const traceHeaders = getActiveTraceHttpRequestHeaders(_url);
  return traceHeaders ? new URLSearchParams(traceHeaders).toString().toLowerCase() : null;
};