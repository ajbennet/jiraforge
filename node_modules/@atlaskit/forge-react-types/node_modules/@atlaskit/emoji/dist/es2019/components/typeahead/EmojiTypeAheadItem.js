import _extends from "@babel/runtime/helpers/extends";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import React from 'react';
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { jsx } from '@emotion/react';
import { PureComponent } from 'react';
import { toEmojiId } from '../../util/type-helpers';
import { leftClick } from '../../util/mouse';
import { EmojiPreviewComponent } from '../common/EmojiPreviewComponent';
import { EmojiCommonProvider } from '../../context/EmojiCommonProvider';
import { typeAheadItem, selected as selectedStyles, typeAheadItemRow, typeaheadSelected } from './styles';
class EmojiTypeAheadItemInternal extends PureComponent {
  constructor(...args) {
    super(...args);
    // internal, used for callbacks
    _defineProperty(this, "onEmojiSelected", event => {
      const {
        emoji,
        onSelection
      } = this.props;
      if (leftClick(event) && onSelection) {
        event.preventDefault();
        onSelection(toEmojiId(emoji), emoji, event);
      }
    });
    _defineProperty(this, "onEmojiMenuItemMouseMove", event => {
      const {
        emoji,
        onMouseMove
      } = this.props;
      if (onMouseMove) {
        onMouseMove(toEmojiId(emoji), emoji, event);
      }
    });
  }
  render() {
    const {
      selected,
      emoji,
      emojiProvider
    } = this.props;
    const classes = [typeAheadItem, selected && selectedStyles];
    return jsx(EmojiCommonProvider, {
      emojiProvider: emojiProvider
    }, jsx("div", {
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
      className: `ak-emoji-typeahead-item ${selected ? typeaheadSelected : ''}`
      // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage -- Ignored via go/DSP-18766
      ,
      css: classes,
      onMouseDown: this.onEmojiSelected,
      onMouseMove: this.onEmojiMenuItemMouseMove,
      "data-emoji-id": emoji.shortName,
      ref: this.props.forwardedRef
    }, jsx("div", {
      css: typeAheadItemRow
    }, emoji && jsx(EmojiPreviewComponent, {
      emoji: emoji
    }))));
  }
}
const EmojiTypeAheadItem = /*#__PURE__*/React.forwardRef((props, ref) => {
  return jsx(EmojiTypeAheadItemInternal, _extends({}, props, {
    forwardedRef: ref
  }));
});
export default EmojiTypeAheadItem;