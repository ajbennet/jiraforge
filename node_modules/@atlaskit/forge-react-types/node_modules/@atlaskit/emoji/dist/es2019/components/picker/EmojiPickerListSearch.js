/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import SearchIcon from '@atlaskit/icon/core/migration/search';
import TextField from '@atlaskit/textfield';
import VisuallyHidden from '@atlaskit/visually-hidden';
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { jsx } from '@emotion/react';
import React, { useLayoutEffect, useRef, useState } from 'react';
import { useIntl } from 'react-intl-next';
import { useDebouncedCallback } from 'use-debounce';
import { EMOJI_SEARCH_DEBOUNCE } from '../../util/constants';
import { hidden } from '../common/styles';
import { messages } from '../i18n';
import { input, pickerSearch, searchIcon } from './styles';
export const emojiPickerSearchTestId = 'emoji-picker-search';
export const EmojiPickerListSearch = props => {
  const {
    style,
    query,
    isVisible = true,
    resultsCount,
    onChange
  } = props;
  const textRef = useRef(null);
  const [dirty, setDirty] = useState(false);
  const {
    formatMessage
  } = useIntl();

  // Debounce callback
  const [debouncedSearch] = useDebouncedCallback(value => {
    onChange(value);
    setDirty(true);
  },
  // delay in ms
  EMOJI_SEARCH_DEBOUNCE);
  const handleOnChange = e => {
    debouncedSearch(e.target.value);
  };
  useLayoutEffect(() => {
    requestAnimationFrame(() => {
      if (textRef) {
        var _textRef$current;
        (_textRef$current = textRef.current) === null || _textRef$current === void 0 ? void 0 : _textRef$current.focus();
      }
    });
  }, []);
  return (
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop, @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
    jsx("div", {
      css: [pickerSearch, !isVisible && hidden],
      style: style
    }, jsx(VisuallyHidden, {
      id: "emoji-search-results-status",
      role: "status"
    }, dirty && query === '' && formatMessage(messages.searchResultsStatusSeeAll), query !== '' && formatMessage(messages.searchResultsStatusSeeAll, {
      // change to messages.searchResultsStatus once translated
      count: resultsCount
    })), jsx(TextField, {
      role: "searchbox",
      "aria-label": formatMessage(messages.searchLabel)
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
      ,
      css: input,
      autoComplete: "off",
      name: "search",
      placeholder: `${formatMessage(messages.searchPlaceholder)}...`,
      defaultValue: query || '',
      onChange: handleOnChange,
      elemBeforeInput:
      // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
      jsx("span", {
        css: searchIcon
      }, jsx(SearchIcon, {
        LEGACY_margin: "0 0 0 2px",
        color: "currentColor",
        spacing: "spacious",
        label: ""
      })),
      testId: emojiPickerSearchTestId,
      ref: textRef,
      isCompact: true
    }))
  );
};