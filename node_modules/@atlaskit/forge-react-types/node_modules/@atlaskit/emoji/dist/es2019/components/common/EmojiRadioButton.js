/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import React, { memo, forwardRef } from 'react';
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { jsx } from '@emotion/react';
import { leftClick } from '../../util/mouse';
import { emojiButton, emojiRadio } from './styles';
import Emoji from './Emoji';
import { TONESELECTOR_KEYBOARD_KEYS_SUPPORTED } from '../../util/constants';
import VisuallyHidden from '@atlaskit/visually-hidden';
const handleMouseDown = (props, event) => {
  const {
    onSelected
  } = props;
  event.preventDefault();
  if (onSelected && leftClick(event)) {
    onSelected();
  }
};
const handleKeyPress = (props, event) => {
  if (TONESELECTOR_KEYBOARD_KEYS_SUPPORTED.includes(event.key)) {
    const {
      onSelected
    } = props;
    event.preventDefault();
    event.stopPropagation();
    if (onSelected) {
      onSelected();
    }
  }
};
export const EmojiRadioButton = /*#__PURE__*/forwardRef((props, ref) => {
  const {
    emoji,
    selectOnHover,
    ariaLabelText,
    defaultChecked
  } = props;
  return (
    // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions
    jsx("label", {
      // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
      css: emojiButton,
      onMouseDown: event => handleMouseDown(props, event),
      onKeyDown: event => handleKeyPress(props, event)
    }, jsx(VisuallyHidden, null, ariaLabelText), jsx("input", {
      ref: ref,
      "data-testid": ariaLabelText,
      type: "radio",
      name: "skin-tone"
      // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
      ,
      css: emojiRadio,
      defaultChecked: defaultChecked
    }), jsx(Emoji, {
      emoji: emoji,
      selectOnHover: selectOnHover,
      shouldBeInteractive: false,
      "aria-hidden": true
    }))
  );
});
export default /*#__PURE__*/memo(EmojiRadioButton);