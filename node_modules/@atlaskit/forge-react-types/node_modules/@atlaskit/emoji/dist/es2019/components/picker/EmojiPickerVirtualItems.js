import _extends from "@babel/runtime/helpers/extends";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { jsx } from '@emotion/react';
import Spinner from '@atlaskit/spinner';
import EmojiPickerCategoryHeading from './EmojiPickerCategoryHeading';
import EmojiPickerEmojiRow from './EmojiPickerEmojiRow';
import { sizes } from './EmojiPickerSizes';
import { emojiPickerSpinner } from './styles';
export class AbstractItem {
  constructor(props, height) {
    this.props = props;
    this.height = height;
  }
}
export class EmojisRowItem extends AbstractItem {
  constructor(props) {
    super(props, sizes.emojiRowHeight);
    _defineProperty(this, "renderItem", context => jsx(EmojiPickerEmojiRow, _extends({}, this.props, {
      virtualItemContext: context
    })));
  }
}
export class LoadingItem extends AbstractItem {
  constructor() {
    super({}, sizes.loadingRowHeight);
    _defineProperty(this, "renderItem", () =>
    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
    jsx("div", {
      css: emojiPickerSpinner
    }, jsx("div", null, jsx(Spinner, {
      size: "medium"
    }))));
  }
}
export class CategoryHeadingItem extends AbstractItem {
  constructor(props) {
    super(props, sizes.categoryHeadingHeight);
    _defineProperty(this, "renderItem", () => jsx(EmojiPickerCategoryHeading, this.props));
  }
}
export const virtualItemRenderer = (rows, context) => {
  const {
    index,
    key
  } = context;
  const row = rows[index];
  return jsx("div", {
    key: key
  }, row && row.renderItem(context));
};