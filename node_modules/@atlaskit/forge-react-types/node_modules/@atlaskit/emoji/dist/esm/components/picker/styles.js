import _defineProperty from "@babel/runtime/helpers/defineProperty";
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { css } from '@emotion/react';
import { emojiPickerBorderColor, emojiPickerBoxShadow } from '../../util/shared-styles';
import { emojiSprite, placeholder, emojiNodeStyles } from '../common/styles';
import { defaultEmojiPickerSize, emojiPickerHeight, emojiPickerHeightWithPreview, emojiPickerMinHeight, emojiPickerWidth } from '../../util/constants';
import { N30, N30A, N900 } from '@atlaskit/theme/colors';
import { emojiPickerHeightOffset } from './utils';

// Level 1 - picker
export var emojiPicker = function emojiPicker(hasPreview) {
  var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEmojiPickerSize;
  var heightOffset = emojiPickerHeightOffset(size);
  return css({
    display: 'flex',
    flexDirection: 'column',
    justifyContent: 'space-between',
    background: "var(--ds-surface-overlay, white)",
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    border: "".concat(emojiPickerBorderColor, " 1px solid"),
    borderRadius: "var(--ds-border-radius-100, 3px)",
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    boxShadow: emojiPickerBoxShadow,
    height: "".concat(
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
    hasPreview ? emojiPickerHeightWithPreview + heightOffset : emojiPickerHeight + heightOffset, "px"),
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    width: "".concat(emojiPickerWidth, "px"),
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    minWidth: "".concat(emojiPickerWidth, "px"),
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    minHeight: "".concat(emojiPickerMinHeight + heightOffset, "px"),
    maxHeight: 'calc(80vh - 86px)' // ensure showing full picker in small device: mobile header is 40px (Jira) - 56px(Confluence and Atlas), reaction picker height is 24px with margin 6px,
  });
};

// Level 2

/// Category Selector
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
export var categorySelector = css({
  flex: '0 0 auto',
  backgroundColor: "var(--ds-surface-sunken, ".concat(N30, ")"),
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
  button: {
    display: 'flex' // this will ensure the button height is concise per design
  }
});

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
export var categorySelectorTablist = css({
  padding: "var(--ds-space-075, 6px)".concat(" ", "var(--ds-space-100, 8px)"),
  display: 'flex',
  flexDirection: 'row',
  justifyContent: 'space-around',
  alignItems: 'center'
});

/// EmojiPickerList

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
export var emojiPickerList = css({
  display: 'flex',
  flexDirection: 'column',
  flex: '1 1 auto',
  // To force Firefox/IE/Edge to shrink the list, if necessary (e.g. when upload panel in place)
  height: '0'
});

// focus style is enabled by default - turn it off
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
export var virtualList = css({
  overflowX: 'hidden',
  overflowY: 'auto',
  '&:focus': {
    outline: 'none'
  },
  paddingBottom: "var(--ds-space-100, 8px)"
});

//// Search

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
export var searchIcon = css({
  opacity: 0.5,
  marginLeft: "var(--ds-space-negative-025, -2px)"
});

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
export var input = css(_defineProperty(_defineProperty({
  boxSizing: 'border-box',
  color: 'inherit',
  cursor: 'inherit',
  font: "var(--ds-font-body, normal 400 14px/20px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, system-ui, \"Helvetica Neue\", sans-serif)",
  outline: 'none',
  padding: "1px ".concat("var(--ds-space-0, 0px)", " ", "var(--ds-space-025, 2px)", " ", "var(--ds-space-075, 6px)"),
  width: '100%'
}, '&:invalid', {
  boxShadow: 'none'
}), '&::-ms-clear', {
  display: 'none'
}));

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
export var pickerSearch = css({
  boxSizing: 'border-box',
  padding: "var(--ds-space-150, 12px)",
  width: '100%'
});

//// Loading/Spinner

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
export var emojiPickerSpinner = css({
  display: 'flex',
  width: '100%',
  height: '150px',
  justifyContent: 'center',
  alignItems: 'center',
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
  '>div': {
    flex: '0 0 auto'
  }
});

//// Category/Result

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
export var emojiPickerRow = css({
  marginLeft: "var(--ds-space-100, 8px)"
});

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
export var emojiCategoryTitle = css({
  boxSizing: 'border-box',
  color: "var(--ds-text, ".concat(N900, ")"),
  font: "var(--ds-font-body, normal 400 14px/20px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, system-ui, \"Helvetica Neue\", sans-serif)",
  padding: "var(--ds-space-075, 6px)".concat(" ", "var(--ds-space-100, 8px)"),
  textTransform: 'lowercase',
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
  '&:first-letter': {
    // eslint-disable-next-line @atlaskit/design-system/use-tokens-typography
    textTransform: 'uppercase'
  }
});

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
export var emojiItem = css(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({
  display: 'inline-block',
  textAlign: 'center',
  width: '40px'
}, "& .".concat(emojiNodeStyles), {
  cursor: 'pointer',
  padding: "var(--ds-space-100, 8px)",
  borderRadius: '5px',
  width: '24px',
  height: '24px'
}), "& .".concat(placeholder), {
  padding: "var(--ds-space-0, 0px)",
  margin: "var(--ds-space-100, 8px)",
  minWidth: '24px',
  maxWidth: '24px'
}), "& .".concat(emojiNodeStyles, " .").concat(placeholder), {
  margin: "var(--ds-space-0, 0px)"
}), "& .".concat(emojiNodeStyles, " > img"), {
  position: 'relative',
  left: '50%',
  top: '50%',
  transform: 'translateX(-50%) translateY(-50%)',
  maxHeight: '24px',
  maxWidth: '24px',
  display: 'block'
}), "& .".concat(emojiNodeStyles, " > .").concat(emojiSprite), {
  height: '24px',
  width: '24px'
}));

/// Footer
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
export var emojiPickerFooter = css({
  flex: '0 0 auto'
});

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
export var emojiPickerFooterWithTopShadow = css({
  borderTop: "2px solid ".concat("var(--ds-border, ".concat(N30A, ")")),
  boxShadow: "0px -1px 1px 0px ".concat("var(--ds-border, rgba(0, 0, 0, 0.1))")
});

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
export var emojiActionsContainerWithBottomShadow = css({
  borderBottom: "2px solid ".concat("var(--ds-border, ".concat(N30A, ")")),
  boxShadow: "0px 1px 1px 0px ".concat("var(--ds-border, rgba(0, 0, 0, 0.1))")
});