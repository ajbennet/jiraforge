"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tonePreviewTestId = exports.default = exports.TonePreviewButton = void 0;
var _react = require("react");
var _react2 = require("@emotion/react");
var _styles = require("./styles");
var _Emoji = _interopRequireDefault(require("./Emoji"));
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var tonePreviewTestId = exports.tonePreviewTestId = 'tone-preview';
var TonePreviewButton = exports.TonePreviewButton = /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
  var emoji = props.emoji,
    selectOnHover = props.selectOnHover,
    ariaLabelText = props.ariaLabelText,
    ariaExpanded = props.ariaExpanded,
    onSelected = props.onSelected,
    _props$isVisible = props.isVisible,
    isVisible = _props$isVisible === void 0 ? true : _props$isVisible;
  return (0, _react2.jsx)("button", {
    ref: ref
    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
    ,
    css: [_styles.emojiButton, !isVisible && _styles.hidden],
    onClick: onSelected,
    "aria-label": ariaLabelText,
    "aria-expanded": ariaExpanded,
    "aria-controls": "emoji-picker-tone-selector"
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    ,
    style: {
      overflow: 'hidden'
    },
    "data-testid": tonePreviewTestId,
    type: "button"
  }, (0, _react2.jsx)(_Emoji.default, {
    emoji: emoji,
    selectOnHover: selectOnHover,
    shouldBeInteractive: false,
    "aria-hidden": true
  }));
});
var _default = exports.default = /*#__PURE__*/(0, _react.memo)(TonePreviewButton);