"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.emojiErrorScreenreaderTestId = exports.emojiErrorMessageTooltipTestId = exports.emojiErrorMessageTestId = exports.emojiErrorIconTestId = exports.default = void 0;
var _react = require("@emotion/react");
var _tooltip = _interopRequireDefault(require("@atlaskit/tooltip"));
var _error = _interopRequireDefault(require("@atlaskit/icon/core/migration/error"));
var _reactIntlNext = require("react-intl-next");
var _i18n = require("../i18n");
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var emojiErrorScreenreaderTestId = exports.emojiErrorScreenreaderTestId = 'emoji-error-screenreader-message';
var emojiErrorMessageTestId = exports.emojiErrorMessageTestId = 'emoji-error-message';
var emojiErrorMessageTooltipTestId = exports.emojiErrorMessageTooltipTestId = 'emoji-error-message-tooltip';
var emojiErrorIconTestId = exports.emojiErrorIconTestId = 'emoji-error-icon';
var EmojiErrorMessage = function EmojiErrorMessage(props) {
  var messageStyles = props.messageStyles,
    message = props.message,
    tooltip = props.tooltip;
  var _useIntl = (0, _reactIntlNext.useIntl)(),
    formatMessage = _useIntl.formatMessage;
  var visualContent = tooltip ?
  // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage -- Ignored via go/DSP-18766
  (0, _react.jsx)("div", {
    css: messageStyles,
    "data-testid": emojiErrorMessageTestId
  }, (0, _react.jsx)(_tooltip.default, {
    content: message,
    position: "top",
    testId: emojiErrorMessageTooltipTestId
  }, (0, _react.jsx)(_error.default, {
    color: "currentColor",
    label: formatMessage(_i18n.messages.error),
    LEGACY_size: "medium",
    spacing: "spacious",
    testId: emojiErrorIconTestId
  }))) :
  // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage -- Ignored via go/DSP-18766
  (0, _react.jsx)("div", {
    css: messageStyles,
    "data-testid": emojiErrorMessageTestId
  }, (0, _react.jsx)(_error.default, {
    color: "currentColor",
    label: formatMessage(_i18n.messages.error),
    LEGACY_size: "small"
  }), message);
  return visualContent;
};
var _default = exports.default = EmojiErrorMessage;