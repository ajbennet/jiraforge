"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.virtualList = exports.searchIcon = exports.pickerSearch = exports.input = exports.emojiPickerSpinner = exports.emojiPickerRow = exports.emojiPickerList = exports.emojiPickerFooterWithTopShadow = exports.emojiPickerFooter = exports.emojiPicker = exports.emojiItem = exports.emojiCategoryTitle = exports.emojiActionsContainerWithBottomShadow = exports.categorySelectorTablist = exports.categorySelector = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = require("@emotion/react");
var _sharedStyles = require("../../util/shared-styles");
var _styles = require("../common/styles");
var _constants = require("../../util/constants");
var _colors = require("@atlaskit/theme/colors");
var _utils = require("./utils");
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

// Level 1 - picker
var emojiPicker = exports.emojiPicker = function emojiPicker(hasPreview) {
  var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _constants.defaultEmojiPickerSize;
  var heightOffset = (0, _utils.emojiPickerHeightOffset)(size);
  return (0, _react.css)({
    display: 'flex',
    flexDirection: 'column',
    justifyContent: 'space-between',
    background: "var(--ds-surface-overlay, white)",
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    border: "".concat(_sharedStyles.emojiPickerBorderColor, " 1px solid"),
    borderRadius: "var(--ds-border-radius-100, 3px)",
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    boxShadow: _sharedStyles.emojiPickerBoxShadow,
    height: "".concat(
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
    hasPreview ? _constants.emojiPickerHeightWithPreview + heightOffset : _constants.emojiPickerHeight + heightOffset, "px"),
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    width: "".concat(_constants.emojiPickerWidth, "px"),
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    minWidth: "".concat(_constants.emojiPickerWidth, "px"),
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    minHeight: "".concat(_constants.emojiPickerMinHeight + heightOffset, "px"),
    maxHeight: 'calc(80vh - 86px)' // ensure showing full picker in small device: mobile header is 40px (Jira) - 56px(Confluence and Atlas), reaction picker height is 24px with margin 6px,
  });
};

// Level 2

/// Category Selector
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var categorySelector = exports.categorySelector = (0, _react.css)({
  flex: '0 0 auto',
  backgroundColor: "var(--ds-surface-sunken, ".concat(_colors.N30, ")"),
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
  button: {
    display: 'flex' // this will ensure the button height is concise per design
  }
});

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var categorySelectorTablist = exports.categorySelectorTablist = (0, _react.css)({
  padding: "var(--ds-space-075, 6px)".concat(" ", "var(--ds-space-100, 8px)"),
  display: 'flex',
  flexDirection: 'row',
  justifyContent: 'space-around',
  alignItems: 'center'
});

/// EmojiPickerList

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var emojiPickerList = exports.emojiPickerList = (0, _react.css)({
  display: 'flex',
  flexDirection: 'column',
  flex: '1 1 auto',
  // To force Firefox/IE/Edge to shrink the list, if necessary (e.g. when upload panel in place)
  height: '0'
});

// focus style is enabled by default - turn it off
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var virtualList = exports.virtualList = (0, _react.css)({
  overflowX: 'hidden',
  overflowY: 'auto',
  '&:focus': {
    outline: 'none'
  },
  paddingBottom: "var(--ds-space-100, 8px)"
});

//// Search

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var searchIcon = exports.searchIcon = (0, _react.css)({
  opacity: 0.5,
  marginLeft: "var(--ds-space-negative-025, -2px)"
});

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var input = exports.input = (0, _react.css)((0, _defineProperty2.default)((0, _defineProperty2.default)({
  boxSizing: 'border-box',
  color: 'inherit',
  cursor: 'inherit',
  font: "var(--ds-font-body, normal 400 14px/20px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, system-ui, \"Helvetica Neue\", sans-serif)",
  outline: 'none',
  padding: "1px ".concat("var(--ds-space-0, 0px)", " ", "var(--ds-space-025, 2px)", " ", "var(--ds-space-075, 6px)"),
  width: '100%'
}, '&:invalid', {
  boxShadow: 'none'
}), '&::-ms-clear', {
  display: 'none'
}));

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var pickerSearch = exports.pickerSearch = (0, _react.css)({
  boxSizing: 'border-box',
  padding: "var(--ds-space-150, 12px)",
  width: '100%'
});

//// Loading/Spinner

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var emojiPickerSpinner = exports.emojiPickerSpinner = (0, _react.css)({
  display: 'flex',
  width: '100%',
  height: '150px',
  justifyContent: 'center',
  alignItems: 'center',
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
  '>div': {
    flex: '0 0 auto'
  }
});

//// Category/Result

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var emojiPickerRow = exports.emojiPickerRow = (0, _react.css)({
  marginLeft: "var(--ds-space-100, 8px)"
});

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var emojiCategoryTitle = exports.emojiCategoryTitle = (0, _react.css)({
  boxSizing: 'border-box',
  color: "var(--ds-text, ".concat(_colors.N900, ")"),
  font: "var(--ds-font-body, normal 400 14px/20px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, system-ui, \"Helvetica Neue\", sans-serif)",
  padding: "var(--ds-space-075, 6px)".concat(" ", "var(--ds-space-100, 8px)"),
  textTransform: 'lowercase',
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors -- Ignored via go/DSP-18766
  '&:first-letter': {
    // eslint-disable-next-line @atlaskit/design-system/use-tokens-typography
    textTransform: 'uppercase'
  }
});

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var emojiItem = exports.emojiItem = (0, _react.css)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)({
  display: 'inline-block',
  textAlign: 'center',
  width: '40px'
}, "& .".concat(_styles.emojiNodeStyles), {
  cursor: 'pointer',
  padding: "var(--ds-space-100, 8px)",
  borderRadius: '5px',
  width: '24px',
  height: '24px'
}), "& .".concat(_styles.placeholder), {
  padding: "var(--ds-space-0, 0px)",
  margin: "var(--ds-space-100, 8px)",
  minWidth: '24px',
  maxWidth: '24px'
}), "& .".concat(_styles.emojiNodeStyles, " .").concat(_styles.placeholder), {
  margin: "var(--ds-space-0, 0px)"
}), "& .".concat(_styles.emojiNodeStyles, " > img"), {
  position: 'relative',
  left: '50%',
  top: '50%',
  transform: 'translateX(-50%) translateY(-50%)',
  maxHeight: '24px',
  maxWidth: '24px',
  display: 'block'
}), "& .".concat(_styles.emojiNodeStyles, " > .").concat(_styles.emojiSprite), {
  height: '24px',
  width: '24px'
}));

/// Footer
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var emojiPickerFooter = exports.emojiPickerFooter = (0, _react.css)({
  flex: '0 0 auto'
});

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var emojiPickerFooterWithTopShadow = exports.emojiPickerFooterWithTopShadow = (0, _react.css)({
  borderTop: "2px solid ".concat("var(--ds-border, ".concat(_colors.N30A, ")")),
  boxShadow: "0px -1px 1px 0px ".concat("var(--ds-border, rgba(0, 0, 0, 0.1))")
});

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var emojiActionsContainerWithBottomShadow = exports.emojiActionsContainerWithBottomShadow = (0, _react.css)({
  borderBottom: "2px solid ".concat("var(--ds-border, ".concat(_colors.N30A, ")")),
  boxShadow: "0px 1px 1px 0px ".concat("var(--ds-border, rgba(0, 0, 0, 0.1))")
});