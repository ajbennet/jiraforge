"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ErrorBoundaryFallbackOld = void 0;
var _react = require("@emotion/react");
var _reactIntlNext = require("react-intl-next");
var _constants = require("../../../../common/constants");
var _genericErrorSvg = require("../../../../common/generic-error-svg");
var _emptyState = require("../../../../common/ui/empty-state");
var _minHeightContainer = require("../../../../common/ui/min-height-container");
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var errorBoundaryFallbackStyles = (0, _react.css)({
  // eslint-disable-next-line @atlaskit/design-system/use-tokens-typography
  lineHeight: 'initial'
});
var messages = (0, _reactIntlNext.defineMessages)({
  heading: {
    defaultMessage: 'Something went wrong!',
    description: 'Heading displayed when an unhandled error occurs.',
    id: 'fabric.linkPicker.unhandledError.heading'
  },
  description: {
    defaultMessage: 'Try reloading the page.',
    description: 'Body message shown underneath the heading when an unhandled error occurs.',
    id: 'fabric.linkPicker.unhandledError.description'
  }
});
var ErrorBoundaryFallbackOld = exports.ErrorBoundaryFallbackOld = function ErrorBoundaryFallbackOld() {
  var intl = (0, _reactIntlNext.useIntl)();
  var header = intl.formatMessage(messages.heading);
  var description = intl.formatMessage(messages.description);
  return (0, _react.jsx)(_minHeightContainer.MinHeightContainer, {
    css: errorBoundaryFallbackStyles,
    minHeight: _constants.LINK_PICKER_MIN_HEIGHT_IN_PX_FALLBACK,
    "data-testid": "link-picker-root-error-boundary-ui"
  }, (0, _react.jsx)(_emptyState.EmptyState, {
    header: header,
    renderImage: function renderImage() {
      return (0, _react.jsx)(_genericErrorSvg.GenericErrorSVG, null);
    },
    description: description
  }));
};