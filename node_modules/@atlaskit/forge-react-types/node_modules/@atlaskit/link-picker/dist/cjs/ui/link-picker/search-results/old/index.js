"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.testIds = exports.SearchResultsOld = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = require("react");
var _react2 = require("@emotion/react");
var _primitives = require("@atlaskit/primitives");
var _spinner = _interopRequireDefault(require("@atlaskit/spinner/spinner"));
var _tabs = _interopRequireWildcard(require("@atlaskit/tabs"));
var _linkSearchError = require("../link-search-error");
var _linkSearchList = require("../link-search-list");
var _scrollingTabs = require("../scrolling-tabs");
var _searchResultsContainer = require("../search-results-container");
var _trackTabViewed = require("../track-tab-viewed");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } /* eslint-disable @atlassian/tangerine/import/no-parent-imports */ /**
 * @jsxRuntime classic
 * @jsx jsx
 */ // eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
var tabsWrapperStyles = (0, _primitives.xcss)({
  marginTop: 'space.150'
});
var spinnerContainerStyles = (0, _react2.css)({
  minHeight: '80px',
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center',
  alignSelf: 'center',
  flexGrow: 1
});
var testIds = exports.testIds = _objectSpread(_objectSpread(_objectSpread({}, _linkSearchError.testIds), _linkSearchList.testIds), {}, {
  tabsLoadingIndicator: 'link-picker.tabs-loading-indicator',
  tabList: 'link-picker-tabs',
  tabItem: 'link-picker-tab'
});
var SearchResultsOld = exports.SearchResultsOld = function SearchResultsOld(_ref) {
  var _activePlugin$errorFa, _activePlugin$errorFa2;
  var tabs = _ref.tabs,
    activeTab = _ref.activeTab,
    activePlugin = _ref.activePlugin,
    isLoadingPlugins = _ref.isLoadingPlugins,
    isLoadingResults = _ref.isLoadingResults,
    isSubmitting = _ref.isSubmitting,
    handleTabChange = _ref.handleTabChange,
    handleSearchListOnChange = _ref.handleSearchListOnChange,
    featureFlags = _ref.featureFlags,
    linkSearchListId = _ref.linkSearchListId,
    error = _ref.error,
    queryState = _ref.queryState,
    items = _ref.items,
    activeIndex = _ref.activeIndex,
    selectedIndex = _ref.selectedIndex,
    handleSelected = _ref.handleSelected,
    handleKeyDown = _ref.handleKeyDown,
    adaptiveHeight = _ref.adaptiveHeight,
    retry = _ref.retry;
  var isActivePlugin = !!activePlugin;
  var tabList = (0, _react2.jsx)(_tabs.TabList, null, tabs.map(function (tab) {
    return (0, _react2.jsx)(_tabs.Tab, {
      key: tab.tabTitle,
      testId: testIds.tabItem
    }, tab.tabTitle);
  }));
  return (0, _react2.jsx)(_searchResultsContainer.SearchResultsContainer, {
    hasTabs: !!tabs.length || isLoadingPlugins,
    adaptiveHeight: adaptiveHeight,
    isLoadingResults: isLoadingResults
  }, isLoadingPlugins && !!queryState && (0, _react2.jsx)("div", {
    css: spinnerContainerStyles
  }, (0, _react2.jsx)(_spinner.default, {
    testId: testIds.tabsLoadingIndicator,
    interactionName: "link-picker-tabs-loading",
    size: "medium"
  })), !isLoadingPlugins && isActivePlugin && !!queryState && (0, _react2.jsx)(_react.Fragment, null, tabs.length > 0 && (0, _react2.jsx)(_primitives.Box, {
    xcss: tabsWrapperStyles
  }, (0, _react2.jsx)(_tabs.default, {
    id: testIds.tabList,
    testId: testIds.tabList,
    selected: activeTab,
    onChange: handleTabChange
  }, featureFlags !== null && featureFlags !== void 0 && featureFlags.scrollingTabs ? (0, _react2.jsx)(_scrollingTabs.ScrollingTabList, null, tabList) : tabList), (0, _react2.jsx)(_trackTabViewed.TrackTabViewed, {
    activePlugin: activePlugin
  })), !error && (0, _react2.jsx)(_linkSearchList.LinkSearchList, {
    id: linkSearchListId,
    role: "listbox",
    ariaReadOnly: isSubmitting,
    items: items,
    isLoading: isLoadingResults,
    selectedIndex: selectedIndex,
    activeIndex: activeIndex,
    onSelect: handleSelected,
    onChange: handleSearchListOnChange,
    onKeyDown: handleKeyDown,
    hasSearchTerm: !!(queryState !== null && queryState !== void 0 && queryState.query.length),
    activePlugin: activePlugin,
    adaptiveHeight: adaptiveHeight
  }), error ? (_activePlugin$errorFa = activePlugin === null || activePlugin === void 0 || (_activePlugin$errorFa2 = activePlugin.errorFallback) === null || _activePlugin$errorFa2 === void 0 ? void 0 : _activePlugin$errorFa2.call(activePlugin, error, retry)) !== null && _activePlugin$errorFa !== void 0 ? _activePlugin$errorFa : (0, _react2.jsx)(_linkSearchError.LinkSearchError, null) : null));
};