import _extends from "@babel/runtime/helpers/extends";
import React from 'react';
import { defineMessages, FormattedMessage, useIntl } from 'react-intl-next';
import { isFedRamp } from '@atlaskit/atlassian-context';
import Button from '@atlaskit/button';
import { GenericErrorSVG } from '../../../../common/generic-error-svg';
import { EmptyState } from '../../../../common/ui/empty-state';
export var CONTACT_SUPPORT_LINK = 'https://support.atlassian.com/contact/';
export var CONTACT_SUPPORT_LINK_FEDRAMP = 'https://gcs.atlassian-us-gov-mod.net/servicedesk/customer/portals';
export var messages = defineMessages({
  searchErrorHeader: {
    id: 'fabric.linkPicker.search.error.heading',
    defaultMessage: 'Weâ€™re having trouble loading data.',
    description: 'Heading message shown when a search throws an error'
  },
  searchErrorDescription: {
    id: 'fabric.linkPicker.search.error.description',
    defaultMessage: 'Refresh the page, or contact <a>Atlassian Support</a> if this keeps happening.',
    description: 'Describes possible actions when search throws an error'
  }
});
export var testIds = {
  searchError: 'link-search-error'
};
export var LinkSearchError = function LinkSearchError() {
  var intl = useIntl();
  return /*#__PURE__*/React.createElement(EmptyState, {
    testId: testIds.searchError,
    header: intl.formatMessage(messages.searchErrorHeader),
    description: /*#__PURE__*/React.createElement(FormattedMessage, _extends({}, messages.searchErrorDescription, {
      values: {
        a: function a(label) {
          return /*#__PURE__*/React.createElement(Button, {
            appearance: "link",
            spacing: "none",
            href: isFedRamp() ? CONTACT_SUPPORT_LINK_FEDRAMP : CONTACT_SUPPORT_LINK,
            target: "_blank",
            rel: "noopener noreferrer"
          }, label);
        }
      }
    })),
    renderImage: function renderImage() {
      return /*#__PURE__*/React.createElement(GenericErrorSVG, null);
    }
  });
};