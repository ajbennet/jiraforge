/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
import "./index.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
import { defineMessages, useIntl } from 'react-intl-next';
import { fg } from '@atlaskit/platform-feature-flags';
import { LINK_PICKER_MIN_HEIGHT_IN_PX_FALLBACK } from '../../../common/constants';
import { GenericErrorSVG } from '../../../common/generic-error-svg';
import { EmptyState } from '../../../common/ui/empty-state';
import { MinHeightContainer } from '../../../common/ui/min-height-container';
import { ErrorBoundaryFallbackOld } from './old';
var errorBoundaryFallbackStyles = null;
var oldErrorBoundaryFallbackStyles = null;
var messages = defineMessages({
  heading: {
    defaultMessage: 'Something went wrong!',
    description: 'Heading displayed when an unhandled error occurs.',
    id: 'fabric.linkPicker.unhandledError.heading'
  },
  description: {
    defaultMessage: 'Try reloading the page.',
    description: 'Body message shown underneath the heading when an unhandled error occurs.',
    id: 'fabric.linkPicker.unhandledError.description'
  }
});
export var ErrorBoundaryFallbackNew = function ErrorBoundaryFallbackNew() {
  var intl = useIntl();
  var header = intl.formatMessage(messages.heading);
  var description = intl.formatMessage(messages.description);
  return /*#__PURE__*/React.createElement(MinHeightContainer, {
    minHeight: LINK_PICKER_MIN_HEIGHT_IN_PX_FALLBACK,
    "data-testid": "link-picker-root-error-boundary-ui",
    className: ax([fg('platform-linking-visual-refresh-v1') ? "_11c816g6" : "_vwz44jg8"])
  }, /*#__PURE__*/React.createElement(EmptyState, {
    header: header,
    renderImage: function renderImage() {
      return /*#__PURE__*/React.createElement(GenericErrorSVG, null);
    },
    description: description
  }));
};
export var ErrorBoundaryFallback = function ErrorBoundaryFallback() {
  if (fg('platform_bandicoots-link-picker-css')) {
    return /*#__PURE__*/React.createElement(ErrorBoundaryFallbackNew, null);
  }
  return /*#__PURE__*/React.createElement(ErrorBoundaryFallbackOld, null);
};