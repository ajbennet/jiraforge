/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import { useLayoutEffect, useRef } from 'react';

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { css, jsx } from '@emotion/react';
import { MinHeightContainer } from '../../../../../common/ui/min-height-container';
var flexColumn = css({
  display: 'flex',
  flexDirection: 'column',
  justifyContent: 'flex-start',
  width: '100%'
});
export var SearchResultsContainerOld = function SearchResultsContainerOld(_ref) {
  var hasTabs = _ref.hasTabs,
    adaptiveHeight = _ref.adaptiveHeight,
    isLoadingResults = _ref.isLoadingResults,
    children = _ref.children;
  var ref = useRef(null);
  var currentHeight = useRef(null);
  var fixedMinHeight = hasTabs ? '347px' : '302px';
  var adaptiveMinHeight = isLoadingResults && !!currentHeight.current ? "".concat(currentHeight.current, "px") : 'auto';
  var minheight = adaptiveHeight ? adaptiveMinHeight : fixedMinHeight;
  useLayoutEffect(function () {
    if (ref.current && adaptiveHeight && !isLoadingResults) {
      currentHeight.current = ref.current.getBoundingClientRect().height;
    }
  });
  return jsx(MinHeightContainer, {
    ref: ref,
    minHeight: minheight,
    css: flexColumn
  }, children);
};