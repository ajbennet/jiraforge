/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import { useLayoutEffect, useRef } from 'react';

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { css, jsx } from '@emotion/react';
import { MinHeightContainer } from '../../../../../common/ui/min-height-container';
const flexColumn = css({
  display: 'flex',
  flexDirection: 'column',
  justifyContent: 'flex-start',
  width: '100%'
});
export const SearchResultsContainerOld = ({
  hasTabs,
  adaptiveHeight,
  isLoadingResults,
  children
}) => {
  const ref = useRef(null);
  const currentHeight = useRef(null);
  const fixedMinHeight = hasTabs ? '347px' : '302px';
  const adaptiveMinHeight = isLoadingResults && !!currentHeight.current ? `${currentHeight.current}px` : 'auto';
  const minheight = adaptiveHeight ? adaptiveMinHeight : fixedMinHeight;
  useLayoutEffect(() => {
    if (ref.current && adaptiveHeight && !isLoadingResults) {
      currentHeight.current = ref.current.getBoundingClientRect().height;
    }
  });
  return jsx(MinHeightContainer, {
    ref: ref,
    minHeight: minheight,
    css: flexColumn
  }, children);
};