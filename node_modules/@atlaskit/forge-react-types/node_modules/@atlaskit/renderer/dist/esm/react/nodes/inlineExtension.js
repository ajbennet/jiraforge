import _extends from "@babel/runtime/helpers/extends";
import React from 'react';
import ExtensionRenderer from '../../ui/ExtensionRenderer';
var InlineExtension = function InlineExtension(props) {
  var text = props.text;
  return (
    /*#__PURE__*/
    // Ignored via go/ees005
    // eslint-disable-next-line react/jsx-props-no-spreading
    React.createElement(ExtensionRenderer, _extends({}, props, {
      type: "inlineExtension"
    }), function (_ref) {
      var result = _ref.result;
      try {
        // Return the result directly if it's a valid JSX.Element
        if (result && /*#__PURE__*/React.isValidElement(result)) {
          return /*#__PURE__*/React.createElement("span", null, result);
        }
      } catch (e) {
        /** We don't want this error to block renderer */
        /** We keep rendering the default content */
      }

      // Always return default content if anything goes wrong
      return /*#__PURE__*/React.createElement("span", null, text || 'inlineExtension');
    })
  );
};
export default InlineExtension;