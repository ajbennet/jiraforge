import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _extends from "@babel/runtime/helpers/extends";
import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
var _excluded = ["expanded"];
var _templateObject, _templateObject2, _templateObject3;
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { css, jsx } from '@emotion/react';
import React, { useCallback, useRef } from 'react';
// eslint-disable-next-line @atlaskit/design-system/no-deprecated-imports
import { ACTION, ACTION_SUBJECT, EVENT_TYPE } from '@atlaskit/editor-common/analytics';
import { clearNextSiblingMarginTopStyle, ExpandIconWrapper, ExpandLayoutWrapperWithRef, expandMessages, sharedExpandStyles, WidthProvider } from '@atlaskit/editor-common/ui';
import { akEditorLineHeight, relativeFontSizeToBase16 } from '@atlaskit/editor-shared-styles';
import { default as ChevronRightIconLegacy } from '@atlaskit/icon/glyph/chevron-right';
import ChevronRightIcon from '@atlaskit/icon/utility/chevron-right';
import Tooltip from '@atlaskit/tooltip';
import _uniqueId from 'lodash/uniqueId';
import { injectIntl } from 'react-intl-next';
import { MODE, PLATFORM } from '../analytics/events';
import { ActiveHeaderIdConsumer } from './active-header-id-provider';
var titleStyles = css({
  outline: 'none',
  border: 'none',
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  fontSize: relativeFontSizeToBase16(14),
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values, @atlaskit/design-system/use-tokens-typography -- Ignored via go/DSP-18766
  lineHeight: akEditorLineHeight,
  fontWeight: "var(--ds-font-weight-regular, 400)",
  display: 'flex',
  flex: 1,
  margin: 0,
  padding: "0 0 0 ".concat("var(--ds-space-050, 4px)"),
  textAlign: 'left'
});
var Container = function Container(props) {
  var paddingBottom = props.expanded ? "var(--ds-space-100, 8px)" : "var(--ds-space-0, 0px)";
  var sharedContainerStyles = sharedExpandStyles.containerStyles(props);

  // eslint-disable-next-line @atlaskit/design-system/no-css-tagged-template-expression -- needs manual remediation
  var styles = function styles() {
    return css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n\t\t", "\n\t\tpadding: 0;\n\t\tpadding-bottom: ", ";\n\t"])), sharedContainerStyles(), paddingBottom);
  };
  return (
    // Ignored via go/ees005
    // eslint-disable-next-line react/jsx-props-no-spreading, @atlaskit/design-system/consistent-css-prop-usage
    jsx("div", _extends({
      css: styles
    }, props), props.children)
  );
};
var TitleContainer = function TitleContainer(props) {
  var paddingBottom = !props.expanded ? "var(--ds-space-100, 8px)" : "var(--ds-space-0, 0px)";

  // eslint-disable-next-line @atlaskit/design-system/no-css-tagged-template-expression -- needs manual remediation
  var styles = function styles() {
    return css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n\t\t", "\n\t\tpadding: ", ";\n\t\tpadding-bottom: ", ";\n\t"])), sharedExpandStyles.titleContainerStyles(), "var(--ds-space-100, 8px)", paddingBottom);
  };
  var expanded = props.expanded,
    buttonProps = _objectWithoutProperties(props, _excluded);
  return (
    // Ignored via go/ees005
    // eslint-disable-next-line react/jsx-props-no-spreading, @atlaskit/design-system/consistent-css-prop-usage
    jsx("button", _extends({
      type: "button",
      css: styles
    }, buttonProps), props.children)
  );
};
TitleContainer.displayName = 'TitleContainerButton';
var ContentContainer = function ContentContainer(props) {
  var sharedContentStyles = sharedExpandStyles.contentStyles(props);
  var visibility = props.expanded ? 'visible' : 'hidden';

  // eslint-disable-next-line @atlaskit/design-system/no-css-tagged-template-expression  -- needs manual remediation
  var styles = function styles() {
    return css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n\t\t", ";\n\t\tpadding-right: ", ";\n\t\tpadding-left: ", ";\n\t\tvisibility: ", ";\n\t"])), sharedContentStyles(), "var(--ds-space-200, 16px)", "var(--ds-space-400, 32px)", visibility);
  };
  return (
    // eslint-disable-next-line
    // Ignored via go/ees005
    // eslint-disable-next-line react/jsx-props-no-spreading, @atlaskit/design-system/consistent-css-prop-usage
    jsx("div", _extends({
      css: styles
    }, props), props.children)
  );
};
function fireExpandToggleAnalytics(nodeType, expanded, fireAnalyticsEvent) {
  if (!fireAnalyticsEvent) {
    return;
  }
  fireAnalyticsEvent({
    action: ACTION.TOGGLE_EXPAND,
    actionSubject: nodeType === 'expand' ? ACTION_SUBJECT.EXPAND : ACTION_SUBJECT.NESTED_EXPAND,
    attributes: {
      platform: PLATFORM.WEB,
      mode: MODE.RENDERER,
      expanded: !expanded
    },
    eventType: EVENT_TYPE.TRACK
  });
}
function Expand(_ref) {
  var title = _ref.title,
    children = _ref.children,
    nodeType = _ref.nodeType,
    intl = _ref.intl,
    fireAnalyticsEvent = _ref.fireAnalyticsEvent,
    nestedHeaderIds = _ref.nestedHeaderIds,
    rendererAppearance = _ref.rendererAppearance;
  var _React$useState = React.useState(false),
    _React$useState2 = _slicedToArray(_React$useState, 2),
    expanded = _React$useState2[0],
    setExpanded = _React$useState2[1];
  var _React$useState3 = React.useState(false),
    _React$useState4 = _slicedToArray(_React$useState3, 2),
    focused = _React$useState4[0],
    setFocused = _React$useState4[1];
  var isMobile = false;
  var label = intl.formatMessage(expanded ? expandMessages.collapseNode : expandMessages.expandNode);
  var _useRef = useRef(_uniqueId('expand-title-')),
    id = _useRef.current;
  var handleFocus = useCallback(function () {
    return setFocused(true);
  }, []);
  var handleBlur = useCallback(function () {
    return setFocused(false);
  }, []);
  return jsx(Container, {
    "data-testid": "expand-container-".concat(nodeType, "-").concat(id),
    "data-node-type": nodeType,
    "data-title": title,
    "data-expanded": expanded,
    expanded: expanded,
    focused: focused
  }, nestedHeaderIds && nestedHeaderIds.length > 0 ? jsx(ActiveHeaderIdConsumer, {
    nestedHeaderIds: nestedHeaderIds,
    onNestedHeaderIdMatch: function onNestedHeaderIdMatch() {
      return setExpanded(true);
    }
  }) : null, jsx(TitleContainer, {
    onClick: function onClick(e) {
      e.preventDefault();
      e.stopPropagation();
      fireExpandToggleAnalytics(nodeType, expanded, fireAnalyticsEvent);
      setExpanded(!expanded);
      e.persist();
      // @ts-ignore detail doesn't exist on type
      e.detail ? handleBlur() : handleFocus();
    },
    onFocus: handleFocus,
    onBlur: handleBlur,
    "aria-labelledby": id,
    "aria-expanded": expanded,
    contentEditable: false,
    expanded: expanded
  }, isMobile ? jsx(ExpandIconWrapper, {
    expanded: expanded
  }, jsx(ChevronRightIcon, {
    label: label,
    LEGACY_fallbackIcon: ChevronRightIconLegacy,
    spacing: "spacious"
  })) : jsx(Tooltip, {
    content: label,
    position: "top"
    // @ts-ignore: [PIT-1685] Fails in post-office due to backwards incompatibility issue with React 18
    ,
    tag: ExpandLayoutWrapperWithRef,
    testId: 'tooltip'
  }, jsx(ExpandIconWrapper, {
    expanded: expanded
  }, jsx(ChevronRightIcon, {
    label: label,
    LEGACY_fallbackIcon: ChevronRightIconLegacy,
    spacing: "spacious"
  }))), jsx("span", {
    css: titleStyles,
    id: id
  }, title || intl.formatMessage(expandMessages.expandDefaultTitle))), jsx(ContentContainer, {
    expanded: expanded
  }, jsx("div", {
    className: "".concat(nodeType, "-content-wrapper")
  }, jsx(WidthProvider, null, jsx("div", {
    css: clearNextSiblingMarginTopStyle
  }), children))));
}
export default injectIntl(Expand);