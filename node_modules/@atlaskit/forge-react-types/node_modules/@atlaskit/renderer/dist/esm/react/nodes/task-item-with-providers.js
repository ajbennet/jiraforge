import _extends from "@babel/runtime/helpers/extends";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["contextIdentifierProvider", "objectAri", "isRenderer"];
import _regeneratorRuntime from "@babel/runtime/regenerator";
import React from 'react';
import { ResourcedTaskItem } from '@atlaskit/task-decision';
export default function TaskItemWithProviders(props) {
  var contextIdentifierProvider = props.contextIdentifierProvider,
    objectAri = props.objectAri,
    isRenderer = props.isRenderer,
    otherProps = _objectWithoutProperties(props, _excluded);
  var _React$useState = React.useState(undefined),
    _React$useState2 = _slicedToArray(_React$useState, 2),
    resolvedContextProvider = _React$useState2[0],
    setResolvedContextProvider = _React$useState2[1];
  var updateContextIdentifierProvider = React.useCallback( /*#__PURE__*/function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(contextIdentifierProvider) {
      var _resolvedContextProvider;
      return _regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            if (!contextIdentifierProvider) {
              _context.next = 11;
              break;
            }
            _context.prev = 1;
            _context.next = 4;
            return contextIdentifierProvider;
          case 4:
            _resolvedContextProvider = _context.sent;
            setResolvedContextProvider(_resolvedContextProvider);
            return _context.abrupt("return");
          case 9:
            _context.prev = 9;
            _context.t0 = _context["catch"](1);
          case 11:
            setResolvedContextProvider(undefined);
          case 12:
          case "end":
            return _context.stop();
        }
      }, _callee, null, [[1, 9]]);
    }));
    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }(), []);
  React.useMemo(function () {
    updateContextIdentifierProvider(props.contextIdentifierProvider);
  }, [props.contextIdentifierProvider, updateContextIdentifierProvider]);
  var resolvedObjectId = resolvedContextProvider && resolvedContextProvider.objectId || objectAri;

  // Ignored via go/ees005
  // eslint-disable-next-line react/jsx-props-no-spreading
  return /*#__PURE__*/React.createElement(ResourcedTaskItem, _extends({}, otherProps, {
    objectAri: resolvedObjectId,
    isRenderer: isRenderer
  }));
}