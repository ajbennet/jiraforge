/* eslint-disable @atlaskit/editor/no-re-export */
// Mapping file

import { lazyForPaint } from 'react-loosely-lazy';
import Table from './table';
import TableRow from './tableRow';

// Ignored via go/ees005
// eslint-disable-next-line import/no-named-as-default

var CodeBlock = lazyForPaint(function () {
  return import( /* webpackChunkName: "@atlaskit-internal_renderer-node_CodeBlock" */
  './codeBlock/codeBlock').then(function (mod) {
    return mod.default;
  });
});
var TaskList = lazyForPaint(function () {
  return import( /* webpackChunkName: "@atlaskit-internal_renderer-node_TaskList" */
  './taskList').then(function (mod) {
    return mod.default;
  });
});
var TaskItem = lazyForPaint(function () {
  return import( /* webpackChunkName: "@atlaskit-internal_renderer-node_TaskItem" */
  './taskItem').then(function (mod) {
    return mod.default;
  });
});
var DecisionList = lazyForPaint(function () {
  return import( /* webpackChunkName: "@atlaskit-internal_renderer-node_DecisionList" */
  './decisionList').then(function (mod) {
    return mod.default;
  });
});
var DecisionItem = lazyForPaint(function () {
  return import( /* webpackChunkName: "@atlaskit-internal_renderer-node_DecisionItem" */
  './decisionItem').then(function (mod) {
    return mod.default;
  });
});
var Date = lazyForPaint(function () {
  return import( /* webpackChunkName: "@atlaskit-internal_renderer-node_Date" */
  './date').then(function (mod) {
    return mod.default;
  });
});
var Status = lazyForPaint(function () {
  return import( /* webpackChunkName: "@atlaskit-internal_renderer-node_Status" */
  './status').then(function (mod) {
    return mod.default;
  });
});
var Emoji = lazyForPaint(function () {
  return import( /* webpackChunkName: "@atlaskit-internal_renderer-node_Emoji" */
  './emoji').then(function (mod) {
    return mod.default;
  });
});
var Panel = lazyForPaint(function () {
  return import( /* webpackChunkName: "@atlaskit-internal_renderer-node_Panel" */
  './panel').then(function (mod) {
    return mod.default;
  });
});
var EmbedCard = lazyForPaint(function () {
  return import( /* webpackChunkName: "@atlaskit-internal_renderer-node_EmbedCard" */
  './embedCard').then(function (mod) {
    return mod.default;
  });
});
var InlineCard = lazyForPaint(function () {
  return import( /* webpackChunkName: "@atlaskit-internal_renderer-node_InlineCard" */
  './inlineCard').then(function (mod) {
    return mod.default;
  });
});
var BlockCard = lazyForPaint(function () {
  return import( /* webpackChunkName: "@atlaskit-internal_renderer-node_BlockCard" */
  './blockCard').then(function (mod) {
    return mod.default;
  });
});
var Media = lazyForPaint(function () {
  return import( /* webpackChunkName: "@atlaskit-internal_renderer-node_Media" */
  './media').then(function (mod) {
    return mod.default;
  });
});
var MediaGroup = lazyForPaint(function () {
  return import( /* webpackChunkName: "@atlaskit-internal_renderer-node_MediaGroup" */
  './mediaGroup').then(function (mod) {
    return mod.default;
  });
});
var MediaInline = lazyForPaint(function () {
  return import( /* webpackChunkName: "@atlaskit-internal_renderer-node_MediaInline" */
  './mediaInline').then(function (mod) {
    return mod.default;
  });
});
var MediaSingle = lazyForPaint(function () {
  return import( /* webpackChunkName: "@atlaskit-internal_renderer-node_MediaSingle" */
  './mediaSingle').then(function (mod) {
    return mod.default;
  });
});
var Mention = lazyForPaint(function () {
  return import( /* webpackChunkName: "@atlaskit-internal_renderer-node_Mention" */
  './mention').then(function (mod) {
    return mod.default;
  });
});
var Expand = lazyForPaint(function () {
  return import( /* webpackChunkName: "@atlaskit-internal_renderer-node_Expand" */
  '../../ui/Expand').then(function (mod) {
    return mod.default;
  });
});
export var nodeToReact = {
  blockCard: BlockCard,
  date: Date,
  decisionItem: DecisionItem,
  decisionList: DecisionList,
  emoji: Emoji,
  codeBlock: CodeBlock,
  inlineCard: InlineCard,
  media: Media,
  mediaGroup: MediaGroup,
  mediaInline: MediaInline,
  mediaSingle: MediaSingle,
  mention: Mention,
  panel: Panel,
  status: Status,
  taskItem: TaskItem,
  taskList: TaskList,
  table: Table,
  tableRow: TableRow,
  expand: Expand,
  nestedExpand: Expand,
  embedCard: EmbedCard
};