/**
 * @jsxRuntime classic
 * @jsx jsx
 */
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { jsx, css } from '@emotion/react';
import CopyButton from './codeBlockCopyButton';
import CodeWrapButton from './codeBlockWrapButton';
import { N0, N20, N30, N700 } from '@atlaskit/theme/colors';
var codeBlockButtonsWrapper = css({
  position: 'sticky',
  top: '0px',
  background: "".concat("var(--ds-surface, ".concat(N20, ")"))
});
var codeBlockButtonsStyle = css({
  display: 'flex',
  justifyContent: 'flex-end',
  position: 'absolute',
  height: '0',
  width: '100%',
  right: "var(--ds-space-075, 6px)",
  top: "var(--ds-space-050, 4px)",
  padding: "var(--ds-space-025, 2px)",
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
  button: {
    height: '32px',
    width: '32px',
    border: "2px solid ".concat("var(--ds-border, ".concat(N0, ")")),
    borderRadius: '4px',
    marginLeft: "var(--ds-space-050, 4px)",
    padding: "var(--ds-space-025, 2px)",
    background: "".concat("var(--ds-surface-overlay, ".concat(N20, ")")),
    color: "var(--ds-icon, rgb(66, 82, 110))",
    '&:hover': {
      borderWidth: '2px',
      backgroundColor: "".concat("var(--ds-surface-overlay-hovered, ".concat(N30, ")")),
      height: '32px',
      width: '32px'
    },
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
    '&.clicked': {
      backgroundColor: "".concat("var(--ds-background-neutral-bold-pressed, ".concat(N700, ")")),
      borderRadius: '4px',
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-important-styles -- Ignored via go/DSP-18766
      color: "".concat("var(--ds-icon-inverse, ".concat(N0, ")"), " !important")
    }
  }
});
var CodeBlockButtonContainer = function CodeBlockButtonContainer(_ref) {
  var allowCopyToClipboard = _ref.allowCopyToClipboard,
    allowWrapCodeBlock = _ref.allowWrapCodeBlock,
    setWrapLongLines = _ref.setWrapLongLines,
    text = _ref.text,
    wrapLongLines = _ref.wrapLongLines;
  return jsx("div", {
    css: codeBlockButtonsWrapper
  }, jsx("div", {
    css: codeBlockButtonsStyle
  }, allowWrapCodeBlock && jsx(CodeWrapButton, {
    setWrapLongLines: setWrapLongLines,
    wrapLongLines: wrapLongLines
  }), allowCopyToClipboard && jsx(CopyButton, {
    content: text
  })));
};
export default CodeBlockButtonContainer;