import _extends from "@babel/runtime/helpers/extends";
/* eslint-disable @atlaskit/design-system/prefer-primitives */
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { jsx, css } from '@emotion/react';
import { N40 } from '@atlaskit/theme/colors';
import React, { useState } from 'react';
import { renderExtension } from './extension';
import ExtensionRenderer from '../../ui/ExtensionRenderer';
import { WidthConsumer, sharedMultiBodiedExtensionStyles } from '@atlaskit/editor-common/ui';
import { RendererCssClassName } from '../../consts';
import { calcBreakoutWidth } from '@atlaskit/editor-common/utils';
const useMultiBodiedExtensionActions = ({
  updateActiveChild,
  children
}) => {
  const actions = React.useMemo(() => {
    return {
      changeActive(index) {
        return updateActiveChild(index);
      },
      addChild() {
        return false;
      },
      getChildrenCount() {
        return children ? children === null || children === void 0 ? void 0 : children.length : 0;
      },
      removeChild(index) {
        return false;
      },
      updateParameters(parameters) {
        return false;
      },
      // Ignored via go/ees005
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
      getChildren() {
        return [];
      }
    };
  }, [updateActiveChild, children]);
  return actions;
};

// eslint-disable-next-line @atlaskit/design-system/no-css-tagged-template-expression, @atlaskit/design-system/consistent-css-prop-usage -- Ignored via go/DSP-18766
const navigationCssExtended = css`
	${sharedMultiBodiedExtensionStyles.mbeNavigation};
	margin-left: 0 !important;
	margin-right: 0 !important;
	.mbe-add-tab-button,
	.mbe-remove-tab {
		display: none;
	}
`;
const MultiBodiedExtension = props => {
  const {
    children,
    layout = 'default',
    path = []
  } = props;
  const [activeChildIndex, setActiveChildIndex] = useState(0);
  const removeOverflow = React.Children.toArray(children)
  // Ignored via go/ees005
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  .map(child => /*#__PURE__*/React.isValidElement(child) ? child.props.nodeType === 'table' : false).every(Boolean);
  const overflowContainerClass = !removeOverflow ? RendererCssClassName.EXTENSION_OVERFLOW_CONTAINER : '';
  const updateActiveChild = React.useCallback(index => {
    if (typeof index !== 'number') {
      // TODO: Make sure we log this somewhere if this happens
      setActiveChildIndex(0);
      return false;
    }
    setActiveChildIndex(index);
    return true;
  }, [setActiveChildIndex]);
  const actions = useMultiBodiedExtensionActions({
    updateActiveChild,
    children
  });
  // eslint-disable-next-line @atlaskit/design-system/no-css-tagged-template-expression -- needs manual remediation
  const containerCssExtended = css`
		${sharedMultiBodiedExtensionStyles.mbeExtensionContainer};
		.ak-renderer-extension {
			margin-top: 0 !important;
		}

		[data-layout='full-width'],
		[data-layout='wide'] {
			.multiBodiedExtension-navigation {
				border-right: 3px solid ${`var(--ds-border, ${N40})`} !important;
			}
		}

		.multiBodiedExtension--frames
			> [data-extension-frame='true']:nth-of-type(${activeChildIndex + 1}) {
			${sharedMultiBodiedExtensionStyles.extensionFrameContent}
			margin-left: 0;
			margin-right: 0;
		}
	`;
  const isTopLevel = path.length < 1;
  const centerAlignClass = isTopLevel && ['wide', 'full-width'].includes(layout) ? RendererCssClassName.EXTENSION_CENTER_ALIGN : '';
  function renderMbeContent(width) {
    return jsx("div", {
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
      className: `${RendererCssClassName.EXTENSION} ${centerAlignClass} ${overflowContainerClass}`,
      style: {
        // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
        width: isTopLevel ? calcBreakoutWidth(layout, width) : '100%'
      },
      "data-layout": layout
    }, jsx("nav", {
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
      className: "multiBodiedExtension-navigation",
      css: navigationCssExtended,
      "data-testid": "multiBodiedExtension-navigation"
    }, jsx(ExtensionRenderer
    // Ignored via go/ees005
    // eslint-disable-next-line react/jsx-props-no-spreading
    , _extends({}, props, {
      actions: actions,
      type: "multiBodiedExtension"
    }), ({
      result
    }) => {
      try {
        if (result && /*#__PURE__*/React.isValidElement(result)) {
          // Return the content directly if it's a valid JSX.Element
          return renderExtension(result, layout, {
            isTopLevel: path.length < 1
          });
        }
      } catch (e) {
        /** We don't want this error to block renderer */
        /** We keep rendering the default content */
      }

      // Always return default content if anything goes wrong
      return renderExtension(children, layout, {
        isTopLevel: path.length < 1
      });
    })), jsx("article", {
      "data-testid": "multiBodiedExtension--frames"
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
      ,
      className: `multiBodiedExtension--frames`
    }, children));
  }
  return jsx("section", {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
    className: "multiBodiedExtension--container"
    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage
    ,
    css: containerCssExtended,
    "data-testid": "multiBodiedExtension--container",
    "data-active-child-index": activeChildIndex,
    "data-layout": layout
  }, jsx(WidthConsumer, null, ({
    width
  }) => renderMbeContent(width)));
};
export default MultiBodiedExtension;