"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _react = require("@emotion/react");
var _colors = require("@atlaskit/theme/colors");
var _react2 = _interopRequireWildcard(require("react"));
var _extension = require("./extension");
var _ExtensionRenderer = _interopRequireDefault(require("../../ui/ExtensionRenderer"));
var _ui = require("@atlaskit/editor-common/ui");
var _consts = require("../../consts");
var _utils = require("@atlaskit/editor-common/utils");
var _templateObject, _templateObject2;
/* eslint-disable @atlaskit/design-system/prefer-primitives */
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var useMultiBodiedExtensionActions = function useMultiBodiedExtensionActions(_ref) {
  var updateActiveChild = _ref.updateActiveChild,
    children = _ref.children;
  var actions = _react2.default.useMemo(function () {
    return {
      changeActive: function changeActive(index) {
        return updateActiveChild(index);
      },
      addChild: function addChild() {
        return false;
      },
      getChildrenCount: function getChildrenCount() {
        return children ? children === null || children === void 0 ? void 0 : children.length : 0;
      },
      removeChild: function removeChild(index) {
        return false;
      },
      updateParameters: function updateParameters(parameters) {
        return false;
      },
      // Ignored via go/ees005
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
      getChildren: function getChildren() {
        return [];
      }
    };
  }, [updateActiveChild, children]);
  return actions;
};

// eslint-disable-next-line @atlaskit/design-system/no-css-tagged-template-expression, @atlaskit/design-system/consistent-css-prop-usage -- Ignored via go/DSP-18766
var navigationCssExtended = (0, _react.css)(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2.default)(["\n\t", ";\n\tmargin-left: 0 !important;\n\tmargin-right: 0 !important;\n\t.mbe-add-tab-button,\n\t.mbe-remove-tab {\n\t\tdisplay: none;\n\t}\n"])), _ui.sharedMultiBodiedExtensionStyles.mbeNavigation);
var MultiBodiedExtension = function MultiBodiedExtension(props) {
  var children = props.children,
    _props$layout = props.layout,
    layout = _props$layout === void 0 ? 'default' : _props$layout,
    _props$path = props.path,
    path = _props$path === void 0 ? [] : _props$path;
  var _useState = (0, _react2.useState)(0),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    activeChildIndex = _useState2[0],
    setActiveChildIndex = _useState2[1];
  var removeOverflow = _react2.default.Children.toArray(children)
  // Ignored via go/ees005
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  .map(function (child) {
    return /*#__PURE__*/_react2.default.isValidElement(child) ? child.props.nodeType === 'table' : false;
  }).every(Boolean);
  var overflowContainerClass = !removeOverflow ? _consts.RendererCssClassName.EXTENSION_OVERFLOW_CONTAINER : '';
  var updateActiveChild = _react2.default.useCallback(function (index) {
    if (typeof index !== 'number') {
      // TODO: Make sure we log this somewhere if this happens
      setActiveChildIndex(0);
      return false;
    }
    setActiveChildIndex(index);
    return true;
  }, [setActiveChildIndex]);
  var actions = useMultiBodiedExtensionActions({
    updateActiveChild: updateActiveChild,
    children: children
  });
  // eslint-disable-next-line @atlaskit/design-system/no-css-tagged-template-expression -- needs manual remediation
  var containerCssExtended = (0, _react.css)(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2.default)(["\n\t\t", ";\n\t\t.ak-renderer-extension {\n\t\t\tmargin-top: 0 !important;\n\t\t}\n\n\t\t[data-layout='full-width'],\n\t\t[data-layout='wide'] {\n\t\t\t.multiBodiedExtension-navigation {\n\t\t\t\tborder-right: 3px solid ", " !important;\n\t\t\t}\n\t\t}\n\n\t\t.multiBodiedExtension--frames\n\t\t\t> [data-extension-frame='true']:nth-of-type(", ") {\n\t\t\t", "\n\t\t\tmargin-left: 0;\n\t\t\tmargin-right: 0;\n\t\t}\n\t"])), _ui.sharedMultiBodiedExtensionStyles.mbeExtensionContainer, "var(--ds-border, ".concat(_colors.N40, ")"), activeChildIndex + 1, _ui.sharedMultiBodiedExtensionStyles.extensionFrameContent);
  var isTopLevel = path.length < 1;
  var centerAlignClass = isTopLevel && ['wide', 'full-width'].includes(layout) ? _consts.RendererCssClassName.EXTENSION_CENTER_ALIGN : '';
  function renderMbeContent(width) {
    return (0, _react.jsx)("div", {
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
      className: "".concat(_consts.RendererCssClassName.EXTENSION, " ").concat(centerAlignClass, " ").concat(overflowContainerClass),
      style: {
        // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
        width: isTopLevel ? (0, _utils.calcBreakoutWidth)(layout, width) : '100%'
      },
      "data-layout": layout
    }, (0, _react.jsx)("nav", {
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
      className: "multiBodiedExtension-navigation",
      css: navigationCssExtended,
      "data-testid": "multiBodiedExtension-navigation"
    }, (0, _react.jsx)(_ExtensionRenderer.default
    // Ignored via go/ees005
    // eslint-disable-next-line react/jsx-props-no-spreading
    , (0, _extends2.default)({}, props, {
      actions: actions,
      type: "multiBodiedExtension"
    }), function (_ref2) {
      var result = _ref2.result;
      try {
        if (result && /*#__PURE__*/_react2.default.isValidElement(result)) {
          // Return the content directly if it's a valid JSX.Element
          return (0, _extension.renderExtension)(result, layout, {
            isTopLevel: path.length < 1
          });
        }
      } catch (e) {
        /** We don't want this error to block renderer */
        /** We keep rendering the default content */
      }

      // Always return default content if anything goes wrong
      return (0, _extension.renderExtension)(children, layout, {
        isTopLevel: path.length < 1
      });
    })), (0, _react.jsx)("article", {
      "data-testid": "multiBodiedExtension--frames"
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
      ,
      className: "multiBodiedExtension--frames"
    }, children));
  }
  return (0, _react.jsx)("section", {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
    className: "multiBodiedExtension--container"
    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage
    ,
    css: containerCssExtended,
    "data-testid": "multiBodiedExtension--container",
    "data-active-child-index": activeChildIndex,
    "data-layout": layout
  }, (0, _react.jsx)(_ui.WidthConsumer, null, function (_ref3) {
    var width = _ref3.width;
    return renderMbeContent(width);
  }));
};
var _default = exports.default = MultiBodiedExtension;