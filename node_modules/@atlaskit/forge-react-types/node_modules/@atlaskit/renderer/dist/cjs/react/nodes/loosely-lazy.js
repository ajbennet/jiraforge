"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.nodeToReact = void 0;
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));
var _reactLooselyLazy = require("react-loosely-lazy");
var _table = _interopRequireDefault(require("./table"));
var _tableRow = _interopRequireDefault(require("./tableRow"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != (0, _typeof2.default)(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; } /* eslint-disable @atlaskit/editor/no-re-export */ // Mapping file
// Ignored via go/ees005
// eslint-disable-next-line import/no-named-as-default

var CodeBlock = (0, _reactLooselyLazy.lazyForPaint)(function () {
  return Promise.resolve().then(function () {
    return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_renderer-node_CodeBlock" */
    './codeBlock/codeBlock'));
  }).then(function (mod) {
    return mod.default;
  });
});
var TaskList = (0, _reactLooselyLazy.lazyForPaint)(function () {
  return Promise.resolve().then(function () {
    return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_renderer-node_TaskList" */
    './taskList'));
  }).then(function (mod) {
    return mod.default;
  });
});
var TaskItem = (0, _reactLooselyLazy.lazyForPaint)(function () {
  return Promise.resolve().then(function () {
    return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_renderer-node_TaskItem" */
    './taskItem'));
  }).then(function (mod) {
    return mod.default;
  });
});
var DecisionList = (0, _reactLooselyLazy.lazyForPaint)(function () {
  return Promise.resolve().then(function () {
    return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_renderer-node_DecisionList" */
    './decisionList'));
  }).then(function (mod) {
    return mod.default;
  });
});
var DecisionItem = (0, _reactLooselyLazy.lazyForPaint)(function () {
  return Promise.resolve().then(function () {
    return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_renderer-node_DecisionItem" */
    './decisionItem'));
  }).then(function (mod) {
    return mod.default;
  });
});
var Date = (0, _reactLooselyLazy.lazyForPaint)(function () {
  return Promise.resolve().then(function () {
    return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_renderer-node_Date" */
    './date'));
  }).then(function (mod) {
    return mod.default;
  });
});
var Status = (0, _reactLooselyLazy.lazyForPaint)(function () {
  return Promise.resolve().then(function () {
    return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_renderer-node_Status" */
    './status'));
  }).then(function (mod) {
    return mod.default;
  });
});
var Emoji = (0, _reactLooselyLazy.lazyForPaint)(function () {
  return Promise.resolve().then(function () {
    return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_renderer-node_Emoji" */
    './emoji'));
  }).then(function (mod) {
    return mod.default;
  });
});
var Panel = (0, _reactLooselyLazy.lazyForPaint)(function () {
  return Promise.resolve().then(function () {
    return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_renderer-node_Panel" */
    './panel'));
  }).then(function (mod) {
    return mod.default;
  });
});
var EmbedCard = (0, _reactLooselyLazy.lazyForPaint)(function () {
  return Promise.resolve().then(function () {
    return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_renderer-node_EmbedCard" */
    './embedCard'));
  }).then(function (mod) {
    return mod.default;
  });
});
var InlineCard = (0, _reactLooselyLazy.lazyForPaint)(function () {
  return Promise.resolve().then(function () {
    return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_renderer-node_InlineCard" */
    './inlineCard'));
  }).then(function (mod) {
    return mod.default;
  });
});
var BlockCard = (0, _reactLooselyLazy.lazyForPaint)(function () {
  return Promise.resolve().then(function () {
    return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_renderer-node_BlockCard" */
    './blockCard'));
  }).then(function (mod) {
    return mod.default;
  });
});
var Media = (0, _reactLooselyLazy.lazyForPaint)(function () {
  return Promise.resolve().then(function () {
    return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_renderer-node_Media" */
    './media'));
  }).then(function (mod) {
    return mod.default;
  });
});
var MediaGroup = (0, _reactLooselyLazy.lazyForPaint)(function () {
  return Promise.resolve().then(function () {
    return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_renderer-node_MediaGroup" */
    './mediaGroup'));
  }).then(function (mod) {
    return mod.default;
  });
});
var MediaInline = (0, _reactLooselyLazy.lazyForPaint)(function () {
  return Promise.resolve().then(function () {
    return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_renderer-node_MediaInline" */
    './mediaInline'));
  }).then(function (mod) {
    return mod.default;
  });
});
var MediaSingle = (0, _reactLooselyLazy.lazyForPaint)(function () {
  return Promise.resolve().then(function () {
    return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_renderer-node_MediaSingle" */
    './mediaSingle'));
  }).then(function (mod) {
    return mod.default;
  });
});
var Mention = (0, _reactLooselyLazy.lazyForPaint)(function () {
  return Promise.resolve().then(function () {
    return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_renderer-node_Mention" */
    './mention'));
  }).then(function (mod) {
    return mod.default;
  });
});
var Expand = (0, _reactLooselyLazy.lazyForPaint)(function () {
  return Promise.resolve().then(function () {
    return _interopRequireWildcard(require( /* webpackChunkName: "@atlaskit-internal_renderer-node_Expand" */
    '../../ui/Expand'));
  }).then(function (mod) {
    return mod.default;
  });
});
var nodeToReact = exports.nodeToReact = {
  blockCard: BlockCard,
  date: Date,
  decisionItem: DecisionItem,
  decisionList: DecisionList,
  emoji: Emoji,
  codeBlock: CodeBlock,
  inlineCard: InlineCard,
  media: Media,
  mediaGroup: MediaGroup,
  mediaInline: MediaInline,
  mediaSingle: MediaSingle,
  mention: Mention,
  panel: Panel,
  status: Status,
  taskItem: TaskItem,
  taskList: TaskList,
  table: _table.default,
  tableRow: _tableRow.default,
  expand: Expand,
  nestedExpand: Expand,
  embedCard: EmbedCard
};