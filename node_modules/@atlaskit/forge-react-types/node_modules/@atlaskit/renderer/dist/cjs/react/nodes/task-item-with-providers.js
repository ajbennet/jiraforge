"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = TaskItemWithProviders;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = _interopRequireDefault(require("react"));
var _taskDecision = require("@atlaskit/task-decision");
var _excluded = ["contextIdentifierProvider", "objectAri", "isRenderer"];
function TaskItemWithProviders(props) {
  var contextIdentifierProvider = props.contextIdentifierProvider,
    objectAri = props.objectAri,
    isRenderer = props.isRenderer,
    otherProps = (0, _objectWithoutProperties2.default)(props, _excluded);
  var _React$useState = _react.default.useState(undefined),
    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),
    resolvedContextProvider = _React$useState2[0],
    setResolvedContextProvider = _React$useState2[1];
  var updateContextIdentifierProvider = _react.default.useCallback( /*#__PURE__*/function () {
    var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(contextIdentifierProvider) {
      var _resolvedContextProvider;
      return _regenerator.default.wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            if (!contextIdentifierProvider) {
              _context.next = 11;
              break;
            }
            _context.prev = 1;
            _context.next = 4;
            return contextIdentifierProvider;
          case 4:
            _resolvedContextProvider = _context.sent;
            setResolvedContextProvider(_resolvedContextProvider);
            return _context.abrupt("return");
          case 9:
            _context.prev = 9;
            _context.t0 = _context["catch"](1);
          case 11:
            setResolvedContextProvider(undefined);
          case 12:
          case "end":
            return _context.stop();
        }
      }, _callee, null, [[1, 9]]);
    }));
    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }(), []);
  _react.default.useMemo(function () {
    updateContextIdentifierProvider(props.contextIdentifierProvider);
  }, [props.contextIdentifierProvider, updateContextIdentifierProvider]);
  var resolvedObjectId = resolvedContextProvider && resolvedContextProvider.objectId || objectAri;

  // Ignored via go/ees005
  // eslint-disable-next-line react/jsx-props-no-spreading
  return /*#__PURE__*/_react.default.createElement(_taskDecision.ResourcedTaskItem, (0, _extends2.default)({}, otherProps, {
    objectAri: resolvedObjectId,
    isRenderer: isRenderer
  }));
}