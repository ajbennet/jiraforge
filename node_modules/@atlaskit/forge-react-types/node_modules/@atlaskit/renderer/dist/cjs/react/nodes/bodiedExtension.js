"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireDefault(require("react"));
var _analyticsNext = require("@atlaskit/analytics-next");
var _extension = require("./extension");
var _ErrorBoundary = require("../../ui/Renderer/ErrorBoundary");
var _ExtensionRenderer = _interopRequireDefault(require("../../ui/ExtensionRenderer"));
var _enums = require("../../analytics/enums");
var _analytics = require("@atlaskit/editor-common/analytics");
var _annotations = require("../../ui/annotations");
var BodiedExtension = function BodiedExtension(props) {
  var children = props.children,
    _props$layout = props.layout,
    layout = _props$layout === void 0 ? 'default' : _props$layout,
    _props$path = props.path,
    path = _props$path === void 0 ? [] : _props$path,
    extensionKey = props.extensionKey,
    extensionType = props.extensionType;
  var _useAnalyticsEvents = (0, _analyticsNext.useAnalyticsEvents)(),
    createAnalyticsEvent = _useAnalyticsEvents.createAnalyticsEvent;
  var removeOverflow = _react.default.Children.toArray(children)
  // Ignored via go/ees005
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  .map(function (child) {
    return /*#__PURE__*/_react.default.isValidElement(child) ? child.props.nodeType === 'table' : false;
  }).every(Boolean);
  return /*#__PURE__*/_react.default.createElement(_ErrorBoundary.ErrorBoundary, {
    component: _enums.ACTION_SUBJECT.RENDERER,
    componentId: _analytics.ACTION_SUBJECT_ID.EXTENSION_BODIED,
    createAnalyticsEvent: createAnalyticsEvent,
    additionalInfo: "".concat(extensionType, ": ").concat(extensionKey, " ")
  }, /*#__PURE__*/_react.default.createElement(_annotations.AnnotationsPositionContext.Provider, {
    value: {
      startPos: props.startPos + 1
    }
  }, /*#__PURE__*/_react.default.createElement(_ExtensionRenderer.default
  // Ignored via go/ees005
  // eslint-disable-next-line react/jsx-props-no-spreading
  , (0, _extends2.default)({}, props, {
    type: "bodiedExtension"
  }), function (_ref) {
    var result = _ref.result;
    try {
      if (result && /*#__PURE__*/_react.default.isValidElement(result)) {
        // Return the content directly if it's a valid JSX.Element
        return (0, _extension.renderExtension)(result, layout, {
          isTopLevel: path.length < 1
        }, removeOverflow);
      }
    } catch (e) {
      /** We don't want this error to block renderer */
      /** We keep rendering the default content */
    }

    // Always return default content if anything goes wrong
    return (0, _extension.renderExtension)(children, layout, {
      isTopLevel: path.length < 1
    }, removeOverflow);
  })));
};
var _default = exports.default = BodiedExtension;