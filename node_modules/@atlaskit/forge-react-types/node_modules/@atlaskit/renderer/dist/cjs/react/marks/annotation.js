"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isAnnotationMark = exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("react"));
var _adfSchema = require("@atlaskit/adf-schema");
var _element = require("../../ui/annotations/element");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var isAnnotationMark = exports.isAnnotationMark = function isAnnotationMark(mark) {
  return mark && mark.type && mark.type.name === 'annotation';
};
var AnnotationComponent = function AnnotationComponent(_ref) {
  var id = _ref.id,
    annotationType = _ref.annotationType,
    children = _ref.children,
    dataAttributes = _ref.dataAttributes,
    _ref$annotationParent = _ref.annotationParentIds,
    annotationParentIds = _ref$annotationParent === void 0 ? [] : _ref$annotationParent,
    allowAnnotations = _ref.allowAnnotations,
    useBlockLevel = _ref.useBlockLevel,
    isMediaInline = _ref.isMediaInline;
  var data = _objectSpread(_objectSpread({}, dataAttributes), (0, _adfSchema.buildAnnotationMarkDataAttributes)({
    id: id,
    annotationType: annotationType
  }));
  if (allowAnnotations) {
    return isMediaInline ?
    /*#__PURE__*/
    // Inline comment on mediaInline is not supported as part of comments on media project,
    // hence skip any styling/event handling for annotations on mediaInline.
    // `id` is still needed so that comment view component can be correct positioned
    // when using comment navigation to access comments on mediaInline
    _react.default.createElement("span", {
      id: id
    }, children) : /*#__PURE__*/_react.default.createElement(_element.MarkElement, {
      id: id,
      dataAttributes: data,
      annotationParentIds: annotationParentIds,
      annotationType: annotationType,
      useBlockLevel: useBlockLevel
    }, children);
  }
  return (
    /*#__PURE__*/
    // Ignored via go/ees005
    // eslint-disable-next-line react/jsx-props-no-spreading
    _react.default.createElement("span", (0, _extends2.default)({
      id: id
    }, data), children)
  );
};
var _default = exports.default = AnnotationComponent;