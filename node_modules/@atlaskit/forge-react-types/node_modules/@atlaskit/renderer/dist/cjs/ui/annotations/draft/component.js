"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getAnnotationIndex = exports.applyAnnotationOnText = exports.TextWithAnnotationDraft = exports.AnnotationDraft = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireWildcard(require("react"));
var _react2 = require("@emotion/react");
var _types = require("../types");
var _context = require("../context");
var _text = require("./text");
var _position = require("./position");
var _dom = require("./dom");
var _styles = require("@atlaskit/editor-common/styles");
var _segmentText = require("../../../react/utils/segment-text");
var _renderTextSegments = require("../../../react/utils/render-text-segments");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

// eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage -- Ignored via go/DSP-18766
var markStyles = function markStyles() {
  return (0, _react2.css)({
    color: 'inherit',
    backgroundColor: 'unset',
    WebkitTapHighlightColor: 'transparent'
  },
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  (0, _styles.AnnotationSharedCSSByState)().common,
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  (0, _styles.AnnotationSharedCSSByState)().focus);
};
var AnnotationDraft = exports.AnnotationDraft = function AnnotationDraft(_ref) {
  var draftPosition = _ref.draftPosition,
    children = _ref.children;
  return (
    // Ignored via go/ees005
    // eslint-disable-next-line react/jsx-props-no-spreading
    (0, _react2.jsx)("mark", (0, _extends2.default)({
      "data-renderer-mark": true
    }, (0, _dom.dataAttributes)(draftPosition), {
      css: markStyles
    }), children)
  );
};
var getAnnotationIndex = exports.getAnnotationIndex = function getAnnotationIndex(annotationPosition, fragmentCount) {
  if (annotationPosition === _types.InsertDraftPosition.START) {
    return 0;
  }
  if (annotationPosition === _types.InsertDraftPosition.END) {
    return fragmentCount - 1;
  }
  if (annotationPosition === _types.InsertDraftPosition.INSIDE && fragmentCount === 3) {
    return 1;
  }
  return -1;
};
var applyAnnotationOnText = exports.applyAnnotationOnText = function applyAnnotationOnText(_ref2) {
  var texts = _ref2.texts,
    shouldApplyAnnotationAt = _ref2.shouldApplyAnnotationAt,
    draftPosition = _ref2.draftPosition,
    textHighlighter = _ref2.textHighlighter,
    marks = _ref2.marks;
  var annotateIndex = getAnnotationIndex(shouldApplyAnnotationAt, texts.length);
  return texts.map(function (value, index) {
    var segments = (0, _segmentText.segmentText)(value, textHighlighter);
    if (annotateIndex === index) {
      return (
        // Ignored via go/ees005
        // eslint-disable-next-line react/no-array-index-key
        (0, _react2.jsx)(AnnotationDraft, {
          key: index,
          draftPosition: draftPosition
        }, (0, _renderTextSegments.renderTextSegments)(segments, textHighlighter, marks || [], draftPosition.from))
      );
    }
    return (
      // Ignored via go/ees005
      // eslint-disable-next-line react/no-array-index-key
      (0, _react2.jsx)(_react.default.Fragment, {
        key: index
      }, (0, _renderTextSegments.renderTextSegments)(segments, textHighlighter, marks || [], draftPosition.from))
    );
  });
};
var TextWithAnnotationDraft = exports.TextWithAnnotationDraft = function TextWithAnnotationDraft(_ref3) {
  var startPos = _ref3.startPos,
    endPos = _ref3.endPos,
    children = _ref3.children,
    textHighlighter = _ref3.textHighlighter,
    marks = _ref3.marks;
  var textPosition = _react.default.useMemo(function () {
    return {
      start: startPos,
      end: endPos
    };
  }, [endPos, startPos]);
  var nextDraftPosition = _react.default.useContext(_context.AnnotationsDraftContext);
  var shouldApplyAnnotationAt = _react.default.useMemo(function () {
    if (!nextDraftPosition) {
      return false;
    }
    return (0, _position.calcInsertDraftPositionOnText)(textPosition, nextDraftPosition);
  }, [nextDraftPosition, textPosition]);
  var textString = (0, _text.findTextString)(children);
  if (!textString) {
    return (0, _react2.jsx)(_react.Fragment, null, children);
  }
  if (shouldApplyAnnotationAt === false || !nextDraftPosition) {
    var segments = (0, _segmentText.segmentText)(textString, textHighlighter);
    return (0, _react2.jsx)(_react.Fragment, null, (0, _renderTextSegments.renderTextSegments)(segments, textHighlighter, marks || [], startPos));
  }
  if (shouldApplyAnnotationAt === _types.InsertDraftPosition.AROUND_TEXT) {
    var _segments = (0, _segmentText.segmentText)(textString, textHighlighter);
    return (0, _react2.jsx)(AnnotationDraft, {
      key: 0,
      draftPosition: nextDraftPosition
    }, (0, _renderTextSegments.renderTextSegments)(_segments, textHighlighter, marks || [], startPos));
  }
  var offsets = (0, _text.calcTextSplitOffset)(nextDraftPosition, textPosition, textString);
  var texts = (0, _text.splitText)(textString, offsets);
  if (!texts) {
    var _segments2 = (0, _segmentText.segmentText)(textString, textHighlighter);
    return (0, _react2.jsx)(_react.Fragment, null, (0, _renderTextSegments.renderTextSegments)(_segments2, textHighlighter, marks || [], startPos));
  }
  var components = applyAnnotationOnText({
    texts: texts,
    shouldApplyAnnotationAt: shouldApplyAnnotationAt,
    draftPosition: nextDraftPosition,
    textHighlighter: textHighlighter,
    marks: marks
  });
  return (0, _react2.jsx)(_react.Fragment, null, components);
};