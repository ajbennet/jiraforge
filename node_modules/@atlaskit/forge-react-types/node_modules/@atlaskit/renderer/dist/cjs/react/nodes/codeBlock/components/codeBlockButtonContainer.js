"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("@emotion/react");
var _codeBlockCopyButton = _interopRequireDefault(require("./codeBlockCopyButton"));
var _codeBlockWrapButton = _interopRequireDefault(require("./codeBlockWrapButton"));
var _colors = require("@atlaskit/theme/colors");
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var codeBlockButtonsWrapper = (0, _react.css)({
  position: 'sticky',
  top: '0px',
  background: "".concat("var(--ds-surface, ".concat(_colors.N20, ")"))
});
var codeBlockButtonsStyle = (0, _react.css)({
  display: 'flex',
  justifyContent: 'flex-end',
  position: 'absolute',
  height: '0',
  width: '100%',
  right: "var(--ds-space-075, 6px)",
  top: "var(--ds-space-050, 4px)",
  padding: "var(--ds-space-025, 2px)",
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
  button: {
    height: '32px',
    width: '32px',
    border: "2px solid ".concat("var(--ds-border, ".concat(_colors.N0, ")")),
    borderRadius: '4px',
    marginLeft: "var(--ds-space-050, 4px)",
    padding: "var(--ds-space-025, 2px)",
    background: "".concat("var(--ds-surface-overlay, ".concat(_colors.N20, ")")),
    color: "var(--ds-icon, rgb(66, 82, 110))",
    '&:hover': {
      borderWidth: '2px',
      backgroundColor: "".concat("var(--ds-surface-overlay-hovered, ".concat(_colors.N30, ")")),
      height: '32px',
      width: '32px'
    },
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
    '&.clicked': {
      backgroundColor: "".concat("var(--ds-background-neutral-bold-pressed, ".concat(_colors.N700, ")")),
      borderRadius: '4px',
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-important-styles -- Ignored via go/DSP-18766
      color: "".concat("var(--ds-icon-inverse, ".concat(_colors.N0, ")"), " !important")
    }
  }
});
var CodeBlockButtonContainer = function CodeBlockButtonContainer(_ref) {
  var allowCopyToClipboard = _ref.allowCopyToClipboard,
    allowWrapCodeBlock = _ref.allowWrapCodeBlock,
    setWrapLongLines = _ref.setWrapLongLines,
    text = _ref.text,
    wrapLongLines = _ref.wrapLongLines;
  return (0, _react.jsx)("div", {
    css: codeBlockButtonsWrapper
  }, (0, _react.jsx)("div", {
    css: codeBlockButtonsStyle
  }, allowWrapCodeBlock && (0, _react.jsx)(_codeBlockWrapButton.default, {
    setWrapLongLines: setWrapLongLines,
    wrapLongLines: wrapLongLines
  }), allowCopyToClipboard && (0, _react.jsx)(_codeBlockCopyButton.default, {
    content: text
  })));
};
var _default = exports.default = CodeBlockButtonContainer;