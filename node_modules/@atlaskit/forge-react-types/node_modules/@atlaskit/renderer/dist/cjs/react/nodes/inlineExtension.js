"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireDefault(require("react"));
var _ExtensionRenderer = _interopRequireDefault(require("../../ui/ExtensionRenderer"));
var InlineExtension = function InlineExtension(props) {
  var text = props.text;
  return (
    /*#__PURE__*/
    // Ignored via go/ees005
    // eslint-disable-next-line react/jsx-props-no-spreading
    _react.default.createElement(_ExtensionRenderer.default, (0, _extends2.default)({}, props, {
      type: "inlineExtension"
    }), function (_ref) {
      var result = _ref.result;
      try {
        // Return the result directly if it's a valid JSX.Element
        if (result && /*#__PURE__*/_react.default.isValidElement(result)) {
          return /*#__PURE__*/_react.default.createElement("span", null, result);
        }
      } catch (e) {
        /** We don't want this error to block renderer */
        /** We keep rendering the default content */
      }

      // Always return default content if anything goes wrong
      return /*#__PURE__*/_react.default.createElement("span", null, text || 'inlineExtension');
    })
  );
};
var _default = exports.default = InlineExtension;