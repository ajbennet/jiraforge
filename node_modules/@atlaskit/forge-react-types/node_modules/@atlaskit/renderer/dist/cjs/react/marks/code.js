"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CodeWithIntl = CodeWithIntl;
exports.isCodeMark = exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireDefault(require("react"));
var _reactIntlNext = require("react-intl-next");
var _inline = _interopRequireDefault(require("@atlaskit/code/inline"));
var _messages = require("@atlaskit/editor-common/messages");
var isCodeMark = exports.isCodeMark = function isCodeMark(mark) {
  return mark && mark.type && mark.type.name === 'code';
};
function CodeWithIntl(props) {
  var codeBidiWarningLabel = props.intl.formatMessage(_messages.codeBidiWarningMessages.label);
  return /*#__PURE__*/_react.default.createElement(_inline.default
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
  , (0, _extends2.default)({
    className: "code",
    codeBidiWarningLabel: codeBidiWarningLabel,
    codeBidiWarningTooltipEnabled: props.codeBidiWarningTooltipEnabled
    // Ignored via go/ees005
    // eslint-disable-next-line react/jsx-props-no-spreading
  }, props.dataAttributes), props.children);
}
var _default = exports.default = (0, _reactIntlNext.injectIntl)(CodeWithIntl);