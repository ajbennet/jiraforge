"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useAnnotationHoverDispatch = exports.useAnnotationHoverContext = exports.AnnotationHoverContext = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var AnnotationHoverStateContext = /*#__PURE__*/(0, _react.createContext)({
  isWithinRange: false
});
var AnnotationHoverDispatchContext = /*#__PURE__*/(0, _react.createContext)({
  cancelTimeout: function cancelTimeout() {},
  initiateTimeout: function initiateTimeout() {},
  setIsWithinRange: function setIsWithinRange() {}
});
var AnnotationHoverContext = exports.AnnotationHoverContext = function AnnotationHoverContext(_ref) {
  var children = _ref.children;
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    isWithinRange = _useState2[0],
    setIsWithinRange = _useState2[1];
  var timeoutHandler = (0, _react.useRef)();
  var cancelTimeout = (0, _react.useCallback)(function () {
    if (timeoutHandler) {
      clearTimeout(timeoutHandler.current);
    }
  }, [timeoutHandler]);
  var initiateTimeout = (0, _react.useCallback)(function () {
    if (isWithinRange) {
      timeoutHandler.current = setTimeout(function () {
        setIsWithinRange(false);
      }, 500);
    }
  }, [isWithinRange]);
  var stateData = (0, _react.useMemo)(function () {
    return {
      isWithinRange: isWithinRange
    };
  }, [isWithinRange]);
  var dispatchData = (0, _react.useMemo)(function () {
    return {
      cancelTimeout: cancelTimeout,
      initiateTimeout: initiateTimeout,
      setIsWithinRange: setIsWithinRange
    };
  }, [cancelTimeout, initiateTimeout, setIsWithinRange]);
  return /*#__PURE__*/_react.default.createElement(AnnotationHoverStateContext.Provider, {
    value: stateData
  }, /*#__PURE__*/_react.default.createElement(AnnotationHoverDispatchContext.Provider, {
    value: dispatchData
  }, children));
};
var useAnnotationHoverContext = exports.useAnnotationHoverContext = function useAnnotationHoverContext() {
  return (0, _react.useContext)(AnnotationHoverStateContext);
};
var useAnnotationHoverDispatch = exports.useAnnotationHoverDispatch = function useAnnotationHoverDispatch() {
  return (0, _react.useContext)(AnnotationHoverDispatchContext);
};