"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.insideTable = exports.insideMultiBodiedExtension = exports.insideBreakoutLayout = exports.insideBlockNode = void 0;
var isLayoutNode = function isLayoutNode(node) {
  return node.type.name === 'layoutSection';
};
var hasBreakOutMark = function hasBreakOutMark(node) {
  return node.marks.some(function (m) {
    return m.type.name === 'breakout';
  });
};
var insideBreakoutLayout = exports.insideBreakoutLayout = function insideBreakoutLayout(path) {
  return path.some(function (item) {
    return isLayoutNode(item) && hasBreakOutMark(item);
  });
};
var insideBlockNode = exports.insideBlockNode = function insideBlockNode(path, schema) {
  var _schema$nodes = schema.nodes,
    expand = _schema$nodes.expand,
    nestedExpand = _schema$nodes.nestedExpand,
    layoutColumn = _schema$nodes.layoutColumn;
  var blockNodeNames = [expand, nestedExpand, layoutColumn].filter(function (node) {
    return Boolean(node);
  }).map(function (node) {
    return node.name;
  });
  return path && path.some(function (n) {
    return n.type && blockNodeNames.indexOf(n.type.name) > -1;
  });
};
var insideMultiBodiedExtension = exports.insideMultiBodiedExtension = function insideMultiBodiedExtension(path, schema) {
  var multiBodiedExtension = schema.nodes.multiBodiedExtension;
  return path.some(function (n) {
    return n.type === multiBodiedExtension;
  });
};
var insideTable = exports.insideTable = function insideTable(path, schema) {
  var table = schema.nodes.table;
  return path.some(function (n) {
    return n.type === table;
  });
};