"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Link;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireWildcard(require("react"));
var _react2 = require("@emotion/react");
var _colors = require("@atlaskit/theme/colors");
var _utils = require("../../utils");
var _events = require("../../analytics/events");
var _analytics = require("@atlaskit/editor-common/analytics");
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _linkUrl = _interopRequireDefault(require("@atlaskit/smart-card/link-url"));
var _analyticsNext = require("@atlaskit/analytics-next");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var anchorStyles = (0, _react2.css)({
  color: "var(--ds-link, ".concat(_colors.B400, ")"),
  '&:hover': {
    color: "var(--ds-link, ".concat(_colors.B300, ")"),
    textDecoration: 'underline'
  },
  '&:active': {
    color: "var(--ds-link-pressed, ".concat(_colors.B500, ")")
  }
});
function Link(props) {
  var href = props.href,
    target = props.target,
    eventHandlers = props.eventHandlers,
    fireAnalyticsEvent = props.fireAnalyticsEvent,
    isMediaLink = props.isMediaLink,
    dataAttributes = props.dataAttributes;
  var anchorProps = {
    href: href,
    target: target,
    title: href
  };
  if (target === '_blank') {
    anchorProps.rel = 'noreferrer noopener';
  }
  var handler = (0, _utils.getEventHandler)(eventHandlers, 'link');
  if (isMediaLink) {
    return (0, _react2.jsx)(_react.Fragment, null, props.children);
  }
  var analyticsData = {
    attributes: {
      location: 'renderer'
    },
    // Below is added for the future implementation of Linking Platform namespaced analytic context
    location: 'renderer'
  };
  return (0, _react2.jsx)(_analyticsNext.AnalyticsContext, {
    data: analyticsData
  }, (0, _react2.jsx)(_linkUrl.default, (0, _extends2.default)({
    css: anchorStyles,
    onClick: function onClick(e) {
      if (fireAnalyticsEvent) {
        fireAnalyticsEvent({
          action: _analytics.ACTION.VISITED,
          actionSubject: _analytics.ACTION_SUBJECT.LINK,
          eventType: _analytics.EVENT_TYPE.TRACK,
          attributes: {
            platform: _events.PLATFORM.WEB,
            mode: _events.MODE.RENDERER
          }
        });
      }
      if (handler) {
        handler(e, href);
      }
    }
    // Ignored via go/ees005
    // eslint-disable-next-line react/jsx-props-no-spreading
  }, anchorProps, dataAttributes, (0, _platformFeatureFlags.fg)('platform_editor_hyperlink_underline') && {
    isLinkComponent: true
  }), props.children));
}