"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("@emotion/react");
var _reactIntlNext = require("react-intl-next");
var _tooltip = _interopRequireDefault(require("@atlaskit/tooltip"));
var _customThemeButton = _interopRequireDefault(require("@atlaskit/button/custom-theme-button"));
var _icon = _interopRequireDefault(require("@atlaskit/icon"));
var _messages = require("@atlaskit/editor-common/messages");
var _enums = require("../../../../analytics/enums");
var _analyticsContext = _interopRequireDefault(require("../../../../analytics/analyticsContext"));
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var WrapIcon = function WrapIcon() {
  return (0, _react.jsx)("svg", {
    width: "24",
    height: "24",
    fill: "none",
    viewBox: "0 0 24 24"
  }, (0, _react.jsx)("g", {
    fill: "currentColor",
    clipPath: "url(#clip0_654_431)"
  }, (0, _react.jsx)("path", {
    d: "M20 4h-1v16h1V4ZM3 8a1 1 0 0 1 1-1h9.5a4.5 4.5 0 1 1 0 9h-2.086l.293.293a1 1 0 0 1-1.414 1.414l-2-2a1 1 0 0 1 0-1.414l2-2a1 1 0 0 1 1.414 1.414l-.293.293H13.5a2.5 2.5 0 0 0 0-5H4a1 1 0 0 1-1-1Z",
    clipRule: "evenodd",
    fillRule: "evenodd"
  })));
};
var CodeBlockWrapButton = function CodeBlockWrapButton(_ref) {
  var setWrapLongLines = _ref.setWrapLongLines,
    wrapLongLines = _ref.wrapLongLines,
    intl = _ref.intl;
  var wrapMessage = intl.formatMessage(wrapLongLines ? _messages.codeBlockButtonMessages.unwrapCode : _messages.codeBlockButtonMessages.wrapCode);
  return (0, _react.jsx)(_analyticsContext.default.Consumer, null, function (_ref2) {
    var fireAnalyticsEvent = _ref2.fireAnalyticsEvent;
    return (0, _react.jsx)("span", null, (0, _react.jsx)(_tooltip.default, {
      content: wrapMessage,
      hideTooltipOnClick: false,
      position: "top"
    }, (0, _react.jsx)(_customThemeButton.default, {
      appearance: "subtle",
      "aria-haspopup": true,
      "aria-label": wrapMessage
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
      ,
      className: "wrap-code ".concat(wrapLongLines ? 'clicked' : ''),
      iconBefore: (0, _react.jsx)(_icon.default, {
        glyph: WrapIcon,
        label: ""
      }),
      isSelected: wrapLongLines,
      onClick: function onClick(event) {
        fireAnalyticsEvent({
          // @ts-expect-error - Type 'ACTION.CLICKED' is not assignable to type 'ACTION.CLICKED | ACTION.EDITOR_TTI | ACTION.MEDIA_LINK_TRANSFORMED | ACTION.STARTED | ACTION.TOGGLE_EXPAND | ACTION.UNSUPPORTED_CONTENT_ENCOUNTERED | ACTION.VISITED | ACTION.RENDERED | ACTION.INVALID_PROSEMIRROR_DOCUMENT | ACTION.CRASHED | ... 6 more ... | AnnotationActionType'
          // This error was introduced after upgrading to TypeScript 5
          action: _enums.ACTION.CLICKED,
          actionSubject: _enums.ACTION_SUBJECT.BUTTON,
          actionSubjectId: _enums.ACTION_SUBJECT_ID.CODEBLOCK_WRAP,
          attributes: {
            wrapped: !wrapLongLines
          },
          eventType: _enums.EVENT_TYPE.UI
        });
        setWrapLongLines(!wrapLongLines);
        event.stopPropagation();
      },
      spacing: "compact"
    })));
  });
};
var _default = exports.default = (0, _reactIntlNext.injectIntl)(CodeBlockWrapButton);