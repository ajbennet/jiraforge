import type { UnsupportedContentLevelsTracking } from '@atlaskit/editor-common/utils';
import type { ADFStage } from '@atlaskit/editor-common/validator';
import { type Node as PMNode, type Schema } from '@atlaskit/editor-prosemirror/model';
import { type AnalyticsEventPayload } from './analytics/events';
import { type Serializer } from './serializer';
import { type RendererAppearance } from './ui/Renderer/types';
export interface RenderOutput<T> {
    result: T;
    stat: RenderOutputStat;
    pmDoc?: PMNode;
}
export interface RenderOutputStat {
    buildTreeTime?: number;
    sanitizeTime: number;
    serializeTime?: number;
    nodesCount?: Record<string, number>;
}
export interface ResultWithTime<T> {
    output: T;
    time: number;
}
type DispatchAnalyticsEvent = (event: AnalyticsEventPayload) => void;
export declare const renderDocument: <T>(doc: any, serializer: Serializer<T>, schema?: Schema, adfStage?: ADFStage, useSpecBasedValidator?: boolean, rendererId?: string, dispatchAnalyticsEvent?: DispatchAnalyticsEvent, unsupportedContentLevelsTracking?: UnsupportedContentLevelsTracking, appearance?: RendererAppearance, includeNodesCountInStats?: boolean, skipValidation?: boolean) => RenderOutput<T | null>;
export {};
