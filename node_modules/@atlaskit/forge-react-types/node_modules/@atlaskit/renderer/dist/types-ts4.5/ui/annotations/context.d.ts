import React from 'react';
import type { Position } from './types';
import type { AnnotationProviders } from '@atlaskit/editor-common/types';
import type { AnnotationMarkStates } from '@atlaskit/adf-schema';
export type AnnotationsDraftContextWrapperChildrenProps = {
    applyAnnotationDraftAt: (position: Position) => void;
    clearAnnotationDraft: () => void;
};
type RenderCallbackType = (props: React.PropsWithChildren<AnnotationsDraftContextWrapperChildrenProps>) => React.ReactNode;
type Props = {
    setDraftRange: () => void;
    clearDraftRange: () => void;
    children: RenderCallbackType;
};
type State = {
    position: Position | null;
};
export declare const AnnotationsDraftContext: React.Context<Position | null>;
export declare const ProvidersContext: React.Context<AnnotationProviders | null | undefined>;
export declare const InlineCommentsStateContext: React.Context<Record<string, AnnotationMarkStates | null>>;
export declare class AnnotationsDraftContextWrapper extends React.Component<Props, State> {
    state: {
        position: null;
    };
    render(): React.JSX.Element;
    applyAnnotationDraftAt: (nextPosition: Position) => void;
    clearAnnotationDraft: () => void;
}
export {};
