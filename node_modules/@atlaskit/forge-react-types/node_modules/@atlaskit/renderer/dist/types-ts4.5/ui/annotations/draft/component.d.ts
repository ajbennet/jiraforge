/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import React from 'react';
import { jsx } from '@emotion/react';
import type { Position } from '../types';
import { InsertDraftPosition } from '../types';
import type { Mark } from '@atlaskit/editor-prosemirror/model';
import type { TextHighlighter } from '../../../react/types';
export declare const AnnotationDraft: ({ draftPosition, children, }: React.PropsWithChildren<{
    draftPosition: Position;
}>) => jsx.JSX.Element;
type ApplyAnnotationsProps = {
    texts: string[];
    shouldApplyAnnotationAt: InsertDraftPosition.INSIDE | InsertDraftPosition.START | InsertDraftPosition.END;
    draftPosition: Position;
    textHighlighter?: TextHighlighter;
    marks?: readonly Mark[];
};
export declare const getAnnotationIndex: (annotationPosition: InsertDraftPosition, fragmentCount: number) => number;
export declare const applyAnnotationOnText: ({ texts, shouldApplyAnnotationAt, draftPosition, textHighlighter, marks, }: ApplyAnnotationsProps) => JSX.Element[];
type Props = React.PropsWithChildren<{
    startPos: number;
    endPos: number;
    textHighlighter?: TextHighlighter;
    marks?: readonly Mark[];
}>;
export declare const TextWithAnnotationDraft: ({ startPos, endPos, children, textHighlighter, marks, }: Props) => jsx.JSX.Element;
export {};
