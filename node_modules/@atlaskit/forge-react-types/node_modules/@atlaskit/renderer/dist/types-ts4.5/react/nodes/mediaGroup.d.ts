import type { ReactElement } from 'react';
import React, { PureComponent } from 'react';
import type { CardEvent } from '@atlaskit/media-card';
import type { EventHandlers, CardEventClickHandler } from '@atlaskit/editor-common/ui';
import type { Identifier } from '@atlaskit/media-client';
import type { MediaProps } from './media';
import type { MediaFeatureFlags } from '@atlaskit/media-common';
export interface MediaGroupProps {
    children?: React.ReactNode;
    eventHandlers?: EventHandlers;
    featureFlags?: MediaFeatureFlags;
    enableDownloadButton?: boolean;
}
interface MediaGroupState {
    animate: boolean;
    offset: number;
}
export default class MediaGroup extends PureComponent<MediaGroupProps, MediaGroupState> {
    state: MediaGroupState;
    private handleSize;
    private handleScroll;
    render(): React.JSX.Element;
    renderSingleFile(child: ReactElement<MediaProps>): ReactElement<MediaProps, string | React.JSXElementConstructor<any>>;
    renderSingleLink(child: ReactElement<MediaProps>): ReactElement<MediaProps, string | React.JSXElementConstructor<any>>;
    onMediaClick: (cardClickHandler: CardEventClickHandler, child: ReactElement<MediaProps>, surroundingItems: Identifier[]) => (event: CardEvent, analyticsEvent?: any) => void;
    cloneFileCard(child: ReactElement<MediaProps>, surroundingItems: Identifier[]): ReactElement<MediaProps, string | React.JSXElementConstructor<any>>;
    renderStrip(): React.JSX.Element;
    private mapMediaPropsToIdentifier;
}
export {};
