import type { InlineCommentViewComponentProps, AnnotationUpdateEmitter } from '@atlaskit/editor-common/types';
import type { AnnotationMarkStates, AnnotationId } from '@atlaskit/adf-schema';
import { AnnotationTypes } from '@atlaskit/adf-schema';
import type { CreateUIAnalyticsEvent } from '@atlaskit/analytics-next';
type ListenEventProps = {
    id: AnnotationId;
    updateSubscriber: AnnotationUpdateEmitter | null;
    createAnalyticsEvent?: CreateUIAnalyticsEvent;
    isNestedRender?: boolean;
};
type UseAnnotationUpdateSatteByEventProps = {
    type: AnnotationTypes;
    updateSubscriber: AnnotationUpdateEmitter | null;
};
export declare const useAnnotationStateByTypeEvent: ({ type, updateSubscriber, }: UseAnnotationUpdateSatteByEventProps) => Record<string, AnnotationMarkStates | null>;
export declare const useHasFocusEvent: ({ id, updateSubscriber }: ListenEventProps) => {
    hasFocus: boolean;
    isHovered: boolean;
};
type AnnotationsWithClickTarget = Pick<InlineCommentViewComponentProps, 'annotations' | 'clickElementTarget'> | null;
export declare const useAnnotationClickEvent: (props: Pick<ListenEventProps, 'updateSubscriber' | 'createAnalyticsEvent' | 'isNestedRender'>) => AnnotationsWithClickTarget;
export {};
