/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import React from 'react';
import { jsx } from '@emotion/react';
import type { Node as PMNode } from '@atlaskit/editor-prosemirror/model';
import type { OverflowShadowProps } from '@atlaskit/editor-common/ui';
import type { TableLayout } from '@atlaskit/adf-schema';
import type { RendererAppearance } from '../../../ui/Renderer/types';
export type StickyMode = 'none' | 'stick' | 'pin-bottom';
export declare const tableStickyPadding = 8;
type StickyTableProps = {
    left?: number;
    top?: number;
    mode: StickyMode;
    innerRef: React.RefObject<HTMLDivElement>;
    rowHeight: number;
    wrapperWidth: number;
    tableWidth: 'inherit' | number;
    isNumberColumnEnabled: boolean;
    children: React.ReactNode[];
    layout: TableLayout;
    columnWidths?: number[];
    renderWidth: number;
    tableNode?: PMNode;
    rendererAppearance: RendererAppearance;
    allowTableResizing?: boolean;
} & OverflowShadowProps;
export declare const StickyTable: ({ top, left, mode, shadowClassNames, innerRef, wrapperWidth, tableWidth, isNumberColumnEnabled, layout, children, columnWidths, renderWidth, rowHeight, tableNode, rendererAppearance, allowTableResizing, }: StickyTableProps) => jsx.JSX.Element;
export declare class OverflowParent {
    private ref;
    private constructor();
    static fromElement(el: HTMLElement | null, defaultScrollRootId?: string): OverflowParent;
    get isElement(): boolean;
    get id(): string;
    get top(): number;
    addEventListener(type: string, cb: EventListenerOrEventListenerObject, ...args: any[]): void;
    removeEventListener(type: string, cb: EventListenerOrEventListenerObject, ...args: any[]): void;
}
export {};
