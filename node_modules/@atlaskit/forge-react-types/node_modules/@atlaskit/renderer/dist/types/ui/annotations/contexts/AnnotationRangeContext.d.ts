import type { ReactNode } from 'react';
import React from 'react';
type RangeType = 'selection' | 'hover' | null;
interface AnnotationRangeStateContext {
    range: Range | null;
    draftRange: Range | null;
    type: RangeType;
}
interface AnnotationRangeDispatchContext {
    clearRange: () => void;
    clearSelectionRange: () => void;
    clearDraftRange: (type: RangeType) => void;
    clearHoverRange: () => void;
    setRange: (range: Range) => void;
    setDraftRange: (draftRange: Range | null, type: RangeType) => void;
    setHoverTarget?: (target: HTMLElement) => void;
}
declare const AnnotationRangeStateContext: React.Context<AnnotationRangeStateContext>;
declare const AnnotationRangeDispatchContext: React.Context<AnnotationRangeDispatchContext>;
export declare const AnnotationRangeProvider: ({ children, allowCommentsOnMedia, }: {
    children?: ReactNode;
    allowCommentsOnMedia?: boolean | undefined;
}) => React.JSX.Element;
export declare const useAnnotationRangeState: () => AnnotationRangeStateContext;
export declare const useAnnotationRangeDispatch: () => AnnotationRangeDispatchContext;
export {};
