/**
 * @jsxRuntime classic
 * @jsx jsx
 * @jsxFrag
 */
import type { PropsWithChildren } from 'react';
import React from 'react';
import { jsx } from '@emotion/react';
import type { ProviderFactory } from '@atlaskit/editor-common/provider-factory';
import type { EventHandlers } from '@atlaskit/editor-common/ui';
import type { MediaCardProps } from '../../../ui/MediaCard';
import type { LinkDefinition, BorderMarkDefinition, AnnotationMarkDefinition } from '@atlaskit/adf-schema';
import type { MediaFeatureFlags } from '@atlaskit/media-common';
import type { AnalyticsEventPayload } from '../../../analytics/events';
export type MediaProps = MediaCardProps & {
    providers?: ProviderFactory;
    allowAltTextOnImages?: boolean;
    children?: React.ReactNode;
    isInsideOfBlockNode?: boolean;
    marks: Array<LinkDefinition | BorderMarkDefinition | AnnotationMarkDefinition>;
    isBorderMark: () => boolean;
    isLinkMark: () => boolean;
    isAnnotationMark?: () => boolean;
    fireAnalyticsEvent?: (event: AnalyticsEventPayload) => void;
    featureFlags?: MediaFeatureFlags;
    eventHandlers?: EventHandlers;
    enableDownloadButton?: boolean;
    allowAnnotationsDraftMode?: boolean;
    mediaSingleElement?: HTMLElement | null;
    width?: number;
    height?: number;
    isDrafting: boolean;
};
declare const MediaWithDraftAnnotation: (props: PropsWithChildren<MediaProps>) => jsx.JSX.Element;
export default MediaWithDraftAnnotation;
