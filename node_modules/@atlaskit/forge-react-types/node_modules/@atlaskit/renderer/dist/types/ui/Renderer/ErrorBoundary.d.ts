import React from 'react';
import type { CreateUIAnalyticsEvent } from '@atlaskit/analytics-next';
import type { ComponentCrashErrorAEP } from '../../analytics/events';
interface ErrorBoundaryProps {
    component: ComponentCrashErrorAEP['actionSubject'];
    children: React.ReactNode;
    componentId?: ComponentCrashErrorAEP['actionSubjectId'];
    fallbackComponent?: React.ReactNode;
    createAnalyticsEvent?: CreateUIAnalyticsEvent;
    rethrowError?: boolean;
    additionalInfo?: string;
}
interface ErrorBoundaryState {
    errorCaptured: boolean;
    domError: boolean;
}
export declare class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {
    state: {
        errorCaptured: boolean;
        domError: boolean;
    };
    private fireAnalyticsEvent;
    private hasFallback;
    private shouldRecover;
    componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void;
    render(): string | number | boolean | Iterable<React.ReactNode> | React.JSX.Element | null | undefined;
}
export {};
