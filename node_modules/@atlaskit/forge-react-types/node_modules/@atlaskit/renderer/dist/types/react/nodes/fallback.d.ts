import React from 'react';
type CardErrorBoundaryProps = {
    unsupportedComponent: React.ComponentType<React.PropsWithChildren<unknown>>;
};
export declare class CardErrorBoundary extends React.PureComponent<{
    url?: string;
    onClick?: (e: React.MouseEvent<HTMLElement>, url?: string) => void;
    isDatasource?: boolean;
    children?: React.ReactNode;
    datasourceId?: string;
} & CardErrorBoundaryProps> {
    state: {
        isError: boolean;
        error: null;
    };
    onClickFallback: (e: React.MouseEvent<HTMLElement>) => void;
    static getDerivedStateFromError(error: Error): {
        isError: boolean;
        error: Error;
    };
    render(): string | number | boolean | Iterable<React.ReactNode> | React.JSX.Element | null | undefined;
    componentDidCatch(_error: Error): void;
}
export {};
