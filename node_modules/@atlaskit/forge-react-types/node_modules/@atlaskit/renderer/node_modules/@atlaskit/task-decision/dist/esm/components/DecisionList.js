import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

import React from 'react';
import { PureComponent } from 'react';
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { jsx } from '@emotion/react';
import { listStyles } from './styles';
var DecisionList = /*#__PURE__*/function (_PureComponent) {
  function DecisionList() {
    _classCallCheck(this, DecisionList);
    return _callSuper(this, DecisionList, arguments);
  }
  _inherits(DecisionList, _PureComponent);
  return _createClass(DecisionList, [{
    key: "render",
    value: function render() {
      var children = this.props.children;
      if (!children) {
        return null;
      }

      // Data attributes are required for copy and paste from rendered content
      // to the editor to preserve the decision.
      // This allows the editor to differentiate between numbered and ordered lists,
      // and action items, which all share the common `<li>` element.
      // The value of `data-decision-local-id` should be discarded upon paste, with a
      // a new uuid generated by the editor for the cloned content.
      return (
        // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
        jsx("ol", {
          css: listStyles,
          "data-decision-list-local-id": "",
          "data-node-type": "decisionList"
        }, React.Children.map(children, function (child, idx) {
          var _ref = child.props,
            localId = _ref.localId;
          return jsx("li", {
            key: idx,
            "data-decision-local-id": localId || '',
            "data-decision-state": "DECIDED"
          }, child);
        }))
      );
    }
  }]);
}(PureComponent);
export { DecisionList as default };