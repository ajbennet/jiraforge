/**
 * @jsxRuntime classic
 * @jsx jsx
 */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { css, jsx } from '@emotion/react';
import SuccessIcon from '@atlaskit/icon/glyph/editor/success';
import ErrorIcon from '@atlaskit/icon/glyph/error';
const errorColor = css({
  color: "var(--ds-text-danger, #AE2E24)"
});
const validColor = css({
  color: "var(--ds-text-success, #216E4E)"
});

// eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage -- Ignored via go/DSP-18766
const messageStyle = () =>
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
css({
  // eslint-disable-next-line @atlaskit/design-system/use-tokens-typography
  fontSize: `${12 / 14}em`,
  fontStyle: 'inherit',
  // eslint-disable-next-line @atlaskit/design-system/use-tokens-typography
  lineHeight: 16 / 12,
  fontWeight: "var(--ds-font-weight-regular, 400)",
  color: "var(--ds-text-subtlest, #626F86)",
  marginTop: "var(--ds-space-050, 4px)",
  display: 'flex',
  justifyContent: 'baseline'
});
const iconWrapperStyle = css({
  display: 'flex',
  marginRight: "var(--ds-space-050, 4px)"
});
export const HelperMessage = ({
  children
}) => jsx("div", {
  css: messageStyle
}, children);
export const ErrorMessage = ({
  children
}) => jsx("div", {
  css: () => {
    return [messageStyle(), errorColor];
  }
}, jsx("span", {
  css: iconWrapperStyle
}, jsx(ErrorIcon, {
  size: "small",
  label: "error",
  "aria-label": "error"
})), children);
export const ValidMessage = ({
  children
}) => jsx("div", {
  css: () => {
    return [messageStyle(), validColor];
  }
}, jsx("span", {
  css: iconWrapperStyle
}, jsx(SuccessIcon, {
  size: "small",
  label: "success"
})), children);