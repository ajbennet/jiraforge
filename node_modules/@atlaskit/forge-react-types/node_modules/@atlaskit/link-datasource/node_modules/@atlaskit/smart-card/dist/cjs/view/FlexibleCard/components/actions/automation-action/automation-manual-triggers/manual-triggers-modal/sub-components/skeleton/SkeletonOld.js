"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SkeletonOld = void 0;
var _react = require("@emotion/react");
var _colors = require("@atlaskit/theme/colors");
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var AutomationSkeletonContainer = (0, _react.css)({
  paddingBlock: "var(--ds-space-025, 2px)"
});
var SkeletonContainer = (0, _react.css)({
  marginBlock: "var(--ds-space-100, 8px)",
  marginInline: "var(--ds-space-250, 20px)",
  display: 'flex'
});
var SkeletonIcon = (0, _react.css)({
  width: "var(--ds-space-200, 16px)",
  height: "var(--ds-space-200, 16px)",
  display: 'inline-block',
  borderRadius: "var(--ds-space-025, 2px)",
  backgroundColor: 'currentColor',
  border: "var(--ds-space-025, 2px)".concat(" solid transparent"),
  opacity: 0.15
});
var MenuIcon = (0, _react.css)({
  width: '24px',
  height: '24px',
  display: 'flex',
  justifyContent: 'center',
  alignItems: 'center'
});
var shimmer = (0, _react.keyframes)({
  '0%': {
    backgroundPosition: '-300px 0'
  },
  '100%': {
    backgroundPosition: '2000px 0'
  }
});
var SkeletonText = (0, _react.css)({
  width: '85%',
  height: "var(--ds-space-200, 16px)",
  marginTop: "var(--ds-space-050, 4px)",
  marginLeft: "var(--ds-space-150, 12px)",
  animationDuration: '1s',
  animationFillMode: 'forwards',
  animationIterationCount: 'infinite',
  animationName: shimmer,
  animationTimingFunction: 'linear',
  backgroundColor: "var(--ds-skeleton, ".concat(_colors.N30, ")"),
  backgroundImage: "linear-gradient(to right, ".concat("var(--ds-skeleton, ".concat(_colors.N30, ")"), " 10%, ", "var(--ds-skeleton-subtle, ".concat(_colors.N20, ")"), " 30%, ", "var(--ds-skeleton, ".concat(_colors.N30, ")"), " 50%)"),
  backgroundRepeat: 'no-repeat'
});
var SkeletonLine = function SkeletonLine() {
  return (0, _react.jsx)("div", {
    css: SkeletonContainer
  }, (0, _react.jsx)("div", {
    css: MenuIcon
  }, (0, _react.jsx)("div", {
    css: SkeletonIcon
  })), (0, _react.jsx)("div", {
    css: SkeletonText
  }));
};
var getSkeletonLines = function getSkeletonLines(lineCount) {
  var skeletonLines = [];
  for (var i = 0; i < lineCount; i++) {
    skeletonLines.push((0, _react.jsx)(SkeletonLine, {
      key: "skeleton-line-".concat(i)
    }));
  }
  return skeletonLines;
};
var SkeletonOld = exports.SkeletonOld = function SkeletonOld(props) {
  var _props$lineCount = props.lineCount,
    lineCount = _props$lineCount === void 0 ? 5 : _props$lineCount;
  return (
    // eslint-disable-next-line @atlaskit/design-system/use-primitives
    (0, _react.jsx)("div", {
      css: AutomationSkeletonContainer
    }, getSkeletonLines(lineCount))
  );
};