"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var _react2 = require("@emotion/react");
var _reactIntlNext = require("react-intl-next");
var _reactMagneticDi = require("react-magnetic-di");
var _buttonGroup = _interopRequireDefault(require("@atlaskit/button/button-group"));
var _standardButton = _interopRequireDefault(require("@atlaskit/button/standard-button"));
var _dropdownMenu = _interopRequireDefault(require("@atlaskit/dropdown-menu"));
var _showMoreHorizontalMore = _interopRequireDefault(require("@atlaskit/icon/core/migration/show-more-horizontal--more"));
var _tooltip = _interopRequireDefault(require("@atlaskit/tooltip"));
var _constants = require("../../../../../constants");
var _messages = require("../../../../../messages");
var _flexibleUiContext = require("../../../../../state/flexible-ui-context");
var _utils = require("../../utils");
var _utils2 = require("../utils");
var _actionGroupItem = _interopRequireDefault(require("./action-group-item"));
var _excluded = ["triggerRef"];
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
var styles = (0, _react2.css)({
  display: 'inline-flex',
  // eslint-disable-next-line @atlaskit/design-system/use-tokens-typography
  lineHeight: '1rem',
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
  '> div': {
    alignItems: 'center',
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
    'button:focus-visible': {
      outlineOffset: "var(--ds-space-negative-025, -2px)"
    }
  }
});
var renderActionItems = function renderActionItems() {
  var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _constants.SmartLinkSize.Medium;
  var appearance = arguments.length > 2 ? arguments[2] : undefined;
  var asDropDownItems = arguments.length > 3 ? arguments[3] : undefined;
  var onActionItemClick = arguments.length > 4 ? arguments[4] : undefined;
  return items.map(function (item, idx) {
    return (0, _react2.jsx)(_actionGroupItem.default, {
      item: item,
      key: idx,
      size: size,
      appearance: appearance,
      asDropDownItems: asDropDownItems,
      onActionItemClick: onActionItemClick
    });
  });
};

/**
 * Creates a group of Action components. Accepts an array of Actions, in addition to some styling
 * preferences.
 * @internal
 * @param {ActionGroupProps} ActionGroupProps
 * @see Action
 */
var ActionGroupOld = function ActionGroupOld(_ref) {
  var _ref$items = _ref.items,
    items = _ref$items === void 0 ? [] : _ref$items,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? _constants.SmartLinkSize.Medium : _ref$size,
    appearance = _ref.appearance,
    _ref$visibleButtonsNu = _ref.visibleButtonsNum,
    visibleButtonsNum = _ref$visibleButtonsNu === void 0 ? 2 : _ref$visibleButtonsNu,
    onDropdownOpenChange = _ref.onDropdownOpenChange;
  var context = (0, _flexibleUiContext.useFlexibleUiContext)();
  var ui = (0, _flexibleUiContext.useFlexibleUiOptionContext)();
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    isOpen = _useState2[0],
    setIsOpen = _useState2[1];
  var renderableActionItems = (0, _react.useMemo)(function () {
    return (0, _utils2.filterActionItems)(items, context);
  }, [context, items]);
  var isMoreThenTwoItems = renderableActionItems.length > visibleButtonsNum;
  var onOpenChange = (0, _react.useCallback)(function (attrs) {
    setIsOpen(attrs.isOpen);
    if (onDropdownOpenChange) {
      onDropdownOpenChange(attrs.isOpen);
    }
  }, [onDropdownOpenChange]);
  var onActionItemClick = (0, _react.useCallback)(function () {
    if (isOpen) {
      onOpenChange({
        isOpen: false
      });
    }
  }, [isOpen, onOpenChange]);
  var actionButtons = (0, _react.useMemo)(function () {
    var actionItems = isMoreThenTwoItems ? renderableActionItems.slice(0, visibleButtonsNum - 1) : renderableActionItems;
    return renderActionItems(actionItems, size, appearance, false, onActionItemClick);
  }, [appearance, isMoreThenTwoItems, onActionItemClick, renderableActionItems, size, visibleButtonsNum]);
  var moreActionDropdown = (0, _react.useMemo)(function () {
    var actionItems = isMoreThenTwoItems ? renderableActionItems.slice(visibleButtonsNum - 1) : [];
    if (actionItems.length > 0) {
      var spacing = _utils.sizeToButtonSpacing[size];
      var moreIcon = (0, _react2.jsx)(_showMoreHorizontalMore.default, {
        label: "more",
        color: "currentColor"
      });
      var formatMessage = (0, _react2.jsx)(_reactIntlNext.FormattedMessage, _messages.messages.more_actions);
      return (0, _react2.jsx)(_dropdownMenu.default, {
        isOpen: isOpen,
        onOpenChange: onOpenChange,
        trigger: function trigger(_ref2) {
          var triggerRef = _ref2.triggerRef,
            props = (0, _objectWithoutProperties2.default)(_ref2, _excluded);
          return (0, _react2.jsx)(_tooltip.default, {
            content: formatMessage,
            hideTooltipOnClick: true,
            testId: "action-group-more-button-tooltip",
            tag: "span"
          }, (0, _react2.jsx)(_standardButton.default, (0, _extends2.default)({}, props, {
            spacing: spacing,
            testId: "action-group-more-button",
            iconBefore: moreIcon,
            ref: triggerRef
          })));
        },
        testId: "action-group-dropdown",
        zIndex: ui === null || ui === void 0 ? void 0 : ui.zIndex
      }, renderActionItems(actionItems, size, appearance, true, onActionItemClick));
    }
    return null;
  }, [appearance, isMoreThenTwoItems, isOpen, onActionItemClick, onOpenChange, renderableActionItems, size, ui === null || ui === void 0 ? void 0 : ui.zIndex, visibleButtonsNum]);
  return renderableActionItems.length > 0 ? (0, _react2.jsx)("div", {
    css: styles
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
    ,
    className: "actions-button-group",
    "data-action-open": isOpen
  }, (0, _react2.jsx)(_buttonGroup.default, null, actionButtons, moreActionDropdown)) : null;
};
var _default = exports.default = ActionGroupOld;