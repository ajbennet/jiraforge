import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["actionGroup", "testId", "title", "hideIcon"];
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { jsx } from '@emotion/react';
import { SmartLinkSize } from '../../../../../../constants';
import { LoadingSkeletonOld } from '../../../common/loading-skeleton';
import { getIconSizeStyles, getIconWidth } from '../../../utils';
import Block from '../../block';
/**
 * This represents a TitleBlock for a Smart Link that is currently waiting
 * for a request to finish.
 * This should render when a Smart Link has sent a request.
 * @see TitleBlock
 */
var TitleBlockResolvingViewOld = function TitleBlockResolvingViewOld(_ref) {
  var actionGroup = _ref.actionGroup,
    testId = _ref.testId,
    title = _ref.title,
    hideIcon = _ref.hideIcon,
    blockProps = _objectWithoutProperties(_ref, _excluded);
  var _blockProps$size = blockProps.size,
    size = _blockProps$size === void 0 ? SmartLinkSize.Medium : _blockProps$size;
  var iconWidth = getIconWidth(size);
  var iconStyles = getIconSizeStyles(iconWidth);
  return jsx(Block, _extends({}, blockProps, {
    testId: "".concat(testId, "-resolving-view")
  }), !hideIcon &&
  // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage -- Ignored via go/DSP-18766
  jsx("span", {
    css: iconStyles,
    "data-testid": "".concat(testId, "-icon")
  }, jsx(LoadingSkeletonOld, {
    testId: "".concat(testId, "-icon-loading")
  })), title, actionGroup);
};
export default TitleBlockResolvingViewOld;