"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("@emotion/react");
var _tokens = require("@atlaskit/tokens");
var _styled = require("../../HoverCard/styled");
var _aiGlowingBorder = _interopRequireDefault(require("./ai-glowing-border"));
var _constants = require("./constants");
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var contentStyles = (0, _react.css)({
  transition: 'box-shadow 0.5s ease'
});
var contentStylesPrismVisible = (0, _react.css)({
  // intentionally set opacity to 0 to remove the shadow with fade out animation
  boxShadow:
  // eslint-disable-next-line @atlaskit/design-system/ensure-design-token-usage
  '0px 8px 12px rgba(9, 30, 66, 0),0px 0px 1px rgba(9, 30, 66, 0)'
});
var AIPrismOld = function AIPrismOld(_ref) {
  var _AI_BORDER_PALETTE$co;
  var children = _ref.children,
    _ref$isGlowing = _ref.isGlowing,
    isGlowing = _ref$isGlowing === void 0 ? true : _ref$isGlowing,
    _ref$isMoving = _ref.isMoving,
    isMoving = _ref$isMoving === void 0 ? true : _ref$isMoving,
    isVisible = _ref.isVisible,
    testId = _ref.testId;
  var _useThemeObserver = (0, _tokens.useThemeObserver)(),
    _useThemeObserver$col = _useThemeObserver.colorMode,
    colorMode = _useThemeObserver$col === void 0 ? 'light' : _useThemeObserver$col;
  return (0, _react.jsx)(_aiGlowingBorder.default, {
    additionalCss: {
      animatedSvgContainer: (0, _react.css)({
        // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
        opacity: isVisible ? 1 : 0,
        transition: 'opacity 0.5s ease'
      })
    },
    palette: (_AI_BORDER_PALETTE$co = _constants.AI_BORDER_PALETTE[colorMode]) !== null && _AI_BORDER_PALETTE$co !== void 0 ? _AI_BORDER_PALETTE$co : _constants.AI_BORDER_PALETTE.light,
    isGlowing: isGlowing,
    isMoving: isMoving,
    testId: testId
  }, (0, _react.jsx)("div", {
    css: [
    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
    _styled.popupContainerStyles, contentStyles, isVisible ? contentStylesPrismVisible : undefined]
  }, children));
};
var _default = exports.default = AIPrismOld;