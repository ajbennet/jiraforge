import React from 'react';
import { fg } from '@atlaskit/platform-feature-flags';
import Spinner from '@atlaskit/spinner';
import { Frame } from '../Frame';
import { IconAndTitleLayout, IconTitleWrapper } from '../IconAndTitleLayout';
import { RightIconPositionWrapper } from '../IconAndTitleLayout/styled';
import { InlineCardResolvingViewOld } from './InlineCardResolvingViewOld';
import { SpinnerWrapperOldVisualRefresh } from './styled';
var InlineCardResolvingViewNew = function InlineCardResolvingViewNew(_ref) {
  var url = _ref.url,
    onClick = _ref.onClick,
    isSelected = _ref.isSelected,
    inlinePreloaderStyle = _ref.inlinePreloaderStyle,
    _ref$testId = _ref.testId,
    testId = _ref$testId === void 0 ? 'inline-card-resolving-view' : _ref$testId,
    titleTextColor = _ref.titleTextColor,
    resolvingPlaceholder = _ref.resolvingPlaceholder,
    truncateInline = _ref.truncateInline;
  var renderSpinner = React.useCallback(function () {
    return fg('platform-linking-visual-refresh-v1') ? /*#__PURE__*/React.createElement(Spinner, {
      size: 14
    }) :
    /*#__PURE__*/
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop
    React.createElement(SpinnerWrapperOldVisualRefresh, {
      className: "inline-resolving-spinner"
    }, /*#__PURE__*/React.createElement(Spinner, {
      size: 14
    }));
  }, []);
  if (inlinePreloaderStyle === 'on-right-without-skeleton') {
    return /*#__PURE__*/React.createElement(Frame, {
      withoutBackground: true,
      testId: testId,
      onClick: onClick,
      isSelected: isSelected,
      truncateInline: truncateInline
    }, /*#__PURE__*/React.createElement(IconTitleWrapper, null, url, /*#__PURE__*/React.createElement(RightIconPositionWrapper, null, renderSpinner())));
  }
  return /*#__PURE__*/React.createElement(Frame, {
    testId: testId,
    onClick: onClick,
    isSelected: isSelected,
    link: url,
    truncateInline: truncateInline
  }, /*#__PURE__*/React.createElement(IconAndTitleLayout, {
    title: resolvingPlaceholder !== null && resolvingPlaceholder !== void 0 ? resolvingPlaceholder : url,
    titleTextColor: titleTextColor
  }, renderSpinner()));
};
export var InlineCardResolvingView = function InlineCardResolvingView(props) {
  if (fg('bandicoots-compiled-migration-smartcard')) {
    return /*#__PURE__*/React.createElement(InlineCardResolvingViewNew, props);
  }
  return /*#__PURE__*/React.createElement(InlineCardResolvingViewOld, props);
};