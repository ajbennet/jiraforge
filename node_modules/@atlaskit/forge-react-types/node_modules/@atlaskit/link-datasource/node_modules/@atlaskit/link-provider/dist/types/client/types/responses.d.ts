import { type JsonLd } from '@atlaskit/json-ld-types';
import { type ServerErrorType } from '@atlaskit/linking-common';
export type BatchResponse = Array<SuccessResponse | ErrorResponse>;
export type SuccessResponse = {
    status: number;
    body: JsonLd.Response;
};
export interface ErrorResponse {
    status: number;
    error: ErrorResponseBody;
}
export interface ErrorResponseBody {
    type: ServerErrorType;
    message: string;
    status: number;
    extensionKey?: string;
}
export declare const isSuccessfulResponse: (response?: SuccessResponse | ErrorResponse) => response is SuccessResponse;
export declare const isErrorResponse: (response: SuccessResponse | ErrorResponse | JsonLd.Collection) => response is ErrorResponse;
export interface SearchProviderInfo {
    key: string;
    metadata: {
        name: string;
        avatarUrl: string;
        displayName?: string;
        [key: string]: unknown;
    };
}
export interface SearchProviderInfoResponse {
    providers: SearchProviderInfo[];
}
