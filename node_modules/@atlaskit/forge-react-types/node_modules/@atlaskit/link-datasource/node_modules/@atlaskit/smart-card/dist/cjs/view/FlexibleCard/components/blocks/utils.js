"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.renderElementItems = exports.renderChildren = exports.isJSXElementNull = exports.highlightRemoveStyles = exports.getGapSize = exports.getBaseStyles = exports.getActionGroupStyles = exports.filterActionItems = exports.ElementDisplaySchema = void 0;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("react"));
var _react2 = require("@emotion/react");
var _constants = require("../../../../constants");
var _flexible = require("../../../../utils/flexible");
var Elements = _interopRequireWildcard(require("../elements"));
var _actionGroup = _interopRequireDefault(require("./action-group"));
var _elementGroup = _interopRequireDefault(require("./element-group"));
var _excluded = ["name"];
var _ElementDisplaySchema, _templateObject; // eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
// Determine whether the element can be display as inline/block.

var ElementDisplaySchema = exports.ElementDisplaySchema = (_ElementDisplaySchema = {}, (0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)(_ElementDisplaySchema, _constants.ElementName.AssignedTo, ['inline']), _constants.ElementName.AssignedToGroup, ['inline']), _constants.ElementName.AttachmentCount, ['inline']), _constants.ElementName.AuthorGroup, ['inline']), _constants.ElementName.ChecklistProgress, ['inline']), _constants.ElementName.CollaboratorGroup, ['inline']), _constants.ElementName.CommentCount, ['inline']), _constants.ElementName.CreatedBy, ['inline']), _constants.ElementName.CreatedOn, ['inline']), _constants.ElementName.DueOn, ['inline']), (0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)(_ElementDisplaySchema, _constants.ElementName.LatestCommit, ['inline']), _constants.ElementName.LinkIcon, ['inline']), _constants.ElementName.Location, ['inline']), _constants.ElementName.ModifiedBy, ['inline']), _constants.ElementName.ModifiedOn, ['inline']), _constants.ElementName.OwnedBy, ['inline']), _constants.ElementName.OwnedByGroup, ['inline']), _constants.ElementName.Preview, ['block']), _constants.ElementName.Priority, ['inline']), _constants.ElementName.ProgrammingLanguage, ['inline']), (0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)(_ElementDisplaySchema, _constants.ElementName.Provider, ['inline']), _constants.ElementName.ReactCount, ['inline']), _constants.ElementName.ReadTime, ['inline']), _constants.ElementName.Snippet, ['block']), _constants.ElementName.SourceBranch, ['inline']), _constants.ElementName.SentOn, ['inline']), _constants.ElementName.State, ['inline']), _constants.ElementName.SubscriberCount, ['inline']), _constants.ElementName.SubTasksProgress, ['inline']), _constants.ElementName.StoryPoints, ['inline']), (0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)(_ElementDisplaySchema, _constants.ElementName.TargetBranch, ['inline']), _constants.ElementName.Title, ['inline']), _constants.ElementName.ViewCount, ['inline']), _constants.ElementName.VoteCount, ['inline']));
var getDirectionStyles = function getDirectionStyles(direction) {
  switch (direction) {
    case _constants.SmartLinkDirection.Vertical:
      return (0, _react2.css)({
        flexDirection: 'column',
        alignItems: 'flex-start'
      });
    case _constants.SmartLinkDirection.Horizontal:
    default:
      return (0, _react2.css)({
        flexDirection: 'row',
        alignItems: 'center'
      });
  }
};

/**
 * Get gap size between elements inside a block
 * Equivalent version for DS primitives space token is getPrimitivesInlineSpaceBySize()
 * at view/FlexibleCard/components/utils.tsx
 */
var getGapSize = exports.getGapSize = function getGapSize(size) {
  switch (size) {
    case _constants.SmartLinkSize.XLarge:
      return 1.25;
    case _constants.SmartLinkSize.Large:
      return 1;
    case _constants.SmartLinkSize.Medium:
      return 0.5;
    case _constants.SmartLinkSize.Small:
    default:
      return 0.25;
  }
};

/**
 * @deprecated remove on FF clean up bandicoots-compiled-migration-smartcard
 */
var getBaseStyles = exports.getBaseStyles = function getBaseStyles(direction, size) {
  return (0, _react2.css)({
    alignItems: 'center',
    display: 'flex',
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    gap: "".concat(getGapSize(size), "rem"),
    // eslint-disable-next-line @atlaskit/design-system/use-tokens-typography
    lineHeight: '1rem',
    minWidth: 0,
    overflow: 'hidden'
  },
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  getDirectionStyles(direction), {
    '&:empty': {
      display: 'none'
    },
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
    '& > *': {
      minWidth: 0
    },
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
    '& > [data-fit-to-content]': {
      minWidth: 'fit-content'
    }
  });
};

// eslint-disable-next-line @atlaskit/design-system/no-css-tagged-template-expression, @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var highlightRemoveStyles = exports.highlightRemoveStyles = (0, _react2.css)(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2.default)(["\n\toutline: none !important;\n\toutline-color: inherit;\n\tcolor: inherit;\n\t-webkit-tap-highlight-color: transparent;\n\t-webkit-touch-callout: none;\n\t-webkit-user-select: none;\n\t-moz-user-select: none;\n\t-ms-user-select: none;\n\tuser-select: none;\n"])));
var isActionGroup = function isActionGroup(node) {
  return /*#__PURE__*/_react.default.isValidElement(node) && node.type === _actionGroup.default;
};
var isElementDisplayValid = function isElementDisplayValid(name, display) {
  var _ElementDisplaySchema2, _ElementDisplaySchema3;
  return (_ElementDisplaySchema2 = (_ElementDisplaySchema3 = ElementDisplaySchema[name]) === null || _ElementDisplaySchema3 === void 0 ? void 0 : _ElementDisplaySchema3.includes(display)) !== null && _ElementDisplaySchema2 !== void 0 ? _ElementDisplaySchema2 : false;
};
var isJSXElementNull = exports.isJSXElementNull = function isJSXElementNull(children) {
  return Boolean(children.type() === null);
};
var isElementOrElementGroup = function isElementOrElementGroup(node) {
  return /*#__PURE__*/_react.default.isValidElement(node) && ((0, _flexible.isFlexibleUiElement)(node) || node.type === _elementGroup.default);
};
var getActionGroupStyles = exports.getActionGroupStyles = function getActionGroupStyles(size) {
  if (size === _constants.SmartLinkSize.XLarge) {
    // The biggest height of the action button exceeds the max line-height
    // of the elements causing the action on the block with x-large size to
    // get cut at the bottom.
    return (0, _react2.css)({
      maxHeight: '2rem'
    });
  }
};
var filterActionItems = exports.filterActionItems = function filterActionItems() {
  var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var context = arguments.length > 1 ? arguments[1] : undefined;
  return items.filter(function (item) {
    switch (item.name) {
      case _constants.ActionName.DeleteAction:
      case _constants.ActionName.EditAction:
      case _constants.ActionName.CustomAction:
        // Named and custom actions that user defines.
        return Boolean(_constants.ActionName[item.name]);
      default:
        // Action that require data from the data context to render.
        if ((context === null || context === void 0 ? void 0 : context.actions) === undefined) {
          return false;
        }
        return Boolean(item.name in context.actions ? context.actions[item.name] : undefined);
    }
  });
};
var renderChildren = exports.renderChildren = function renderChildren(children, size) {
  return _react.default.Children.map(children, function (child) {
    if (isElementOrElementGroup(child) || isActionGroup(child)) {
      var node = child;
      var childSize = node.props.size;
      return /*#__PURE__*/_react.default.cloneElement(node, {
        size: childSize || size
      });
    }
    return child;
  });
};
var renderElementItems = exports.renderElementItems = function renderElementItems() {
  var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var display = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'inline';
  var elements = items.reduce(function (acc, curr, idx) {
    var name = curr.name,
      props = (0, _objectWithoutProperties2.default)(curr, _excluded);
    var Element = Elements[name];
    var typedProps = props;
    if (Element && isElementDisplayValid(name, display)) {
      var element = /*#__PURE__*/_react.default.createElement(Element, (0, _extends2.default)({
        key: idx
      }, typedProps));
      if (!isJSXElementNull(element)) {
        return [].concat((0, _toConsumableArray2.default)(acc), [element]);
      }
    }
    return acc;
  }, []);
  if (elements.length) {
    return elements;
  }
};