import _extends from "@babel/runtime/helpers/extends";
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import { useCallback, useMemo, useState } from 'react';

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { jsx } from '@emotion/react';
import ChevronDownIcon from '@atlaskit/icon/utility/migration/chevron-down';
import Lozenge from '@atlaskit/lozenge';
import { fg } from '@atlaskit/platform-feature-flags';
import { Box, xcss } from '@atlaskit/primitives';
import { triggerButtonStyles, triggerLozengeStyles } from '../styled';
const chevronDownStyles = xcss({
  marginLeft: 'space.075',
  display: 'flex'
});
const LozengeActionTriggerOld = ({
  appearance,
  isOpen,
  testId,
  text,
  triggerRef,
  ...props
}) => {
  const [isBold, setIsBold] = useState(false);
  const onMouseEnter = useCallback(() => setIsBold(true), []);
  const onMouseLeave = useCallback(() => setIsBold(false), []);
  const lozenge = useMemo(() => jsx(Lozenge, {
    appearance: appearance,
    isBold: fg('platform-component-visual-refresh') ? true : isBold
  }, jsx("span", {
    css: triggerLozengeStyles
  }, jsx("span", null, text), jsx(Box, {
    as: "span",
    xcss: chevronDownStyles
  }, jsx(ChevronDownIcon, {
    color: "currentColor",
    label: "options",
    LEGACY_size: "medium",
    LEGACY_margin: "-4px -8px -4px -7px"
  })))), [appearance, isBold, text]);
  return jsx("button", _extends({
    type: "button"
  }, props, {
    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
    css: triggerButtonStyles,
    "data-action-open": isOpen,
    "data-testid": `${testId}--trigger`,
    onMouseEnter: onMouseEnter,
    onMouseLeave: onMouseLeave,
    ref: triggerRef
  }), lozenge);
};
export default LozengeActionTriggerOld;