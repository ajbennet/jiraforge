import React from 'react';
import { useAnalyticsEvents } from '@atlaskit/analytics-next';
import { ButtonItem } from '@atlaskit/menu';
import { Box, Stack, xcss } from '@atlaskit/primitives';
import Spinner from '@atlaskit/spinner';
import { useAutomationMenu } from '../../menu-context';
var ruleButtonStyle = xcss({
  borderColor: 'color.border',
  borderStyle: 'solid',
  borderWidth: 'border.width',
  borderRadius: 'border.radius'
});
var selectedRuleButtonStyle = xcss({
  backgroundColor: 'color.background.accent.blue.subtlest',
  borderColor: 'color.border.accent.blue',
  borderStyle: 'solid',
  borderWidth: 'border.width.outline',
  borderRadius: 'border.radius'
});
var ruleNameStyle = xcss({
  // Using this to increase the height of the button itself.
  height: '28px'
});
export var AutomationModalRuleOld = function AutomationModalRuleOld(_ref) {
  var rule = _ref.rule,
    selectedRule = _ref.selectedRule,
    setSelectedRule = _ref.setSelectedRule;
  var _useAnalyticsEvents = useAnalyticsEvents(),
    createAnalyticsEvent = _useAnalyticsEvents.createAnalyticsEvent;
  var _useAutomationMenu = useAutomationMenu(),
    analyticsSource = _useAutomationMenu.analyticsSource,
    invokingRuleId = _useAutomationMenu.invokingRuleId;
  var isSelectedRule = (selectedRule === null || selectedRule === void 0 ? void 0 : selectedRule.id) === rule.id;
  var isExecuting = rule.id === invokingRuleId;
  var ruleOnClick = function ruleOnClick() {
    createAnalyticsEvent({
      type: 'sendUIEvent',
      data: {
        action: 'clicked',
        actionSubject: 'button',
        actionSubjectId: 'selectManualTriggerAutomation',
        source: analyticsSource,
        attributes: {
          ruleId: rule.id.toString()
        }
      }
    }).fire();
    setSelectedRule(rule);
  };
  return /*#__PURE__*/React.createElement(Box, {
    xcss: isSelectedRule ? selectedRuleButtonStyle : ruleButtonStyle
  }, /*#__PURE__*/React.createElement(ButtonItem, {
    isDisabled: !!invokingRuleId,
    iconBefore: isExecuting ? /*#__PURE__*/React.createElement(Spinner, {
      size: "small"
    }) : null,
    onClick: ruleOnClick
  }, /*#__PURE__*/React.createElement(Stack, {
    xcss: ruleNameStyle,
    alignBlock: "center"
  }, rule.name)));
};