/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import React from 'react';

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { css, jsx } from '@emotion/react';
import { Flex, Grid, xcss } from '@atlaskit/primitives';
import { CloseButton } from './close-button';
import { useModal } from './hooks';
var headerStyles = css({
  display: 'flex',
  position: 'relative',
  alignItems: 'center',
  justifyContent: 'space-between',
  marginBlockEnd: "calc(-1 * ".concat("var(--ds-border-width-outline, 2px)", ")"),
  paddingBlockEnd: "var(--ds-space-200, 16px)",
  paddingBlockStart: "var(--ds-space-300, 24px)",
  paddingInline: "var(--ds-space-300, 24px)"
});
var gridStyles = xcss({
  width: '100%'
});
var closeContainerStyles = xcss({
  gridArea: 'close'
});
var titleContainerStyles = xcss({
  gridArea: 'title'
});
/**
 * __Modal header__
 *
 * A modal header contains the title of the modal and can contain other React elements such as a close button.
 *
 * - [Examples](https://atlassian.design/components/modal-dialog/examples#modal-header)
 * - [Code](https://atlassian.design/components/modal-dialog/code#modal-header-props)
 * - [Usage](https://atlassian.design/components/modal-dialog/usage)
 */
var ModalHeader = function ModalHeader(props) {
  var children = props.children,
    userDefinedTestId = props.testId,
    _props$hasCloseButton = props.hasCloseButton,
    hasCloseButton = _props$hasCloseButton === void 0 ? false : _props$hasCloseButton;
  var _useModal = useModal(),
    hasProvidedOnClose = _useModal.hasProvidedOnClose,
    onClose = _useModal.onClose,
    modalTestId = _useModal.testId;
  var testId = userDefinedTestId || modalTestId && "".concat(modalTestId, "--header");

  // Only show if an onClose was provided for the modal dialog
  var shouldShowCloseButton = hasCloseButton && hasProvidedOnClose && onClose;
  return jsx("div", {
    css: headerStyles,
    "data-testid": testId
  }, shouldShowCloseButton ? jsx(Grid, {
    gap: "space.200",
    templateAreas: ['title close'],
    xcss: gridStyles
  }, jsx(Flex, {
    xcss: titleContainerStyles,
    justifyContent: "start",
    alignItems: "center"
  }, children), jsx(Flex, {
    xcss: closeContainerStyles,
    justifyContent: "end"
  }, jsx(CloseButton, {
    onClick: onClose,
    testId: modalTestId
  }))) : children);
};
export default ModalHeader;