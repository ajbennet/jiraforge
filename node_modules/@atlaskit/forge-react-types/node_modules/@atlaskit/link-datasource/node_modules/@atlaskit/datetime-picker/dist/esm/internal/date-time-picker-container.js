import _extends from "@babel/runtime/helpers/extends";
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { forwardRef } from 'react';
import { css, jsx } from '@emotion/react';
import { B100, N0, N100, N20, N30, R400 } from '@atlaskit/theme/colors';
var isInvalidBorderStyles = css({
  borderColor: "var(--ds-border-danger, ".concat(R400, ")")
});
var isFocusedBorderStyles = css({
  borderColor: "var(--ds-border-focused, ".concat(B100, ")"),
  boxShadow: "inset 0 0 0 ".concat("var(--ds-border-width, 1px)", " ", "var(--ds-border-focused, ".concat(B100, ")"))
});
var isFocusedStyles = css({
  backgroundColor: "var(--ds-background-input-pressed, ".concat(N0, ")")
});
var subtleBgStyles = css({
  backgroundColor: 'transparent',
  borderColor: 'transparent'
});
var subtleFocusedBgStyles = css({
  backgroundColor: "var(--ds-background-input-pressed, transparent)",
  borderColor: 'transparent'
});
var noBgStyles = css({
  backgroundColor: 'transparent',
  borderColor: 'transparent',
  '&:hover': {
    backgroundColor: 'transparent',
    borderColor: 'transparent'
  }
});
var hoverStyles = css({
  '&:hover': {
    backgroundColor: "var(--ds-background-input-hovered, ".concat(N30, ")"),
    borderColor: "var(--ds-border-input, ".concat(N100, ")")
  }
});
var isInvalidHoverStyles = css({
  '&:hover': {
    backgroundColor: "var(--ds-background-input-hovered, ".concat(N0, ")"),
    borderColor: "var(--ds-border-danger, ".concat(R400, ")")
  }
});
var isDisabledStyles = css({
  backgroundColor: "var(--ds-background-disabled, #091E4208)",
  borderColor: "var(--ds-border-disabled, #091E420F)",
  '&:hover': {
    cursor: 'default'
  }
});
var newBorderStyles = css({
  border: "var(--ds-border-width, 1px)".concat(" solid ", "var(--ds-border-input, ".concat(N100, ")"))
});
var baseContainerStyles = css({
  display: 'flex',
  backgroundColor: "var(--ds-background-input, ".concat(N20, ")"),
  border: "2px solid ".concat("var(--ds-border-input, ".concat(N20, ")")),
  borderRadius: "var(--ds-border-radius, 3px)",
  transition: 'background-color 200ms ease-in-out, border-color 200ms ease-in-out',
  '&:hover': {
    cursor: 'pointer'
  }
});
/**
 * This is the container for the datetime picker component.
 */
export var DateTimePickerContainer = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    isDisabled = _ref.isDisabled,
    isFocused = _ref.isFocused,
    appearance = _ref.appearance,
    isInvalid = _ref.isInvalid,
    innerProps = _ref.innerProps,
    testId = _ref.testId;
  var notFocusedOrIsDisabled = !(isFocused || isDisabled);

  // we cannot use Box or Flex primitives because these do not allow ...innerProps to be passed
  return jsx("div", _extends({
    css: [baseContainerStyles, newBorderStyles, isDisabled && isDisabledStyles, isFocused && isFocusedStyles, appearance === 'subtle' && (isFocused ? subtleFocusedBgStyles : subtleBgStyles), isFocused && isFocusedBorderStyles, isInvalid && isInvalidBorderStyles, notFocusedOrIsDisabled && (isInvalid ? isInvalidHoverStyles : hoverStyles), appearance === 'none' && noBgStyles]
  }, innerProps, {
    "data-testid": testId,
    ref: ref
  }), children);
});