/// <reference types="react" />
import { ClearIndicator } from './ClearIndicator';
import { MultiValue } from './MultiValue';
import { MultiValueContainer } from './MultiValueContainer';
import { Input } from './Input';
import { SingleValueContainer } from './SingleValueContainer';
import { PopupInput } from './PopupInput';
import { PopupControl } from './PopupControl';
import { Menu } from './Menu';
import { type SelectComponentsConfig } from '@atlaskit/select';
import { type OptionData } from '../types';
/**
 * Memoize getComponents to avoid rerenders.
 */
export declare const getComponents: import("memoize-one").MemoizedFn<(multi?: boolean, anchor?: React.ComponentType<any>, showClearIndicator?: boolean, customComponents?: SelectComponentsConfig<OptionData, boolean>) => {
    Control: import("react").ComponentType<any>;
    Option: import("react").FC<import("./Option").OptionProps>;
} | {
    Option: import("react").FC<import("./Option").OptionProps> | import("react").ComponentType<import("packages/design-system/react-select/dist/types").OptionProps<OptionData, boolean, import("@atlaskit/select").GroupType<OptionData>>>;
    Group?: import("react").ComponentType<import("packages/design-system/react-select/dist/types").GroupProps<OptionData, boolean, import("@atlaskit/select").GroupType<OptionData>>> | undefined;
    ClearIndicator: typeof ClearIndicator | import("react").ComponentType<import("@atlaskit/select").ClearIndicatorProps<OptionData, boolean, import("@atlaskit/select").GroupType<OptionData>>> | null;
    Control: ((props: import("@atlaskit/select").ControlProps<any>) => JSX.Element) | import("react").ComponentType<import("packages/design-system/react-select/dist/types").ControlProps<OptionData, boolean, import("@atlaskit/select").GroupType<OptionData>>>;
    DropdownIndicator: import("react").ComponentType<import("@atlaskit/select").DropdownIndicatorProps<OptionData, boolean, import("@atlaskit/select").GroupType<OptionData>>> | null;
    GroupHeading?: import("react").ComponentType<import("packages/design-system/react-select/dist/types").GroupHeadingProps<OptionData, boolean, import("@atlaskit/select").GroupType<OptionData>>> | undefined;
    IndicatorsContainer?: import("react").ComponentType<import("@atlaskit/select").IndicatorsContainerProps<OptionData, boolean, import("@atlaskit/select").GroupType<OptionData>>> | undefined;
    Input: typeof Input | import("react").ComponentType<import("@atlaskit/select").InputProps<OptionData, boolean, import("@atlaskit/select").GroupType<OptionData>>>;
    LoadingIndicator?: import("react").ComponentType<import("@atlaskit/select").LoadingIndicatorProps<OptionData, boolean, import("@atlaskit/select").GroupType<OptionData>>> | undefined;
    Menu: typeof Menu | import("react").ComponentType<import("packages/design-system/react-select/dist/types").MenuProps<OptionData, boolean, import("@atlaskit/select").GroupType<OptionData>>>;
    MenuList?: import("react").ComponentType<import("packages/design-system/react-select/dist/types").MenuListProps<OptionData, boolean, import("@atlaskit/select").GroupType<OptionData>>> | undefined;
    MenuPortal?: import("react").ComponentType<import("packages/design-system/react-select/dist/types/components/menu").MenuPortalProps<OptionData, boolean, import("@atlaskit/select").GroupType<OptionData>>> | undefined;
    LoadingMessage?: import("react").ComponentType<import("@atlaskit/select").NoticeProps<OptionData, boolean, import("@atlaskit/select").GroupType<OptionData>>> | undefined;
    NoOptionsMessage?: import("react").ComponentType<import("@atlaskit/select").NoticeProps<OptionData, boolean, import("@atlaskit/select").GroupType<OptionData>>> | undefined;
    MultiValue: typeof MultiValue | import("react").ComponentType<import("@atlaskit/select").MultiValueProps<OptionData, boolean, import("@atlaskit/select").GroupType<OptionData>>>;
    MultiValueContainer?: import("react").ComponentType<import("@atlaskit/select").MultiValueGenericProps<OptionData, boolean, import("@atlaskit/select").GroupType<OptionData>>> | undefined;
    MultiValueLabel?: import("react").ComponentType<import("@atlaskit/select").MultiValueGenericProps<OptionData, boolean, import("@atlaskit/select").GroupType<OptionData>>> | undefined;
    MultiValueRemove?: import("react").ComponentType<import("@atlaskit/select").MultiValueRemoveProps<OptionData, boolean, import("@atlaskit/select").GroupType<OptionData>>> | undefined;
    Placeholder?: import("react").ComponentType<import("packages/design-system/react-select/dist/types").PlaceholderProps<OptionData, boolean, import("@atlaskit/select").GroupType<OptionData>>> | undefined;
    SelectContainer?: import("react").ComponentType<import("packages/design-system/react-select/dist/types").ContainerProps<OptionData, boolean, import("@atlaskit/select").GroupType<OptionData>>> | undefined;
    SingleValue: ((props: import("./SingleValue").Props) => JSX.Element | null) | import("react").ComponentType<import("@atlaskit/select").SingleValueProps<OptionData, boolean, import("@atlaskit/select").GroupType<OptionData>>>;
    ValueContainer: typeof MultiValueContainer | typeof SingleValueContainer | import("react").ComponentType<import("packages/design-system/react-select/dist/types").ValueContainerProps<OptionData, boolean, import("@atlaskit/select").GroupType<OptionData>>>;
}>;
export declare const getPopupComponents: import("memoize-one").MemoizedFn<(hasPopupTitle: boolean) => {
    DropdownIndicator: null;
    SingleValue: (props: import("./SingleValue").Props) => JSX.Element | null;
    ClearIndicator: typeof ClearIndicator;
    Option: import("react").FC<import("./Option").OptionProps>;
    ValueContainer: typeof SingleValueContainer;
    Input: typeof PopupInput;
} | {
    Control: typeof PopupControl;
    DropdownIndicator: null;
    SingleValue: (props: import("./SingleValue").Props) => JSX.Element | null;
    ClearIndicator: typeof ClearIndicator;
    Option: import("react").FC<import("./Option").OptionProps>;
    ValueContainer: typeof SingleValueContainer;
    Input: typeof PopupInput;
}>;
