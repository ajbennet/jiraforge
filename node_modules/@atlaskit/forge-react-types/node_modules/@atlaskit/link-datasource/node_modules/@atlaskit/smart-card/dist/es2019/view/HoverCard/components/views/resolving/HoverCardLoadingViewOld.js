import _extends from "@babel/runtime/helpers/extends";
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import React from 'react';

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { jsx } from '@emotion/react';
import { fg } from '@atlaskit/platform-feature-flags';
import { CustomBlock } from '../../../../FlexibleCard/components/blocks';
import ActionGroup from '../../../../FlexibleCard/components/blocks/action-group';
import { LoadingSkeletonNew, LoadingSkeletonOld } from '../../../../FlexibleCard/components/common/loading-skeleton';
import Icon from '../../../../FlexibleCard/components/elements/icon';
import { CARD_WIDTH_REM } from '../../../styled';
import { getTitleStyles, loadingViewContainer, skeletonContainer, titleBlockStyles } from './styled';
const HoverCardLoadingViewOld = ({
  titleBlockProps
}) => {
  const testId = 'hover-card-loading-view';
  const lineHeightRem = 1.25;
  const skeletonWidth = CARD_WIDTH_REM - 2;
  const {
    size,
    actions
  } = titleBlockProps;
  const actionGroup = (actions === null || actions === void 0 ? void 0 : actions.length) && (actions === null || actions === void 0 ? void 0 : actions.length) > 0 && jsx(ActionGroup, {
    items: actions,
    visibleButtonsNum: 2
  });
  const LoadingSkeleton = fg('platform-smart-card-icon-migration') ? LoadingSkeletonNew : LoadingSkeletonOld;
  return (
    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
    jsx("div", {
      css: loadingViewContainer,
      "data-testid": testId
    }, jsx("div", {
      css: skeletonContainer
    }, jsx(CustomBlock, _extends({}, titleBlockProps, {
      overrideCss: titleBlockStyles,
      testId: `${testId}-title-block`
    }), jsx(Icon, {
      render: () => jsx(LoadingSkeleton, null),
      size: size
    }), jsx("span", {
      css: getTitleStyles(lineHeightRem),
      "data-testid": `${testId}-title`
    }, fg('platform-smart-card-icon-migration') ? jsx(LoadingSkeletonNew, {
      height: `${lineHeightRem}rem`
    }) : jsx(LoadingSkeletonOld, {
      height: lineHeightRem
    })), actionGroup), fg('platform-smart-card-icon-migration') ? jsx(React.Fragment, null, jsx(LoadingSkeletonNew, {
      width: `${skeletonWidth}rem`,
      height: `${lineHeightRem}rem`
    }), jsx(LoadingSkeletonNew, {
      width: `${skeletonWidth}rem`,
      height: `${lineHeightRem * 3}rem`
    }), jsx(LoadingSkeletonNew, {
      width: `${skeletonWidth}rem`,
      height: `${lineHeightRem}rem`
    })) : jsx(React.Fragment, null, jsx(LoadingSkeletonOld, {
      width: skeletonWidth,
      height: lineHeightRem
    }), jsx(LoadingSkeletonOld, {
      width: skeletonWidth,
      height: lineHeightRem * 3
    }), jsx(LoadingSkeletonOld, {
      width: skeletonWidth,
      height: lineHeightRem
    }))))
  );
};
export default HoverCardLoadingViewOld;