import _extends from "@babel/runtime/helpers/extends";
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { css, jsx } from '@emotion/react';
import AtlaskitLozenge from '@atlaskit/lozenge';
import { fg } from '@atlaskit/platform-feature-flags';
import { useFlexibleUiOptionContext } from '../../../../../state/flexible-ui-context';
import LozengeAction from './lozenge-action';
const styles = css({
  display: 'inline-flex',
  // eslint-disable-next-line @atlaskit/design-system/use-tokens-typography
  lineHeight: 'inherit'
});

/**
 * A base element that displays a Lozenge.
 * @internal
 * @param {LozengeProps} LozengeProps - The props necessary for the Lozenge element.
 * @see State
 */
const LozengeOld = ({
  action,
  appearance = 'default',
  name,
  overrideCss,
  style,
  text,
  testId = 'smart-element-lozenge'
}) => {
  const ui = useFlexibleUiOptionContext();
  if (!text) {
    return null;
  }
  const lozenge = action ? jsx(LozengeAction, {
    action: action,
    appearance: appearance,
    testId: testId,
    text: text,
    zIndex: ui === null || ui === void 0 ? void 0 : ui.zIndex
  }) : jsx(AtlaskitLozenge, _extends({
    appearance: appearance
  }, fg('platform-component-visual-refresh') ? {
    isBold: true
  } : undefined, {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    style: style,
    testId: `${testId}-lozenge`
  }), text);
  return jsx("span", {
    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage -- Ignored via go/DSP-18766
    css: [styles, overrideCss],
    "data-fit-to-content": true,
    "data-smart-element": name,
    "data-smart-element-lozenge": true,
    "data-testid": testId
  }, lozenge);
};
export default LozengeOld;