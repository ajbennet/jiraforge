import { type CardAdf, type CardAppearance, type EnvironmentsKeys } from '@atlaskit/linking-common';
import { type CardProvider } from './types';
/** @deprecated {@link https://hello.atlassian.net/browse/ENGHEALTH-661 Internal documentation for deprecation (no external access)} */
export declare class EditorCardProvider implements CardProvider {
    private baseUrl;
    private resolverUrl;
    private providersData?;
    private requestHeaders;
    private transformer;
    private providersLoader;
    private cardClient;
    constructor(envKey?: EnvironmentsKeys, baseUrlOverride?: string);
    private batchProviders;
    private check;
    private fetchProvidersData;
    private loadProviderData;
    findPattern(url: string): Promise<boolean>;
    private doesUrlMatchPath;
    private findUserPreference;
    private findPatternData;
    private getHardCodedAppearance;
    /**
     * Make a /resolve call and find out if result has embed capability
     * @param url
     * @private
     */
    private canBeResolvedAsEmbed;
    resolve(url: string, appearance: CardAppearance, shouldForceAppearance?: boolean): Promise<CardAdf>;
}
/** @deprecated {@link https://hello.atlassian.net/browse/ENGHEALTH-661 Internal documentation for deprecation (no external access)} */
export declare const editorCardProvider: EditorCardProvider;
export type { CardProvider, ORSCheckResponse } from './types';
