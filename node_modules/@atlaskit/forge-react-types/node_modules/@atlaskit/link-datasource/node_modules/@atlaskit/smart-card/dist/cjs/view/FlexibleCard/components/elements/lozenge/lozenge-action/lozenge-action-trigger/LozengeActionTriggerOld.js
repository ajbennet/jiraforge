"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = require("react");
var _react2 = require("@emotion/react");
var _chevronDown = _interopRequireDefault(require("@atlaskit/icon/utility/migration/chevron-down"));
var _lozenge = _interopRequireDefault(require("@atlaskit/lozenge"));
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _primitives = require("@atlaskit/primitives");
var _styled = require("../styled");
var _excluded = ["appearance", "isOpen", "testId", "text", "triggerRef"];
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
var chevronDownStyles = (0, _primitives.xcss)({
  marginLeft: 'space.075',
  display: 'flex'
});
var LozengeActionTriggerOld = function LozengeActionTriggerOld(_ref) {
  var appearance = _ref.appearance,
    isOpen = _ref.isOpen,
    testId = _ref.testId,
    text = _ref.text,
    triggerRef = _ref.triggerRef,
    props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    isBold = _useState2[0],
    setIsBold = _useState2[1];
  var onMouseEnter = (0, _react.useCallback)(function () {
    return setIsBold(true);
  }, []);
  var onMouseLeave = (0, _react.useCallback)(function () {
    return setIsBold(false);
  }, []);
  var lozenge = (0, _react.useMemo)(function () {
    return (0, _react2.jsx)(_lozenge.default, {
      appearance: appearance,
      isBold: (0, _platformFeatureFlags.fg)('platform-component-visual-refresh') ? true : isBold
    }, (0, _react2.jsx)("span", {
      css: _styled.triggerLozengeStyles
    }, (0, _react2.jsx)("span", null, text), (0, _react2.jsx)(_primitives.Box, {
      as: "span",
      xcss: chevronDownStyles
    }, (0, _react2.jsx)(_chevronDown.default, {
      color: "currentColor",
      label: "options",
      LEGACY_size: "medium",
      LEGACY_margin: "-4px -8px -4px -7px"
    }))));
  }, [appearance, isBold, text]);
  return (0, _react2.jsx)("button", (0, _extends2.default)({
    type: "button"
  }, props, {
    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
    css: _styled.triggerButtonStyles,
    "data-action-open": isOpen,
    "data-testid": "".concat(testId, "--trigger"),
    onMouseEnter: onMouseEnter,
    onMouseLeave: onMouseLeave,
    ref: triggerRef
  }), lozenge);
};
var _default = exports.default = LozengeActionTriggerOld;