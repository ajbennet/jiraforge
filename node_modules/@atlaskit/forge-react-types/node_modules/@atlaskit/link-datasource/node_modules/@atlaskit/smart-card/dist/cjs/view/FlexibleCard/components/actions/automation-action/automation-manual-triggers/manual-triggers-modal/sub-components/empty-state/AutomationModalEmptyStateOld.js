"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AutomationModalEmptyStateOld = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactIntlNext = require("react-intl-next");
var _analyticsNext = require("@atlaskit/analytics-next");
var _button = _interopRequireDefault(require("@atlaskit/button"));
var _primitives = require("@atlaskit/primitives");
var _menuContext = require("../../menu-context");
var _emptyIcon = _interopRequireDefault(require("./empty-icon"));
var i18n = (0, _reactIntlNext.defineMessages)({
  defaultEmptyStateAdminDesc: {
    id: 'automation-menu.modal.empty.automations.admin.description',
    defaultMessage: 'Use the manual trigger to populate a menu of selections that anyone, or people you specify, can apply as one-click automations.',
    description: 'A description shown in the automation menu when the rule list is empty for an admin.'
  },
  defaultEmptyStateDesc: {
    id: 'automation-menu.modal.empty.automations.user.description',
    defaultMessage: 'Admins havenâ€™t configured any manually triggered automations yet.',
    description: 'A description shown in the automation menu when the rule list is empty for a user.'
  },
  learnMoreLink: {
    id: 'automation-menu.empty-state.learn-more.link',
    defaultMessage: 'Learn more about the manual trigger',
    description: 'The text of a link that takes a user to the documentation for manually triggered rules in Automation for Confluence.'
  },
  emptyAutomationListImageAlt: {
    id: 'automation-menu.empty-state.image.alt',
    defaultMessage: 'Empty automation list icon',
    description: 'Alternative text for the image that renders when the automation list is empty.'
  }
});
var emptyStateStyles = (0, _primitives.xcss)({
  paddingLeft: 'space.300',
  paddingRight: 'space.300',
  marginTop: 'space.500'
});
var imageStyles = (0, _primitives.xcss)({
  marginTop: 'space.050',
  marginBottom: 'space.300',
  width: '160px',
  height: '156px'
});
var descriptionStyles = (0, _primitives.xcss)({
  width: '360px',
  textAlign: 'center'
});
var AutomationModalEmptyStateOld = exports.AutomationModalEmptyStateOld = function AutomationModalEmptyStateOld() {
  var _useIntl = (0, _reactIntlNext.useIntl)(),
    formatMessage = _useIntl.formatMessage;
  var _useAnalyticsEvents = (0, _analyticsNext.useAnalyticsEvents)(),
    createAnalyticsEvent = _useAnalyticsEvents.createAnalyticsEvent;
  var _useAutomationMenu = (0, _menuContext.useAutomationMenu)(),
    canManageAutomation = _useAutomationMenu.canManageAutomation,
    analyticsSource = _useAutomationMenu.analyticsSource,
    emptyStateDescription = _useAutomationMenu.emptyStateDescription,
    emptyStateAdminDescription = _useAutomationMenu.emptyStateAdminDescription;
  var emptyStateDesc = emptyStateDescription !== null && emptyStateDescription !== void 0 ? emptyStateDescription : /*#__PURE__*/_react.default.createElement(_reactIntlNext.FormattedMessage, i18n.defaultEmptyStateDesc);
  var adminEmptyStateDesc = emptyStateAdminDescription !== null && emptyStateAdminDescription !== void 0 ? emptyStateAdminDescription : /*#__PURE__*/_react.default.createElement(_reactIntlNext.FormattedMessage, i18n.defaultEmptyStateAdminDesc);
  var displayedEmptyStateDesc = canManageAutomation ? adminEmptyStateDesc : emptyStateDesc;
  return /*#__PURE__*/_react.default.createElement(_primitives.Stack, {
    xcss: emptyStateStyles,
    alignInline: "center",
    alignBlock: "center",
    grow: "fill"
  }, /*#__PURE__*/_react.default.createElement(_primitives.Box, {
    xcss: imageStyles
  }, /*#__PURE__*/_react.default.createElement(_emptyIcon.default, {
    alt: formatMessage(i18n.emptyAutomationListImageAlt)
  })), /*#__PURE__*/_react.default.createElement(_primitives.Box, {
    xcss: descriptionStyles
  }, displayedEmptyStateDesc, canManageAutomation && /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement(_button.default, {
    appearance: "link",
    spacing: "none",
    href: "https://www.atlassian.com/platform/automation",
    target: "_blank",
    onClick: function onClick() {
      createAnalyticsEvent({
        type: 'sendUIEvent',
        data: {
          action: 'clicked',
          actionSubject: 'link',
          actionSubjectId: 'learnMore',
          source: analyticsSource
        }
      }).fire();
    }
  }, /*#__PURE__*/_react.default.createElement(_reactIntlNext.FormattedMessage, i18n.learnMoreLink)))));
};