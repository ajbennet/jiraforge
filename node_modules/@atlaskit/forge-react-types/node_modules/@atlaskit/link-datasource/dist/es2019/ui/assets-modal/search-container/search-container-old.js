import _extends from "@babel/runtime/helpers/extends";
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { jsx } from '@emotion/react';
import Form from '@atlaskit/form';
import { useDatasourceAnalyticsEvents } from '../../../analytics';
import { AqlSearchInput } from './aql-search-input';
import { AssetsObjectSchemaSelect } from './object-schema-select';
import { FormContainer, FormRowContainer, SchemaSelectContainer } from './styled-old';
const DEFAULT_AQL_QUERY = '';
const SEARCH_FORM_ID = 'linkDataSource.assets.configModal.searchContainer-form';
export const AssetsSearchContainerOld = props => {
  const {
    onSearch,
    workspaceId,
    initialSearchData,
    modalTitle,
    isSearching
  } = props;
  const {
    fireEvent
  } = useDatasourceAnalyticsEvents();
  const onFormSubmit = searchFormValues => {
    const {
      aql,
      objectSchema
    } = searchFormValues;
    if (aql && objectSchema) {
      fireEvent('ui.aqlEditor.searched', {});
      // Pass the validated aql and object schema back to modal
      onSearch(aql, objectSchema.value);
    }
  };
  return jsx(Form, {
    onSubmit: onFormSubmit
  }, ({
    formProps
  }) => {
    var _initialSearchData$ob, _initialSearchData$ob2, _initialSearchData$aq;
    return jsx(FormContainer, _extends({}, formProps, {
      id: SEARCH_FORM_ID
    }), jsx(FormRowContainer, {
      isNarrowGap: true
    }, modalTitle, jsx(SchemaSelectContainer, null, jsx(AssetsObjectSchemaSelect, {
      value: (_initialSearchData$ob = initialSearchData.objectSchema) !== null && _initialSearchData$ob !== void 0 ? _initialSearchData$ob : undefined,
      workspaceId: workspaceId,
      initialObjectSchemas: (_initialSearchData$ob2 = initialSearchData.objectSchemas) !== null && _initialSearchData$ob2 !== void 0 ? _initialSearchData$ob2 : undefined,
      classNamePrefix: "assets-datasource-modal--object-schema-select"
    }))), jsx(FormRowContainer, null, jsx(AqlSearchInput, {
      value: (_initialSearchData$aq = initialSearchData.aql) !== null && _initialSearchData$aq !== void 0 ? _initialSearchData$aq : DEFAULT_AQL_QUERY,
      workspaceId: workspaceId,
      isSearching: isSearching
    })));
  });
};