/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import { useEffect } from 'react';

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { css, jsx } from '@emotion/react';
import { FormattedMessage } from 'react-intl-next';
import Button from '@atlaskit/button/standard-button';
import { Box, Inline, Text } from '@atlaskit/primitives';
import { fontFallback } from '@atlaskit/theme/typography';
import { useDatasourceAnalyticsEvents } from '../../../analytics';
import { LoadingErrorSVGOld } from './loading-error-svg-old';
import { loadingErrorMessages } from './messages';
const errorContainerStyles = css({
  display: 'grid',
  gap: "var(--ds-space-200, 16px)",
  placeItems: 'center',
  placeSelf: 'center'
});
const errorMessageContainerStyles = css({
  display: 'grid',
  gap: "var(--ds-space-100, 8px)",
  placeItems: 'center'
});
const errorMessageStyles = css({
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
  font: `var(--ds-font-heading-small, ${fontFallback.heading.small})`
});
export const LoadingErrorOld = ({
  onRefresh
}) => {
  const {
    fireEvent
  } = useDatasourceAnalyticsEvents();
  useEffect(() => {
    fireEvent('ui.error.shown', {
      reason: 'network'
    });
  }, [fireEvent]);
  return jsx(Box, {
    xcss: errorContainerStyles,
    testId: "datasource--loading-error"
  }, jsx(LoadingErrorSVGOld, null), jsx(Box, {
    xcss: errorMessageContainerStyles
  }, jsx(Inline, {
    as: "span",
    xcss: errorMessageStyles
  }, jsx(FormattedMessage, loadingErrorMessages.unableToLoadItems)), jsx(Text, {
    as: "p"
  }, jsx(FormattedMessage, loadingErrorMessages.checkConnection)), onRefresh && jsx(Button, {
    appearance: "primary",
    onClick: onRefresh
  }, jsx(FormattedMessage, loadingErrorMessages.refresh))));
};