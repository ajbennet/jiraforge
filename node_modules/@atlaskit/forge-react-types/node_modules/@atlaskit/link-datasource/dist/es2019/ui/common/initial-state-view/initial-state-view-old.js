/**
 * @jsxRuntime classic
 * @jsx jsx
 */
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { css, jsx } from '@emotion/react';
import { FormattedMessage, useIntl } from 'react-intl-next';
import Lozenge from '@atlaskit/lozenge';
import { N300 } from '@atlaskit/theme/colors';
import { fontFallback } from '@atlaskit/theme/typography';
import { initialStateViewMessages } from './messages';
const initialStateViewContainerStyles = css({
  display: 'flex',
  justifyContent: 'center',
  height: '100%'
});
const svgAndTextsWrapperStyles = css({
  textAlign: 'center',
  alignSelf: 'center',
  paddingTop: "var(--ds-space-600, 48px)",
  paddingBottom: "var(--ds-space-600, 48px)"
});
const betaTagStyles = css({
  display: 'flex'
});
const searchTitleStyles = css({
  color: `var(--ds-text-subtlest, ${N300})`,
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
  font: `var(--ds-font-heading-medium, ${fontFallback.heading.medium})`,
  paddingTop: "var(--ds-space-200, 16px)",
  paddingBottom: "var(--ds-space-100, 8px)",
  display: 'flex',
  justifyContent: 'center',
  alignItems: 'center',
  gap: "var(--ds-space-100, 8px)"
});
const mainTextStyles = css({
  color: `var(--ds-text-subtlest, ${N300})`
});
const learnMoreLinkStyles = css({
  paddingTop: "var(--ds-space-200, 16px)",
  display: 'inline-block'
});
export const InitialStateViewOld = ({
  icon,
  showBeta = false,
  title,
  description,
  learnMoreLink
}) => {
  const {
    formatMessage
  } = useIntl();
  return jsx("div", {
    css: initialStateViewContainerStyles,
    "data-testid": "datasource-modal--initial-state-view"
  }, jsx("div", {
    css: svgAndTextsWrapperStyles
  }, icon, jsx("div", {
    css: searchTitleStyles
  }, showBeta && jsx("div", {
    css: betaTagStyles
  }, jsx(Lozenge, {
    appearance: "new"
  }, jsx(FormattedMessage, initialStateViewMessages.beta))), formatMessage(title)), jsx("div", {
    css: mainTextStyles
  }, formatMessage(description)), learnMoreLink && jsx("a", {
    href: learnMoreLink.href,
    target: "_blank",
    css: learnMoreLinkStyles
  }, formatMessage(learnMoreLink.text))));
};