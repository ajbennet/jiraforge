/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import React from 'react';

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { css, jsx } from '@emotion/react';
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import styled from '@emotion/styled';
import { N40 } from '@atlaskit/theme/colors';
import { fontFallback } from '@atlaskit/theme/typography';
import { TableHeading } from './styled';
const maxWidth = '200px';
const firstLastChildOverride = `
  &:first-of-type, &:last-of-type {
    padding-left: ${"var(--ds-space-100, 8px)"};
    padding-right: ${"var(--ds-space-100, 8px)"};
  }
`;
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled -- To migrate as part of go/ui-styling-standard
const TablePreviewHeading = styled(TableHeading)({
  overflow: 'hidden',
  textOverflow: 'ellipsis',
  whiteSpace: 'nowrap',
  background: "var(--ds-background-disabled, #091E4224)",
  maxWidth: maxWidth
},
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
firstLastChildOverride);

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled -- To migrate as part of go/ui-styling-standard
const TablePreviewCell = styled.td({
  overflow: 'hidden',
  textOverflow: 'ellipsis',
  whiteSpace: 'nowrap',
  maxWidth: maxWidth,
  padding: `${"var(--ds-space-050, 4px)"} ${"var(--ds-space-100, 8px)"}`,
  boxSizing: 'border-box',
  borderBottom: `0.5px solid ${`var(--ds-border, ${N40})`}`,
  height: '30px'
},
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
firstLastChildOverride);
const tableStyles = css({
  background: "var(--ds-surface, #FFF)",
  borderCollapse: 'separate',
  borderSpacing: 0,
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
  font: `var(--ds-font-body, ${fontFallback.body.medium})`,
  maxWidth
});
export const DragColumnPreviewOld = ({
  title,
  rows
}) => {
  return jsx("table", {
    css: tableStyles
  }, jsx("thead", null, jsx("tr", null, jsx(TablePreviewHeading, null, title))), jsx("tbody", null, rows.map((data, i) => jsx("tr", {
    key: i
  }, jsx(TablePreviewCell, null, data))), jsx("tr", null, jsx(TablePreviewCell, null, "..."))));
};