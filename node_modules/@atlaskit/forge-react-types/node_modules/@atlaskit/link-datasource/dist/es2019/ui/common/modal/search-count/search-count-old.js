import _extends from "@babel/runtime/helpers/extends";
import React from 'react';
import { FormattedMessage, FormattedNumber } from 'react-intl-next';
import Heading from '@atlaskit/heading';
import { fg } from '@atlaskit/platform-feature-flags';
import { Flex, xcss } from '@atlaskit/primitives';
import LinkUrl from '@atlaskit/smart-card/link-url';
import { N800 } from '@atlaskit/theme/colors';
import { footerMessages } from '../../../table-footer/messages';
import { searchCountMessages } from './messages';
const searchCountStyles = xcss({
  flex: 1
});
const ItemCountWrapper = ({
  url,
  children,
  testId
}) => /*#__PURE__*/React.createElement(Flex, {
  testId: testId,
  xcss: searchCountStyles,
  alignItems: "center"
}, /*#__PURE__*/React.createElement(LinkUrl, {
  href: url,
  target: "_blank",
  testId: "item-count-url"
  // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
  ,
  style: {
    color: `var(--ds-text-accent-gray, ${N800})`,
    textDecoration: !url ? 'none' : ''
  }
}, /*#__PURE__*/React.createElement(Heading, {
  size: "xxsmall"
}, children)));
export const AssetsItemCountOld = ({
  searchCount,
  url,
  testId
}) => {
  let capCount = searchCount >= 1000;
  let displayCount = capCount ? 1000 : searchCount;
  let countModifier = capCount ? '+' : '';
  return /*#__PURE__*/React.createElement(ItemCountWrapper, {
    testId: testId,
    url: url
  }, /*#__PURE__*/React.createElement(FormattedNumber, {
    value: displayCount
  }), countModifier, ' ', /*#__PURE__*/React.createElement(FormattedMessage, _extends({}, footerMessages.itemText, {
    values: {
      itemCount: searchCount
    }
  })));
};
const TableSearchCount = ({
  url,
  searchCount,
  testId = 'datasource-table-total-results-count',
  prefixTextType = 'issue'
}) => {
  const isIssue = prefixTextType === 'issue';
  const messageKey = isIssue && fg('confluence-issue-terminology-refresh') ? 'issueCountTextIssueTermRefresh' : `${prefixTextType}CountText`;
  return /*#__PURE__*/React.createElement(ItemCountWrapper, {
    testId: testId,
    url: url
  }, /*#__PURE__*/React.createElement(FormattedMessage, _extends({}, searchCountMessages[messageKey], {
    values: {
      searchCount
    }
  })));
};
export default TableSearchCount;