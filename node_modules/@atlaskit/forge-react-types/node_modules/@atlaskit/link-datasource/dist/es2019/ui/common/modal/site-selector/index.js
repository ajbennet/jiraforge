/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
import "./index.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
import { useMemo } from 'react';
import { useIntl } from 'react-intl-next';
import { fg } from '@atlaskit/platform-feature-flags';
import { Box } from '@atlaskit/primitives/compiled';
import Select from '@atlaskit/select';
import { siteSelectorMessages } from './messages';
import { SiteSelectorOld } from './site-selector-old';
const styles = {
  dropdownContainerStyles: "_zulpu2gc _1e0c1txw _4cvr1h6o _1tke1ylp"
};
const selectStyles = null;
const SiteSelectorNew = props => {
  const {
    availableSites,
    onSiteSelection,
    selectedSite,
    label,
    testId
  } = props;
  const {
    formatMessage
  } = useIntl();
  const onChange = newValue => {
    const selectedSite = availableSites === null || availableSites === void 0 ? void 0 : availableSites.find(site => site.cloudId === (newValue === null || newValue === void 0 ? void 0 : newValue.value));
    if (selectedSite) {
      onSiteSelection(selectedSite);
    }
  };
  const availableSitesOptions = useMemo(() => availableSites === null || availableSites === void 0 ? void 0 : availableSites.map(site => ({
    label: site.displayName,
    value: site.cloudId
  })), [availableSites]);
  const selectedSiteOption = selectedSite && {
    label: selectedSite.displayName,
    value: selectedSite.cloudId
  };
  return /*#__PURE__*/React.createElement(Box, {
    xcss: styles.dropdownContainerStyles
  }, formatMessage(label), availableSites && availableSites.length > 1 && /*#__PURE__*/React.createElement("span", {
    "data-testid": `${testId}--trigger`
  }, /*#__PURE__*/React.createElement(Select, {
    classNamePrefix: testId,
    isLoading: !availableSites,
    onChange: onChange,
    options: availableSitesOptions,
    placeholder: formatMessage(siteSelectorMessages.chooseSite),
    styles: {
      // prevents the popup menu with available sites from being too narrow
      // if the selected site is much shorter than the other options
      menu: ({
        width,
        ...css
      }) => ({
        ...css,
        minWidth: '100%',
        width: 'max-content',
        // font-weight has to be overridden here so that it gets applied after the font styles in teh css element above
        fontWeight: "var(--ds-font-weight-medium, 500)"
      }),
      valueContainer: ({
        width,
        ...css
      }) => ({
        ...css,
        // font-weight has to be overridden here so that it gets applied after the font styles in teh css element above
        fontWeight: "var(--ds-font-weight-medium, 500)"
      })
    },
    testId: testId,
    value: selectedSiteOption,
    label: formatMessage(siteSelectorMessages.chooseSite),
    className: ax(["_11c82smr _1pbyibnn"])
  })));
};
export const SiteSelector = props => {
  if (fg('bandicoots-compiled-migration-link-datasource')) {
    return /*#__PURE__*/React.createElement(SiteSelectorNew, props);
  } else {
    return /*#__PURE__*/React.createElement(SiteSelectorOld, props);
  }
};