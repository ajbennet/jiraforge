import React from 'react';
import { Box, Flex, xcss } from '@atlaskit/primitives';
import { components } from '@atlaskit/select';
import Spinner from '@atlaskit/spinner';
import CustomErrorMessage from './errorMessage';
import CustomDropdownLoadingMessage from './loadingMessage';
import CustomNoOptionsMessage from './noOptionsMessage';
import ShowMoreButton from './showMoreButton';
const inlineSpinnerStyles = xcss({
  paddingTop: 'space.075'
});
const showMoreButtonBoxStyles = xcss({
  paddingLeft: 'space.075',
  paddingTop: 'space.100'
});
const CustomMenuList = ({
  children,
  ...props
}) => {
  const {
    filterName,
    isLoading,
    isLoadingMore,
    isError,
    isEmpty,
    errors,
    showMore,
    handleShowMore
  } =
  // @ts-ignore - https://product-fabric.atlassian.net/browse/DSP-21000
  props.selectProps.menuListProps;
  const shouldDisplayShowMore = showMore && !isLoadingMore;
  const isLoadingMoreData = !shouldDisplayShowMore && isLoadingMore;
  const InlineSpinner = () => /*#__PURE__*/React.createElement(Flex, {
    justifyContent: "center",
    xcss: inlineSpinnerStyles
  }, /*#__PURE__*/React.createElement(Spinner, {
    size: "medium"
  }));
  const renderChildren = () => {
    if (isLoading) {
      return /*#__PURE__*/React.createElement(CustomDropdownLoadingMessage, {
        filterName: filterName
      });
    }
    if (isError) {
      return /*#__PURE__*/React.createElement(CustomErrorMessage, {
        filterName: filterName,
        errors: errors
      });
    }
    if (isEmpty) {
      return /*#__PURE__*/React.createElement(CustomNoOptionsMessage, {
        filterName: filterName
      });
    }
    return /*#__PURE__*/React.createElement(React.Fragment, null, children, shouldDisplayShowMore && handleShowMore && /*#__PURE__*/React.createElement(Box, {
      xcss: showMoreButtonBoxStyles
    }, /*#__PURE__*/React.createElement(ShowMoreButton, {
      onShowMore: handleShowMore,
      filterName: filterName
    })), isLoadingMoreData && /*#__PURE__*/React.createElement(InlineSpinner, null));
  };
  return /*#__PURE__*/React.createElement(components.MenuList, props, renderChildren());
};
export default CustomMenuList;