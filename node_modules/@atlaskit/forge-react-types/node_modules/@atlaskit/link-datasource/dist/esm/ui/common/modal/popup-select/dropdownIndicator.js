/* dropdownIndicator.tsx generated by @compiled/babel-plugin v0.36.1 */
import "./dropdownIndicator.compiled.css";
import { ax, ix } from "@compiled/react/runtime";
import React from 'react';
import CloseIcon from '@atlaskit/icon/core/migration/cross-circle';
import SearchIcon from '@atlaskit/icon/core/migration/search';
import { fg } from '@atlaskit/platform-feature-flags';
import { Box } from '@atlaskit/primitives/compiled';
import { components } from '@atlaskit/select';
import CustomDropdownIndicatorOld from './dropdownIndicatorOld';
var styles = {
  customDropdownIndicatorStyles: "_1e0c1txw _80omtlke _1bah1h6o _1bsbzwfg"
};
var CustomDropdownIndicator = function CustomDropdownIndicator(props) {
  var selectProps = props.selectProps;
  return /*#__PURE__*/React.createElement(components.DropdownIndicator, props, /*#__PURE__*/React.createElement(Box, {
    xcss: styles.customDropdownIndicatorStyles,
    onClick: function onClick() {
      if (selectProps.inputValue) {
        selectProps.onInputChange && selectProps.onInputChange('', {
          action: 'input-change',
          prevInputValue: selectProps.inputValue
        });
      }
    }
  }, selectProps.inputValue ? /*#__PURE__*/React.createElement(CloseIcon, {
    LEGACY_size: "small",
    label: "",
    color: "currentColor"
  }) : /*#__PURE__*/React.createElement(SearchIcon, {
    LEGACY_size: "small",
    label: "",
    color: "currentColor"
  })));
};
var CustomDropdownIndicatorExported = function CustomDropdownIndicatorExported(props) {
  if (fg('bandicoots-compiled-migration-link-datasource')) {
    return /*#__PURE__*/React.createElement(CustomDropdownIndicator, props);
  } else {
    return /*#__PURE__*/React.createElement(CustomDropdownIndicatorOld, props);
  }
};
export default CustomDropdownIndicatorExported;