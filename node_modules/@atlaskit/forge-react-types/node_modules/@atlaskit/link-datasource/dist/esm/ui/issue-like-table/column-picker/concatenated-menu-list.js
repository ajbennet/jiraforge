/* concatenated-menu-list.tsx generated by @compiled/babel-plugin v0.36.1 */
import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["children"];
import "./concatenated-menu-list.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
import { FormattedMessage } from 'react-intl-next';
import { fg } from '@atlaskit/platform-feature-flags';
import { components } from '@atlaskit/select';
import { fontFallback } from '@atlaskit/theme/typography';
import { ConcatenatedMenuListOld } from './concatenated-menu-list-old';
import { columnPickerMessages } from './messages';
export var SELECT_ITEMS_MAXIMUM_THRESHOLD = 200;
var messageStyles = null;
var ConcatenatedMenuListNew = function ConcatenatedMenuListNew(_ref) {
  var children = _ref.children,
    props = _objectWithoutProperties(_ref, _excluded);
  var shouldUseDefaultMenuList = !children || !Array.isArray(children) || children.length <= SELECT_ITEMS_MAXIMUM_THRESHOLD;
  if (shouldUseDefaultMenuList) {
    return /*#__PURE__*/React.createElement(components.MenuList, props, children);
  }
  var optionStyle = {
    padding: "var(--ds-space-050, 4px)".concat(" ", "var(--ds-space-200, 16px)"),
    height: 'auto'
  };
  var maximumLimitReachedMessage = /*#__PURE__*/React.createElement("div", {
    style: optionStyle,
    className: ax(["_syaz1gjq _k48pi7a9 _zzcc4f4w _x3fxnil1 _u6rdk9i7 _v2glf7ua"])
  }, /*#__PURE__*/React.createElement(FormattedMessage, _extends({
    tagName: 'div'
  }, columnPickerMessages.maximumItemsShownLine1)), /*#__PURE__*/React.createElement(FormattedMessage, _extends({
    tagName: 'div'
  }, columnPickerMessages.maximumItemsShownLine2)));
  return /*#__PURE__*/React.createElement(components.MenuList, props, children.slice(0, SELECT_ITEMS_MAXIMUM_THRESHOLD), maximumLimitReachedMessage);
};
export var ConcatenatedMenuList = function ConcatenatedMenuList(props) {
  if (fg('bandicoots-compiled-migration-link-datasource')) {
    return /*#__PURE__*/React.createElement(ConcatenatedMenuListNew, props);
  } else {
    return /*#__PURE__*/React.createElement(ConcatenatedMenuListOld, props);
  }
};