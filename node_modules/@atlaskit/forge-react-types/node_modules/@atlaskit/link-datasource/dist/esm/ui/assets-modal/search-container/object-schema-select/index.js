/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["as", "style"],
  _excluded2 = ["onChange", "onFocus"];
import "./index.compiled.css";
import { forwardRef } from 'react';
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
import _regeneratorRuntime from "@babel/runtime/regenerator";
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
import debounce from 'debounce-promise';
import { useIntl } from 'react-intl-next';
import { Field } from '@atlaskit/form';
import { AsyncSelect } from '@atlaskit/select';
import { layers } from '@atlaskit/theme/constants';
import { useObjectSchemas } from '../../../../hooks/useObjectSchemas';
import { objectSchemaKey } from '../../../../types/assets/types';
import { objectSchemaSelectMessages } from './messages';
import { objectSchemaToSelectOption } from './utils';

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled
var FieldContainer = forwardRef(function (_ref, __cmplr) {
  var _ref$as = _ref.as,
    C = _ref$as === void 0 ? "div" : _ref$as,
    __cmpls = _ref.style,
    __cmplp = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/React.createElement(C, _extends({}, __cmplp, {
    style: __cmpls,
    ref: __cmplr,
    className: ax(["_16jlkb7n _1o9zkb7n _i0dlf1ug _19pkx0bf", __cmplp.className])
  }));
});
if (process.env.NODE_ENV !== 'production') {
  FieldContainer.displayName = 'FieldContainer';
}
export var SEARCH_DEBOUNCE_MS = 350;
var mapObjectSchemasToOptions = function mapObjectSchemasToOptions(objectSchemas) {
  return objectSchemas ? objectSchemas.map(function (objectSchema) {
    return objectSchemaToSelectOption(objectSchema);
  }) : [];
};

/**
 * Rendering a `<Select>` in a `<Modal>` results in the select options getting cut off by the bottom of the modal and
 * scrolling. This is a work-around for that, see https://atlassian.slack.com/archives/CFJ9DU39U/p1623179496484100
 */
export var selectInAModalStyleFixProps = {
  styles: {
    menuPortal: function menuPortal(base) {
      return _objectSpread(_objectSpread({}, base), {}, {
        zIndex: layers.modal()
      });
    }
  },
  menuPortalTarget: document.body
};
export var AssetsObjectSchemaSelect = function AssetsObjectSchemaSelect(_ref2) {
  var value = _ref2.value,
    workspaceId = _ref2.workspaceId,
    initialObjectSchemas = _ref2.initialObjectSchemas,
    _ref2$classNamePrefix = _ref2.classNamePrefix,
    classNamePrefix = _ref2$classNamePrefix === void 0 ? 'assets-datasource-modal--object-schema-select' : _ref2$classNamePrefix;
  var _useIntl = useIntl(),
    formatMessage = _useIntl.formatMessage;
  var _useObjectSchemas = useObjectSchemas(workspaceId),
    fetchObjectSchemas = _useObjectSchemas.fetchObjectSchemas,
    objectSchemasLoading = _useObjectSchemas.objectSchemasLoading;
  var selectedObjectSchema = value ? objectSchemaToSelectOption(value) : undefined;
  var loadOptions = /*#__PURE__*/function () {
    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(inputValue) {
      var _yield$fetchObjectSch, objectSchemas;
      return _regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return fetchObjectSchemas(inputValue);
          case 2:
            _yield$fetchObjectSch = _context.sent;
            objectSchemas = _yield$fetchObjectSch.objectSchemas;
            return _context.abrupt("return", mapObjectSchemasToOptions(objectSchemas));
          case 5:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return function loadOptions(_x) {
      return _ref3.apply(this, arguments);
    };
  }();
  var debouncedLoadOptions = debounce(loadOptions, SEARCH_DEBOUNCE_MS);
  var validateSchema = function validateSchema(value) {
    if (!value || !value.value) {
      return formatMessage(objectSchemaSelectMessages.schemaRequired);
    }
    return undefined;
  };
  return /*#__PURE__*/React.createElement(FieldContainer, null, /*#__PURE__*/React.createElement(Field, {
    name: objectSchemaKey,
    defaultValue: selectedObjectSchema,
    validate: function validate(value) {
      return validateSchema(value);
    }
  }, function (_ref4) {
    var _ref4$fieldProps = _ref4.fieldProps,
      _onChange = _ref4$fieldProps.onChange,
      onFocus = _ref4$fieldProps.onFocus,
      restFieldProps = _objectWithoutProperties(_ref4$fieldProps, _excluded2);
    return /*#__PURE__*/React.createElement(AsyncSelect, _extends({
      autoFocus: true,
      classNamePrefix: classNamePrefix,
      isLoading: objectSchemasLoading,
      defaultOptions: mapObjectSchemasToOptions(initialObjectSchemas),
      isSearchable: true,
      loadOptions: debouncedLoadOptions,
      placeholder: formatMessage(objectSchemaSelectMessages.placeholder),
      onChange: function onChange(newOption) {
        return newOption && _onChange(newOption);
      }
    }, selectInAModalStyleFixProps, restFieldProps, {
      label: formatMessage(objectSchemaSelectMessages.placeholder)
    }));
  }));
};