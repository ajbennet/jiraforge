"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _avatar = _interopRequireDefault(require("@atlaskit/avatar"));
var _peopleGroup = _interopRequireDefault(require("@atlaskit/icon/core/migration/people-group"));
var _lozenge = _interopRequireDefault(require("@atlaskit/lozenge"));
var _primitives = require("@atlaskit/primitives");
var commonLabelStyles = (0, _primitives.xcss)({
  overflow: 'hidden',
  textOverflow: 'ellipsis'
});
var avatarOptionLabelStyles = (0, _primitives.xcss)({
  marginLeft: 'space.050'
});
var groupWrapperStyles = (0, _primitives.xcss)({
  width: "var(--ds-space-250, 20px)",
  minWidth: "var(--ds-space-250, 20px)",
  height: "var(--ds-space-250, 20px)"
});
var IconOptionLabel = function IconOptionLabel(_ref) {
  var data = _ref.data;
  var label = data.label,
    avatar = data.icon,
    value = data.value;
  var avatarOptionLabelData = {
    label: label,
    avatar: avatar,
    value: value,
    optionType: 'avatarLabel',
    isSquare: true
  };
  return /*#__PURE__*/_react.default.createElement(AvatarOptionLabel, {
    data: avatarOptionLabelData,
    testId: "basic-filter-popup-select-option--icon-label"
  });
};
var LozengeOptionLabel = function LozengeOptionLabel(_ref2) {
  var data = _ref2.data;
  return /*#__PURE__*/_react.default.createElement(_lozenge.default, {
    appearance: data.appearance,
    testId: "basic-filter-popup-select-option--lozenge"
  }, /*#__PURE__*/_react.default.createElement(_primitives.Box, {
    xcss: [commonLabelStyles]
  }, data.label));
};
var AvatarOptionLabel = function AvatarOptionLabel(_ref3) {
  var data = _ref3.data,
    testId = _ref3.testId;
  return /*#__PURE__*/_react.default.createElement(_primitives.Flex, {
    alignItems: "center",
    testId: testId || 'basic-filter-popup-select-option--avatar'
  }, data.isGroup ? /*#__PURE__*/_react.default.createElement(_primitives.Flex, {
    alignItems: "center",
    justifyContent: "center",
    xcss: groupWrapperStyles
  }, /*#__PURE__*/_react.default.createElement(_peopleGroup.default, {
    color: "currentColor",
    LEGACY_size: "small",
    label: ""
  })) : /*#__PURE__*/_react.default.createElement(_avatar.default, {
    appearance: data.isSquare ? 'square' : 'circle',
    src: data.avatar,
    size: "xsmall"
  }), /*#__PURE__*/_react.default.createElement(_primitives.Box, {
    xcss: [commonLabelStyles, avatarOptionLabelStyles]
  }, data.label));
};
var formatOptionLabel = function formatOptionLabel(data) {
  if (data.optionType === 'lozengeLabel') {
    return /*#__PURE__*/_react.default.createElement(LozengeOptionLabel, {
      data: data
    });
  }
  if (data.optionType === 'avatarLabel') {
    return /*#__PURE__*/_react.default.createElement(AvatarOptionLabel, {
      data: data
    });
  }
  if (data.optionType === 'iconLabel') {
    return /*#__PURE__*/_react.default.createElement(IconOptionLabel, {
      data: data
    });
  }
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null);
};
var _default = exports.default = formatOptionLabel;