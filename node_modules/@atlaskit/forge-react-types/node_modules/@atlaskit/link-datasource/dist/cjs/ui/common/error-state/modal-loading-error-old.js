"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ModalLoadingErrorOld = void 0;
var _react = require("react");
var _react2 = require("@emotion/react");
var _reactIntlNext = require("react-intl-next");
var _primitives = require("@atlaskit/primitives");
var _analytics = require("../../../analytics");
var _loadingErrorSvgOld = require("./loading-error-svg-old");
var _messages = require("./messages");
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var errorContainerStyles = (0, _react2.css)({
  display: 'grid',
  gap: "var(--ds-space-300, 24px)",
  placeItems: 'center',
  placeSelf: 'center'
});
var errorMessageContainerStyles = (0, _react2.css)({
  display: 'grid',
  gap: "var(--ds-space-100, 8px)",
  placeItems: 'center'
});
var ModalLoadingErrorOld = exports.ModalLoadingErrorOld = function ModalLoadingErrorOld(_ref) {
  var _ref$errorMessage = _ref.errorMessage,
    errorMessage = _ref$errorMessage === void 0 ? (0, _react2.jsx)(_reactIntlNext.FormattedMessage, _messages.loadingErrorMessages.checkConnection) : _ref$errorMessage;
  var _useDatasourceAnalyti = (0, _analytics.useDatasourceAnalyticsEvents)(),
    fireEvent = _useDatasourceAnalyti.fireEvent;
  (0, _react.useEffect)(function () {
    fireEvent('ui.error.shown', {
      reason: 'network'
    });
  }, [fireEvent]);
  return (0, _react2.jsx)(_primitives.Box, {
    xcss: errorContainerStyles,
    testId: "datasource-modal--loading-error"
  }, (0, _react2.jsx)(_loadingErrorSvgOld.LoadingErrorSVGOld, null), (0, _react2.jsx)(_primitives.Box, {
    xcss: errorMessageContainerStyles
  }, (0, _react2.jsx)(_primitives.Text, {
    size: "small"
  }, (0, _react2.jsx)(_reactIntlNext.FormattedMessage, _messages.loadingErrorMessages.unableToLoadResults)), (0, _react2.jsx)(_primitives.Text, {
    as: "p"
  }, errorMessage)));
};