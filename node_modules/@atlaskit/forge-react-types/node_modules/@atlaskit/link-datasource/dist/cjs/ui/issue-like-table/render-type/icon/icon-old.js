"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ICON_TYPE_TEXT_TEST_ID = exports.ICON_TYPE_TEST_ID = void 0;
var _react = _interopRequireDefault(require("react"));
var _styled = _interopRequireDefault(require("@emotion/styled"));
var _primitives = require("@atlaskit/primitives");
var _text = _interopRequireDefault(require("../text"));
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled -- To migrate as part of go/ui-styling-standard
var IconWrapper = _styled.default.div({
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'left'
});
var textWrapperStyles = (0, _primitives.xcss)({
  marginLeft: 'space.100',
  overflow: 'hidden',
  textOverflow: 'ellipsis',
  whiteSpace: 'nowrap'
});
var ICON_TYPE_TEST_ID = exports.ICON_TYPE_TEST_ID = 'link-datasource-render-type--icon';
var ICON_TYPE_TEXT_TEST_ID = exports.ICON_TYPE_TEXT_TEST_ID = "".concat(ICON_TYPE_TEST_ID, "-text");

/**
 * @deprecated: To be cleaned up and replaced with new-icon after
 * `platform-datasources-enable-two-way-sync-priority` rollout.
 */
var IconRenderType = function IconRenderType(_ref) {
  var _ref$label = _ref.label,
    label = _ref$label === void 0 ? '' : _ref$label,
    text = _ref.text,
    source = _ref.source,
    _ref$testId = _ref.testId,
    testId = _ref$testId === void 0 ? ICON_TYPE_TEST_ID : _ref$testId;
  return /*#__PURE__*/_react.default.createElement(IconWrapper, null, /*#__PURE__*/_react.default.createElement("img", {
    src: source,
    alt: label,
    "data-testid": testId
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    ,
    style: {
      minWidth: '20px',
      maxWidth: '20px'
    } // having just width: '20px' shrinks it when table width is reduced
  }), text && /*#__PURE__*/_react.default.createElement(_primitives.Box, {
    xcss: textWrapperStyles
  }, /*#__PURE__*/_react.default.createElement(_text.default, {
    testId: ICON_TYPE_TEXT_TEST_ID,
    text: text
  })));
};
var _default = exports.default = IconRenderType;