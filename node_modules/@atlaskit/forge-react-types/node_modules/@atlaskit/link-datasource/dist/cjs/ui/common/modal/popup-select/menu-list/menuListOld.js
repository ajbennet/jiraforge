"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = _interopRequireDefault(require("react"));
var _primitives = require("@atlaskit/primitives");
var _select = require("@atlaskit/select");
var _spinner = _interopRequireDefault(require("@atlaskit/spinner"));
var _errorMessage = _interopRequireDefault(require("./errorMessage"));
var _loadingMessage = _interopRequireDefault(require("./loadingMessage"));
var _noOptionsMessage = _interopRequireDefault(require("./noOptionsMessage"));
var _showMoreButton = _interopRequireDefault(require("./showMoreButton"));
var _excluded = ["children"];
var inlineSpinnerStyles = (0, _primitives.xcss)({
  paddingTop: 'space.075'
});
var showMoreButtonBoxStyles = (0, _primitives.xcss)({
  paddingLeft: 'space.075',
  paddingTop: 'space.100'
});
var CustomMenuList = function CustomMenuList(_ref) {
  var children = _ref.children,
    props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var _props$selectProps$me =
    // @ts-ignore - https://product-fabric.atlassian.net/browse/DSP-21000
    props.selectProps.menuListProps,
    filterName = _props$selectProps$me.filterName,
    isLoading = _props$selectProps$me.isLoading,
    isLoadingMore = _props$selectProps$me.isLoadingMore,
    isError = _props$selectProps$me.isError,
    isEmpty = _props$selectProps$me.isEmpty,
    errors = _props$selectProps$me.errors,
    showMore = _props$selectProps$me.showMore,
    handleShowMore = _props$selectProps$me.handleShowMore;
  var shouldDisplayShowMore = showMore && !isLoadingMore;
  var isLoadingMoreData = !shouldDisplayShowMore && isLoadingMore;
  var InlineSpinner = function InlineSpinner() {
    return /*#__PURE__*/_react.default.createElement(_primitives.Flex, {
      justifyContent: "center",
      xcss: inlineSpinnerStyles
    }, /*#__PURE__*/_react.default.createElement(_spinner.default, {
      size: "medium"
    }));
  };
  var renderChildren = function renderChildren() {
    if (isLoading) {
      return /*#__PURE__*/_react.default.createElement(_loadingMessage.default, {
        filterName: filterName
      });
    }
    if (isError) {
      return /*#__PURE__*/_react.default.createElement(_errorMessage.default, {
        filterName: filterName,
        errors: errors
      });
    }
    if (isEmpty) {
      return /*#__PURE__*/_react.default.createElement(_noOptionsMessage.default, {
        filterName: filterName
      });
    }
    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, children, shouldDisplayShowMore && handleShowMore && /*#__PURE__*/_react.default.createElement(_primitives.Box, {
      xcss: showMoreButtonBoxStyles
    }, /*#__PURE__*/_react.default.createElement(_showMoreButton.default, {
      onShowMore: handleShowMore,
      filterName: filterName
    })), isLoadingMoreData && /*#__PURE__*/_react.default.createElement(InlineSpinner, null));
  };
  return /*#__PURE__*/_react.default.createElement(_select.components.MenuList, props, renderChildren());
};
var _default = exports.default = CustomMenuList;