"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.withTablePluginPrefix = exports.withTablePluginHeaderPrefix = exports.withTablePluginBodyPrefix = exports.TableHeading = exports.Table = exports.ScrollableContainerHeight = exports.InlineEditableTableCell = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _styled = _interopRequireDefault(require("@emotion/styled"));
var _colors = require("@atlaskit/theme/colors");
/* eslint-disable @atlaskit/design-system/use-tokens-typography */
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var ScrollableContainerHeight = exports.ScrollableContainerHeight = 590;

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled, @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var Table = exports.Table = _styled.default.table({
  width: '100%'
});
var lineHeight = '24px';
var verticalPadding = "var(--ds-space-025, 2px)";

/**
 * This is a hack used to override styles that are leaking to our table html element
 * from editor table plugin.
 * This css prefix can be used in front of our main css rule to make its weight bigger
 * and force make browser use it first and editor plugin css second.
 */
var withTablePluginPrefix = exports.withTablePluginPrefix = function withTablePluginPrefix(tableSection) {
  var mainRule = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '&';
  return "\n  .pm-table-wrapper > table ".concat(tableSection, " ").concat(mainRule, ",\n  .ProseMirror .pm-table-wrapper > table ").concat(tableSection, " ").concat(mainRule, ",\n  ").concat(mainRule, "\n");
};
var withTablePluginHeaderPrefix = exports.withTablePluginHeaderPrefix = withTablePluginPrefix.bind(null, 'thead');
var withTablePluginBodyPrefix = exports.withTablePluginBodyPrefix = withTablePluginPrefix.bind(null, 'tbody');

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled, @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
var TableHeading = exports.TableHeading = _styled.default.th((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)({}, "".concat(withTablePluginHeaderPrefix()), {
  border: 0,
  position: 'relative',
  /* This makes resizing work with out jumping due to padding + changes overall width for same default values. */
  boxSizing: 'border-box',
  lineHeight: lineHeight,
  padding: "".concat(verticalPadding, " ", "var(--ds-space-050, 4px)"),
  borderRight: "0.5px solid ".concat("var(--ds-border, ".concat(_colors.N40, ")")),
  borderBottom: "2px solid ".concat("var(--ds-border, ".concat(_colors.N40, ")")),
  /*
      lineHeight * 2 -> Max height of two lined header
      verticalPadding * 2 -> padding for this component itself
      verticalPadding * 2 -> padding inside span (--container)
      2px -> Bottom border
      Last two terms are needed because of border-box box sizing.
    */
  height: "calc(".concat(lineHeight, " * 2 + ").concat(verticalPadding, " * 4 + 2px)"),
  verticalAlign: 'bottom',
  backgroundColor: "var(--ds-elevation-surface-current, #FFF)"
}), "".concat(withTablePluginPrefix('', 'thead.has-column-picker &:nth-last-of-type(2)')), {
  borderRight: 0
}), "".concat(withTablePluginHeaderPrefix('&:first-child')), {
  paddingLeft: "var(--ds-space-050, 4px)"
}), "".concat(withTablePluginHeaderPrefix('&:last-child')), {
  borderRight: 0
}), "& [data-testid='datasource-header-content--container']", {
  width: '100%',
  /* With Button now being a parent for this component it adds its lineHeight value and spoils
      `height` calculation above. */
  lineHeight: lineHeight,
  padding: "".concat(verticalPadding, " ", "var(--ds-space-050, 4px)"),
  display: '-webkit-box',
  WebkitLineClamp: 2,
  WebkitBoxOrient: 'vertical',
  whiteSpace: 'normal',
  overflow: 'hidden',
  wordWrap: 'break-word'
}));

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled, @atlaskit/ui-styling-standard/no-exported-styles -- To migrate as part of go/ui-styling-standard
var InlineEditableTableCell = exports.InlineEditableTableCell = _styled.default.td((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)({}, "".concat(withTablePluginBodyPrefix()), {
  /* First section here is to override things editor table plugin css defines */
  font: "var(--ds-font-body, normal 400 14px/20px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, \"Helvetica Neue\", sans-serif)",
  padding: "var(--ds-space-0, 0)".concat(" ", "var(--ds-space-0, 0)"),
  border: 0,
  minWidth: 'auto',
  height: '40px',
  verticalAlign: 'inherit',
  boxSizing: 'content-box',
  borderRight: "var(--ds-border-width, 1px)".concat(" solid ", "var(--ds-border, ".concat(_colors.N40, ")")),
  borderBottom: "var(--ds-border-width, 1px)".concat(" solid ", "var(--ds-border, ".concat(_colors.N40, ")"))
}), "".concat(withTablePluginBodyPrefix('&:last-child')), {
  borderRight: 0
}), "& [data-testid='inline-card-icon-and-title'], " + "& [data-testid='button-connect-account'] > span", {
  whiteSpace: 'unset'
}));