"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TableFooterOld = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var _react2 = require("@emotion/react");
var _styled = _interopRequireDefault(require("@emotion/styled"));
var _reactIntlNext = require("react-intl-next");
var _button = _interopRequireDefault(require("@atlaskit/button"));
var _refresh = _interopRequireDefault(require("@atlaskit/icon/core/migration/refresh"));
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _primitives = require("@atlaskit/primitives");
var _colors = require("@atlaskit/theme/colors");
var _assetsModal = require("../assets-modal");
var _searchCount = _interopRequireWildcard(require("../common/modal/search-count"));
var _messages = require("./messages");
var _poweredByJsmAssets = require("./powered-by-jsm-assets");
var _syncInfo = require("./sync-info");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled -- To migrate as part of go/ui-styling-standard
var FooterWrapper = _styled.default.div({
  padding: "var(--ds-space-0, 0px)".concat(" ", "var(--ds-space-200, 16px)"),
  boxSizing: 'border-box',
  borderRadius: 'inherit',
  borderTopLeftRadius: 0,
  borderTopRightRadius: 0,
  background: "var(--ds-background-input, ".concat(_colors.N0, ")"),
  borderTop: "2px solid ".concat("var(--ds-background-accent-gray-subtler, ".concat(_colors.N40, ")"))
});

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled -- To migrate as part of go/ui-styling-standard
var TopBorderWrapper = _styled.default.div({
  display: 'flex',
  boxSizing: 'border-box',
  justifyContent: 'space-between',
  padding: "var(--ds-space-250, 20px)".concat(" ", "var(--ds-space-0, 0px)")
});

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled -- To migrate as part of go/ui-styling-standard
var SyncWrapper = _styled.default.div({
  display: 'flex',
  alignItems: 'center',
  color: "var(--ds-text-accent-gray, #44546F)"
});

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled -- To migrate as part of go/ui-styling-standard
var SyncTextWrapper = _styled.default.div({
  marginRight: "var(--ds-space-075, 6px)",
  font: "var(--ds-font-body-UNSAFE_small, normal 400 12px/16px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, \"Helvetica Neue\", sans-serif)"
});
var TableFooterOld = exports.TableFooterOld = function TableFooterOld(_ref) {
  var datasourceId = _ref.datasourceId,
    itemCount = _ref.itemCount,
    onRefresh = _ref.onRefresh,
    isLoading = _ref.isLoading,
    url = _ref.url;
  var intl = (0, _reactIntlNext.useIntl)();
  var _useState = (0, _react.useState)(new Date()),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    lastSyncTime = _useState2[0],
    setLastSyncTime = _useState2[1];
  var showItemCount = itemCount && itemCount > 0 ? true : itemCount === 0 ? !isLoading : false;
  (0, _react.useEffect)(function () {
    if (isLoading) {
      setLastSyncTime(new Date());
    }
  }, [isLoading]);

  // If only one of the two is passed in, still show the other one (Note: We keep the div encapsulating the one not shown to
  // ensure correct positioning since 'justify-content: space-between' is used).
  return onRefresh || showItemCount ? (0, _react2.jsx)(FooterWrapper, {
    "data-testid": "table-footer"
  }, (0, _react2.jsx)(TopBorderWrapper, null, showItemCount && (0, _react2.jsx)(_primitives.Flex, null, datasourceId === _assetsModal.ASSETS_LIST_OF_LINKS_DATASOURCE_ID ? (0, _react2.jsx)(_searchCount.AssetsItemCount, {
    searchCount: itemCount,
    url: url,
    testId: "item-count"
  }) : (0, _react2.jsx)(_searchCount.default, {
    searchCount: itemCount,
    url: url,
    prefixTextType: "item",
    testId: "item-count"
  })), datasourceId === _assetsModal.ASSETS_LIST_OF_LINKS_DATASOURCE_ID ? (0, _react2.jsx)(_poweredByJsmAssets.PoweredByJSMAssets, {
    text: intl.formatMessage((0, _platformFeatureFlags.fg)('assets_as_an_app_v2') ? _messages.footerMessages.poweredByAssets : _messages.footerMessages.powerByJSM)
  }) : null, (0, _react2.jsx)(SyncWrapper, null, onRefresh && (0, _react2.jsx)(_react.Fragment, null, (0, _react2.jsx)(SyncTextWrapper, {
    "data-testid": "sync-text"
  }, isLoading ? (0, _react2.jsx)(_reactIntlNext.FormattedMessage, _messages.footerMessages.loadingText) : (0, _react2.jsx)(_syncInfo.SyncInfo, {
    lastSyncTime: lastSyncTime
  })), (0, _react2.jsx)(_button.default, {
    onClick: onRefresh,
    appearance: "subtle",
    iconBefore: (0, _react2.jsx)(_refresh.default, {
      label: intl.formatMessage(_messages.footerMessages.refreshLabel),
      color: "currentColor",
      spacing: "spacious"
    }),
    isDisabled: isLoading,
    testId: "refresh-button"
  }))))) : null;
};