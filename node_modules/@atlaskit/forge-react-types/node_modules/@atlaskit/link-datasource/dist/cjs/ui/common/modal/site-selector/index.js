/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SiteSelector = void 0;
require("./index.compiled.css");
var _react = _interopRequireWildcard(require("react"));
var React = _react;
var _runtime = require("@compiled/react/runtime");
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _reactIntlNext = require("react-intl-next");
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _compiled = require("@atlaskit/primitives/compiled");
var _select = _interopRequireDefault(require("@atlaskit/select"));
var _messages = require("./messages");
var _siteSelectorOld = require("./site-selector-old");
var _excluded = ["width"],
  _excluded2 = ["width"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var styles = {
  dropdownContainerStyles: "_zulpu2gc _1e0c1txw _4cvr1h6o _1tke1ylp"
};
var selectStyles = null;
var SiteSelectorNew = function SiteSelectorNew(props) {
  var availableSites = props.availableSites,
    onSiteSelection = props.onSiteSelection,
    selectedSite = props.selectedSite,
    label = props.label,
    testId = props.testId;
  var _useIntl = (0, _reactIntlNext.useIntl)(),
    formatMessage = _useIntl.formatMessage;
  var onChange = function onChange(newValue) {
    var selectedSite = availableSites === null || availableSites === void 0 ? void 0 : availableSites.find(function (site) {
      return site.cloudId === (newValue === null || newValue === void 0 ? void 0 : newValue.value);
    });
    if (selectedSite) {
      onSiteSelection(selectedSite);
    }
  };
  var availableSitesOptions = (0, _react.useMemo)(function () {
    return availableSites === null || availableSites === void 0 ? void 0 : availableSites.map(function (site) {
      return {
        label: site.displayName,
        value: site.cloudId
      };
    });
  }, [availableSites]);
  var selectedSiteOption = selectedSite && {
    label: selectedSite.displayName,
    value: selectedSite.cloudId
  };
  return /*#__PURE__*/React.createElement(_compiled.Box, {
    xcss: styles.dropdownContainerStyles
  }, formatMessage(label), availableSites && availableSites.length > 1 && /*#__PURE__*/React.createElement("span", {
    "data-testid": "".concat(testId, "--trigger")
  }, /*#__PURE__*/React.createElement(_select.default, {
    classNamePrefix: testId,
    isLoading: !availableSites,
    onChange: onChange,
    options: availableSitesOptions,
    placeholder: formatMessage(_messages.siteSelectorMessages.chooseSite),
    styles: {
      // prevents the popup menu with available sites from being too narrow
      // if the selected site is much shorter than the other options
      menu: function menu(_ref) {
        var width = _ref.width,
          css = (0, _objectWithoutProperties2.default)(_ref, _excluded);
        return _objectSpread(_objectSpread({}, css), {}, {
          minWidth: '100%',
          width: 'max-content',
          // font-weight has to be overridden here so that it gets applied after the font styles in teh css element above
          fontWeight: "var(--ds-font-weight-medium, 500)"
        });
      },
      valueContainer: function valueContainer(_ref2) {
        var width = _ref2.width,
          css = (0, _objectWithoutProperties2.default)(_ref2, _excluded2);
        return _objectSpread(_objectSpread({}, css), {}, {
          // font-weight has to be overridden here so that it gets applied after the font styles in teh css element above
          fontWeight: "var(--ds-font-weight-medium, 500)"
        });
      }
    },
    testId: testId,
    value: selectedSiteOption,
    label: formatMessage(_messages.siteSelectorMessages.chooseSite),
    className: (0, _runtime.ax)(["_11c82smr _1pbyibnn"])
  })));
};
var SiteSelector = exports.SiteSelector = function SiteSelector(props) {
  if ((0, _platformFeatureFlags.fg)('bandicoots-compiled-migration-link-datasource')) {
    return /*#__PURE__*/React.createElement(SiteSelectorNew, props);
  } else {
    return /*#__PURE__*/React.createElement(_siteSelectorOld.SiteSelectorOld, props);
  }
};