"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("@emotion/react");
var _colors = require("@atlaskit/theme/colors");
var _constants = require("./constants");
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

var iconWrapperStyles = (0, _react.css)({
  display: 'flex',
  boxSizing: 'border-box',
  width: '100%',
  height: '100%',
  alignItems: 'center',
  alignContent: 'center',
  borderRadius: "var(--ds-border-radius-circle, 50%)",
  overflow: 'hidden'
});

/**
 * __Icon wrapper__
 *
 * An icon wrapper is used internally only.
 */
var IconWrapper = function IconWrapper(_ref) {
  var _ref$bgColor = _ref.bgColor,
    bgColor = _ref$bgColor === void 0 ? "var(--ds-surface-overlay, ".concat(_colors.N0, ")") : _ref$bgColor,
    children = _ref.children;
  return (0, _react.jsx)("span", {
    css: iconWrapperStyles,
    role: "presentation",
    style: {
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
      border: "".concat(_constants.BORDER_WIDTH, "px solid ").concat(bgColor),
      backgroundColor: bgColor
    }
  }, children);
};
var _default = exports.default = IconWrapper;