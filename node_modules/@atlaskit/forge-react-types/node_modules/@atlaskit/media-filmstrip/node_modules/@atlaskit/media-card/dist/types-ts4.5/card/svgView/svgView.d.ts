/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import { jsx } from '@emotion/react';
import React from 'react';
import { type FileIdentifier, type ImageResizeMode } from '@atlaskit/media-client';
import { type WithAnalyticsEventsProps, type UIAnalyticsEvent } from '@atlaskit/analytics-next';
import { MediaCardError, type SvgPrimaryReason } from '../../errors';
import { type MediaSVGErrorReason } from '@atlaskit/media-svg';
export declare const getErrorReason: (svgReason: MediaSVGErrorReason) => SvgPrimaryReason;
export type OnClickFn = (event: React.MouseEvent<HTMLDivElement | HTMLButtonElement>, analyticsEvent?: UIAnalyticsEvent) => void;
export interface SvgViewBaseOwnProps {
    readonly identifier: FileIdentifier;
    readonly resizeMode: ImageResizeMode;
    readonly onLoad?: () => void;
    readonly onError?: (error: MediaCardError) => void;
    readonly wrapperRef: React.RefObject<HTMLDivElement>;
    readonly alt?: string;
}
export type SvgViewProps = SvgViewBaseOwnProps & WithAnalyticsEventsProps;
export declare const SvgView: ({ identifier, resizeMode, onLoad, onError, wrapperRef, alt, }: SvgViewProps) => jsx.JSX.Element | null;
