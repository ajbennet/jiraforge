"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireWildcard(require("react"));
var _react2 = require("@emotion/react");
var _link = _interopRequireDefault(require("@atlaskit/icon/core/migration/link"));
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _primitives = require("@atlaskit/primitives");
var _constants = require("../../../../../constants");
var _atlaskitIcon = _interopRequireDefault(require("../../common/atlaskit-icon"));
var _imageIcon = _interopRequireDefault(require("../../common/image-icon"));
var _utils = require("../../utils");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var getPositionStyles = function getPositionStyles(position) {
  switch (position) {
    case _constants.SmartLinkPosition.Center:
      return (0, _react2.css)({
        alignSelf: 'center'
      });
    case _constants.SmartLinkPosition.Top:
    default:
      return (0, _react2.css)({
        alignSelf: 'flex-start',
        margin: 0
      });
  }
};
var getIconStyles = function getIconStyles(position, width) {
  return (
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
    (0, _react2.css)(getPositionStyles(position), (0, _utils.getIconSizeStyles)(width))
  );
};
var getCustomRenderStyles = function getCustomRenderStyles(value) {
  return (
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    (0, _react2.css)((0, _utils.getTruncateStyles)(1, value), {
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values, @atlaskit/design-system/use-tokens-typography -- Ignored via go/DSP-18766
      lineHeight: value,
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
      fontSize: value,
      textAlign: 'center',
      textOverflow: 'clip',
      WebkitBoxOrient: 'unset',
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
      span: {
        margin: 0,
        padding: 0,
        verticalAlign: 'baseline'
      }
    })
  );
};
var renderAtlaskitIcon = function renderAtlaskitIcon(icon, testId) {
  var size = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _constants.SmartLinkSize.Medium;
  if (icon) {
    return (0, _react2.jsx)(_atlaskitIcon.default, (0, _extends2.default)({
      icon: icon,
      testId: "".concat(testId, "-icon")
    }, (0, _platformFeatureFlags.fg)('platform-smart-card-icon-migration') && {
      size: size
    }));
  }
};
var renderDefaultIcon = function renderDefaultIcon(label, testId) {
  return (0, _react2.jsx)(_link.default, {
    label: label,
    testId: "".concat(testId, "-default"),
    color: "currentColor"
  });
};
var renderImageIcon = function renderImageIcon(defaultIcon, url, testId) {
  var size = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : _constants.SmartLinkSize.Medium;
  var width = size === _constants.SmartLinkSize.Large ? "var(--ds-space-300, 24px)" : "var(--ds-space-200, 16px)";
  if (url) {
    return (0, _react2.jsx)(_imageIcon.default, (0, _extends2.default)({
      defaultIcon: defaultIcon,
      testId: testId,
      url: url
    }, (0, _platformFeatureFlags.fg)('platform-smart-card-icon-migration') && {
      width: width,
      height: width
    }));
  }
};

/**
 * A base element that displays an Icon or favicon.
 * @internal
 * @param {IconProps} IconProps - The props necessary for the Icon element.
 * @see LinkIcon
 */
var IconOld = function IconOld(_ref) {
  var icon = _ref.icon,
    overrideIcon = _ref.overrideIcon,
    _ref$label = _ref.label,
    label = _ref$label === void 0 ? 'Link' : _ref$label,
    name = _ref.name,
    _ref$position = _ref.position,
    position = _ref$position === void 0 ? _constants.SmartLinkPosition.Top : _ref$position,
    overrideCss = _ref.overrideCss,
    render = _ref.render,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? _constants.SmartLinkSize.Medium : _ref$size,
    _ref$testId = _ref.testId,
    testId = _ref$testId === void 0 ? 'smart-element-icon' : _ref$testId,
    url = _ref.url;
  var element = (0, _react.useMemo)(function () {
    var defaultIcon = renderDefaultIcon(label, testId);
    return overrideIcon || (render === null || render === void 0 ? void 0 : render()) || renderImageIcon(defaultIcon, url, testId, (0, _platformFeatureFlags.fg)('platform-smart-card-icon-migration') ? size : undefined) || renderAtlaskitIcon(icon, testId, (0, _platformFeatureFlags.fg)('platform-smart-card-icon-migration') ? size : undefined) || defaultIcon;
  }, [overrideIcon, icon, label, render, testId, url, size]);
  var width = (0, _utils.getIconWidth)(size);
  var styles = getIconStyles(position, width);
  var renderStyles = render ? getCustomRenderStyles(width) : undefined;
  return (0, _react2.jsx)("div", {
    css: [
    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage -- needs dynamic css
    !(0, _platformFeatureFlags.fg)('platform-smart-card-icon-migration') && styles,
    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage -- needs dynamic css
    renderStyles,
    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage -- needs dynamic css
    overrideCss],
    "data-fit-to-content": true,
    "data-smart-element": name,
    "data-smart-element-icon": true,
    "data-testid": testId
  }, (0, _platformFeatureFlags.fg)('platform-smart-card-icon-migration') ? (0, _react2.jsx)(_primitives.Box, {
    xcss: iconWrapperStyle,
    style: {
      width: width,
      height: width
    }
  }, element) : element);
};
var iconWrapperStyle = (0, _primitives.xcss)({
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center'
});
var _default = exports.default = IconOld;