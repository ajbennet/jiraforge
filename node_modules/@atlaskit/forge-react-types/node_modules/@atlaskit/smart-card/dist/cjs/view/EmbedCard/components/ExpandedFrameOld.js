/* ExpandedFrameOld.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ExpandedFrameOld = void 0;
var React = _interopRequireWildcard(require("react"));
var _runtime = require("@compiled/react/runtime");
var _tooltip = _interopRequireDefault(require("@atlaskit/tooltip"));
var _useLinkClicked = require("../../../state/analytics/useLinkClicked");
var _utils = require("../../common/utils");
var _styledOld = require("./styledOld");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var ExpandedFrameOld = exports.ExpandedFrameOld = function ExpandedFrameOld(_ref) {
  var _ref$isPlaceholder = _ref.isPlaceholder,
    isPlaceholder = _ref$isPlaceholder === void 0 ? false : _ref$isPlaceholder,
    children = _ref.children,
    onClick = _ref.onClick,
    icon = _ref.icon,
    text = _ref.text,
    isSelected = _ref.isSelected,
    _ref$frameStyle = _ref.frameStyle,
    frameStyle = _ref$frameStyle === void 0 ? 'showOnHover' : _ref$frameStyle,
    href = _ref.href,
    minWidth = _ref.minWidth,
    maxWidth = _ref.maxWidth,
    _ref$testId = _ref.testId,
    testId = _ref$testId === void 0 ? 'expanded-frame' : _ref$testId,
    inheritDimensions = _ref.inheritDimensions,
    _ref$allowScrollBar = _ref.allowScrollBar,
    allowScrollBar = _ref$allowScrollBar === void 0 ? false : _ref$allowScrollBar,
    _ref$setOverflow = _ref.setOverflow,
    setOverflow = _ref$setOverflow === void 0 ? true : _ref$setOverflow;
  var isInteractive = function isInteractive() {
    return !isPlaceholder && (Boolean(href) || Boolean(onClick));
  };
  var handleClick = function handleClick(event) {
    return (0, _utils.handleClickCommon)(event, onClick);
  };
  var handleMouseDown = (0, _useLinkClicked.useMouseDownEvent)();
  var renderHeader = function renderHeader() {
    return (
      /*#__PURE__*/
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
      React.createElement(_styledOld.Header, {
        className: "embed-header",
        frameStyle: frameStyle
      }, /*#__PURE__*/React.createElement(_styledOld.IconWrapper, {
        isPlaceholder: isPlaceholder
      }, !isPlaceholder && icon), /*#__PURE__*/React.createElement(_styledOld.TooltipWrapper, null, /*#__PURE__*/React.createElement(_tooltip.default, {
        content: text,
        hideTooltipOnMouseDown: true
      }, /*#__PURE__*/React.createElement(_styledOld.TextWrapper, {
        isPlaceholder: isPlaceholder
      }, !isPlaceholder && /*#__PURE__*/React.createElement("a", {
        href: href,
        onClick: handleClick,
        onMouseDown: handleMouseDown
      }, text)))))
    );
  };
  var renderContent = function renderContent() {
    return /*#__PURE__*/React.createElement(_styledOld.Content, {
      "data-testid": "embed-content-wrapper",
      allowScrollBar: allowScrollBar,
      removeOverflow: !setOverflow,
      isInteractive: isInteractive(),
      frameStyle: frameStyle
      // This fixes an issue with input fields in cross domain iframes (ie. databases and jira fields from different domains)
      // See: HOT-107830
      ,
      contentEditable: 'false',
      suppressContentEditableWarning: true
    }, children);
  };
  if (!isPlaceholder && href) {
    return /*#__PURE__*/React.createElement(_styledOld.LinkWrapper
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
    , {
      className: _styledOld.className,
      isInteractive: isInteractive(),
      isSelected: isSelected,
      frameStyle: frameStyle,
      minWidth: minWidth,
      maxWidth: maxWidth,
      "data-testid": testId,
      "data-trello-do-not-use-override": testId
      // Due to limitations of testing library, we can't assert ::after
      ,
      "data-is-selected": isSelected,
      inheritDimensions: inheritDimensions
    }, renderHeader(), renderContent());
  } else {
    return /*#__PURE__*/React.createElement(_styledOld.Wrapper
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
    , {
      className: _styledOld.className,
      isInteractive: isInteractive(),
      isSelected: isSelected,
      minWidth: minWidth,
      frameStyle: frameStyle,
      maxWidth: maxWidth,
      "data-testid": testId,
      "data-trello-do-not-use-override": testId,
      "data-is-selected": isSelected,
      "data-wrapper-type": "default",
      "data-is-interactive": isInteractive()
    }, renderHeader(), renderContent());
  }
};