"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("@emotion/react");
var _primitives = require("@atlaskit/primitives");
var _index = require("../../../../index");
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var hoverStyles = (0, _primitives.xcss)({
  ':hover': {
    backgroundColor: 'color.background.input.hovered',
    borderRadius: 'border.radius.100',
    marginInline: 'space.negative.100',
    paddingInline: 'space.100'
  }
});
var relatedLinkItemStyles = (0, _react.css)({
  paddingTop: "var(--ds-space-100, 8px)",
  paddingBottom: "var(--ds-space-100, 8px)",
  gap: "var(--ds-space-150, 12px)",
  font: "var(--ds-font-body-small, normal 400 11px/16px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, system-ui, \"Helvetica Neue\", sans-serif)"
});
var RelatedLinkItem = function RelatedLinkItem(_ref) {
  var url = _ref.url,
    testId = _ref.testId;
  var subtitle = [{
    name: _index.ElementName.Provider,
    hideIcon: true
  }];
  var ui = {
    hideElevation: true,
    hidePadding: true,
    hideBackground: true,
    theme: _index.SmartLinkTheme.Black,
    clickableContainer: true,
    size: _index.SmartLinkSize.Large
  };
  return (0, _react.jsx)(_primitives.Box, {
    testId: testId,
    xcss: hoverStyles
  }, (0, _react.jsx)(_index.Card, {
    appearance: "block",
    ui: ui,
    url: url
  }, (0, _react.jsx)(_index.TitleBlock, {
    maxLines: 1,
    hideTitleTooltip: true,
    position: _index.SmartLinkPosition.Center,
    subtitle: subtitle,
    overrideCss: relatedLinkItemStyles,
    anchorTarget: "_blank"
  })));
};
var _default = exports.default = RelatedLinkItem;