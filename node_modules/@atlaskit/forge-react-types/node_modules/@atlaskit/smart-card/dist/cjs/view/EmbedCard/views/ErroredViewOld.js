"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EmbedCardErroredViewOld = void 0;
var _react = require("@emotion/react");
var _reactIntlNext = require("react-intl-next");
var _button = _interopRequireDefault(require("@atlaskit/button"));
var _error = _interopRequireDefault(require("@atlaskit/icon/core/migration/error"));
var _primitives = require("@atlaskit/primitives");
var _colors = require("@atlaskit/theme/colors");
var _messages = require("../../../messages");
var _utils = require("../../common/utils");
var _ErrorFrame = require("../components/ErrorFrame");
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var messageStyles = (0, _react.css)({
  font: "var(--ds-font-heading-xsmall, normal 600 14px/16px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, system-ui, \"Helvetica Neue\", sans-serif)",
  fontWeight: "var(--ds-font-weight-regular, 400)",
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  marginLeft: (0, _utils.gs)(0.5),
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  marginRight: (0, _utils.gs)(0.5),
  display: '-webkit-box',
  overflow: 'hidden',
  textOverflow: 'ellipsis',
  WebkitLineClamp: 1,
  WebkitBoxOrient: 'vertical',
  // Fallback options.
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  maxHeight: (0, _utils.gs)(3)
});
var boxStyles = (0, _primitives.xcss)({
  paddingLeft: 'space.050',
  paddingRight: 'space.050'
});
var EmbedCardErroredViewOld = exports.EmbedCardErroredViewOld = function EmbedCardErroredViewOld(_ref) {
  var onRetry = _ref.onRetry,
    _ref$isSelected = _ref.isSelected,
    isSelected = _ref$isSelected === void 0 ? false : _ref$isSelected,
    _ref$testId = _ref.testId,
    testId = _ref$testId === void 0 ? 'embed-card-errored-view' : _ref$testId,
    inheritDimensions = _ref.inheritDimensions;
  return (0, _react.jsx)(_ErrorFrame.Frame, {
    inheritDimensions: inheritDimensions,
    compact: true,
    isSelected: isSelected,
    testId: testId
  }, (0, _react.jsx)(_error.default, {
    LEGACY_size: "small",
    color: "var(--ds-icon-danger, ".concat(_colors.R300, ")"),
    label: "error-icon"
  }), (0, _react.jsx)(_primitives.Box, {
    xcss: boxStyles
  }, (0, _react.jsx)(_primitives.Inline, {
    xcss: messageStyles
  }, (0, _react.jsx)(_reactIntlNext.FormattedMessage, _messages.messages.could_not_load_link))), (0, _react.jsx)(_button.default, {
    testId: "err-view-retry",
    appearance: "link",
    spacing: "none",
    onClick: onRetry
  }, (0, _react.jsx)(_reactIntlNext.FormattedMessage, _messages.messages.try_again)));
};