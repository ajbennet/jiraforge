"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var _react2 = require("@emotion/react");
var _reactMagneticDi = require("react-magnetic-di");
var _primitives = require("@atlaskit/primitives");
var _constants = require("../../../../../constants");
var _flexibleUiContext = require("../../../../../state/flexible-ui-context");
var Actions = _interopRequireWildcard(require("../../actions"));
var _utils = require("../../utils");
var _actionFooter = require("./action-footer");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766

var ignoreContainerPaddingStyles = (0, _react2.css)({
  display: 'flex',
  flexDirection: 'column',
  boxSizing: 'border-box',
  flexGrow: 1,
  width: '100%',
  // We have to find a better way to ignore container padding
  // This has become more and more of a common use case.
  marginLeft: 'calc(var(--container-gap-left) * -1)',
  marginRight: 'calc(var(--container-gap-right) * -1)'
});
var DEFAULT_SORT_ORDER = ['PreviewAction', 'CopyLinkAction', 'AISummaryAction'];
var sort = function sort(a, b) {
  var idxA = DEFAULT_SORT_ORDER.indexOf(a);
  var idxB = DEFAULT_SORT_ORDER.indexOf(b);
  if (idxA === -1) {
    idxA = DEFAULT_SORT_ORDER.length;
  }
  if (idxB === -1) {
    idxB = DEFAULT_SORT_ORDER.length;
  }
  return idxA - idxB;
};
var ActionBlockOld = function ActionBlockOld(_ref) {
  var blockRef = _ref.blockRef,
    onClickCallback = _ref.onClick,
    size = _ref.size,
    spaceInline = _ref.spaceInline,
    _ref$testId = _ref.testId,
    testId = _ref$testId === void 0 ? 'smart-block-action' : _ref$testId;
  var context = (0, _flexibleUiContext.useFlexibleUiContext)();
  var ui = (0, _flexibleUiContext.useFlexibleUiOptionContext)();
  var _useState = (0, _react.useState)(),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    message = _useState2[0],
    setMessage = _useState2[1];
  var _useState3 = (0, _react.useState)(false),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
    isLoading = _useState4[0],
    setIsLoading = _useState4[1];
  var onLoadingChange = (0, _react.useCallback)(function (isLoading) {
    setIsLoading(isLoading);
  }, [setIsLoading]);
  var padding = !(ui !== null && ui !== void 0 && ui.hidePadding) ? (0, _utils.getPrimitivesPaddingSpaceBySize)((ui === null || ui === void 0 ? void 0 : ui.size) || _constants.SmartLinkSize.Medium) : undefined;
  var _onClick = (0, _react.useCallback)(function (name) {
    setMessage(undefined);
    onClickCallback === null || onClickCallback === void 0 || onClickCallback(name);
  }, [onClickCallback]);
  var onError = (0, _react.useCallback)(function (error) {
    setMessage(error);
  }, []);
  var actions = (0, _react.useMemo)(function () {
    if (!(context !== null && context !== void 0 && context.actions)) {
      return;
    }
    var arr = Object.keys(context.actions);
    arr.sort(sort);
    return arr.map(function (name) {
      var Action = name in Actions ? Actions[name] : undefined;
      return Action ? (0, _react2.jsx)(Action, {
        as: "stack-item",
        spaceInline: spaceInline,
        key: name,
        onClick: function onClick() {
          return _onClick(name);
        },
        onError: onError,
        onLoadingChange: onLoadingChange,
        size: size
        // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values, @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/design-system/consistent-css-prop-usage -- Ignored via go/DSP-18766
        ,
        xcss: (0, _primitives.xcss)({
          paddingInline: padding
        }),
        hideTooltip: isLoading
      }) : null;
    });
  }, [context === null || context === void 0 ? void 0 : context.actions, _onClick, onError, padding, size, spaceInline, isLoading, onLoadingChange]);
  return actions ? (0, _react2.jsx)("div", {
    css: ignoreContainerPaddingStyles,
    ref: blockRef,
    "data-testid": testId
  }, actions, (0, _react2.jsx)(_actionFooter.ActionFooter, {
    message: message,
    paddingInline: padding,
    testId: testId
  })) : null;
};
var _default = exports.default = ActionBlockOld;