"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ActionButton = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = _interopRequireWildcard(require("react"));
var _primitives = require("@atlaskit/primitives");
var _excluded = ["children"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/**
 * Action button has to be a span for the overflow to work correctly
 */
var ActionButton = exports.ActionButton = /*#__PURE__*/(0, _react.forwardRef)(function (_ref, ref) {
  var children = _ref.children,
    props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  // `Button transforms `testId` into `data-testid`. We need to transform it back to `testId`
  var testId = props["data-testid"];
  return /*#__PURE__*/_react.default.createElement(_primitives.Box, (0, _extends2.default)({
    as: "span",
    ref: ref,
    xcss: [actionButtonStyle, !props.disabled && actionButtonNotDisabledStyle]
  }, props, {
    "aria-disabled": props.disabled,
    role: "button",
    testId: testId
  }), /*#__PURE__*/_react.default.createElement(_primitives.Box, {
    as: "span",
    xcss: internalButtonStyle
  }, children));
});
var actionButtonStyle = (0, _primitives.xcss)({
  textAlign: 'initial',
  display: 'inline',
  borderRadius: 'border.radius.100',
  borderTopLeftRadius: '0px',
  borderBottomLeftRadius: '0px',
  backgroundClip: 'padding-box',
  boxDecorationBreak: 'clone',
  font: 'font.body.large',
  paddingTop: 'space.025',
  paddingLeft: 'space.075',
  paddingBottom: 'space.025',
  paddingRight: 'space.075',
  whiteSpace: 'nowrap',
  backgroundColor: 'color.background.neutral',
  cursor: 'not-allowed',
  color: 'color.text.disabled'
});
var internalButtonStyle = (0, _primitives.xcss)({
  font: 'font.body'
});
var actionButtonNotDisabledStyle = (0, _primitives.xcss)({
  color: 'color.text',
  cursor: 'pointer',
  ':hover': {
    backgroundColor: 'color.background.neutral.hovered'
  }
});