"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AutomationModalExecutionStateOld = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactIntlNext = require("react-intl-next");
var _primitives = require("@atlaskit/primitives");
var _sectionMessage = _interopRequireDefault(require("@atlaskit/section-message"));
var _menuContext = require("../../menu-context");
var i18n = (0, _reactIntlNext.defineMessages)({
  ruleExecutionSuccessMessage: {
    id: 'automation-menu.success-state.message',
    defaultMessage: 'Your automation is in progress',
    description: 'Message that is displayed when a users automation rule has been successfully queued.'
  },
  ruleExecutionErrorMessage: {
    id: 'automation-menu.modal.error.description',
    defaultMessage: 'Oops we ran into a problem',
    description: "Description for the error section shown when rules can't be executed"
  }
});
var messageStyling = (0, _primitives.xcss)({
  marginInline: 'space.300',
  marginTop: 'space.100',
  // The ModalFooter comes with a lot of built in margin, want to nudge the error message in to the footer a bit
  marginBottom: 'space.negative.100'
});
var AutomationModalExecutionStateOld = exports.AutomationModalExecutionStateOld = function AutomationModalExecutionStateOld() {
  var _useAutomationMenu = (0, _menuContext.useAutomationMenu)(),
    ruleExecutionState = _useAutomationMenu.ruleExecutionState;
  if (ruleExecutionState === 'FAILURE') {
    return /*#__PURE__*/_react.default.createElement(_primitives.Box, {
      xcss: messageStyling
    }, /*#__PURE__*/_react.default.createElement(_sectionMessage.default, {
      appearance: "error"
    }, /*#__PURE__*/_react.default.createElement(_reactIntlNext.FormattedMessage, i18n.ruleExecutionErrorMessage)));
  } else {
    return null;
  }
};