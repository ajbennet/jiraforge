import { extractType } from '@atlaskit/link-extractors';
import { fg } from '@atlaskit/platform-feature-flags';
import { extractState } from './extractState';
import { extractTag } from './extractTag';
import { extractTaskStatus } from './extractTaskStatus';
import { extractTaskType } from './extractTaskType';
var DOC_TYPES = ['schema:BlogPosting', 'schema:TextDigitalDocument', 'schema:DigitalDocument', 'schema:PresentationDigitalDocument', 'schema:SpreadsheetDigitalDocument'];
export var extractLozenge = function extractLozenge(jsonLd) {
  var type = extractType(jsonLd);
  if (type) {
    if (fg('linking_platform_show_lozenge_atlassian_state')) {
      if (type.includes('atlassian:Task')) {
        var jsonLdTask = jsonLd;
        var lozengeFromTag = extractTag(jsonLdTask);
        var lozengeFromStatus = extractTaskStatus(jsonLdTask);
        var lozengeFromTaskType = extractLozengeFromTaskType(jsonLdTask);
        return lozengeFromTag || lozengeFromStatus || lozengeFromTaskType;
      }
      if (type.includes('atlassian:UndefinedLink')) {
        return {
          text: 'UNDEFINED',
          appearance: 'inprogress'
        };
      }

      // casting it because `extractState` can safely handle missing properties
      return extractState(jsonLd);
    }
    if (type.includes('atlassian:SourceCodePullRequest')) {
      return extractState(jsonLd);
    } else if (type.includes('atlassian:Task')) {
      var _jsonLdTask = jsonLd;
      var _lozengeFromTag = extractTag(_jsonLdTask);
      var _lozengeFromStatus = extractTaskStatus(_jsonLdTask);
      var _lozengeFromTaskType = extractLozengeFromTaskType(_jsonLdTask);
      return _lozengeFromTag || _lozengeFromStatus || _lozengeFromTaskType;
    } else if (type.some(function (types) {
      return DOC_TYPES.includes(types);
    })) {
      var jsonLdDocument = jsonLd;
      var lozengeFromState = extractState(jsonLdDocument);
      return lozengeFromState;
    } else if (type.includes('atlassian:Goal')) {
      var jsonLdProject = jsonLd;
      var _lozengeFromState = extractState(jsonLdProject);
      return _lozengeFromState;
    } else if (type.includes('atlassian:Project')) {
      var _jsonLdProject = jsonLd;
      var _lozengeFromState2 = extractState(_jsonLdProject);
      return _lozengeFromState2;
    } else if (type.includes('atlassian:UndefinedLink')) {
      return {
        text: 'UNDEFINED',
        appearance: 'inprogress'
      };
    }
  }
};
var extractLozengeFromTaskType = function extractLozengeFromTaskType(jsonLdTask) {
  var taskType = extractTaskType(jsonLdTask);
  if (taskType && taskType.name) {
    return {
      text: taskType.name,
      appearance: 'success'
    };
  }
};