/* index.tsx generated by @compiled/babel-plugin v0.36.1 */
import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["as", "style"],
  _excluded2 = ["as", "style"],
  _excluded3 = ["rightSideSpacer"],
  _excluded4 = ["as", "style"],
  _excluded5 = ["as", "style"];
import "./index.compiled.css";
import { forwardRef } from 'react';
import { ax, ix } from "@compiled/react/runtime";
import React from 'react';
import { di } from 'react-magnetic-di';
import ImageLoader from 'react-render-image';
import LinkIcon from '@atlaskit/icon/core/migration/link';
import { fg } from '@atlaskit/platform-feature-flags';
import { Box } from '@atlaskit/primitives/compiled';
import { B400, N200 } from '@atlaskit/theme/colors';
import { Icon, Shimmer } from '../Icon';
import { IconAndTitleLayoutOld } from './IconAndTitleLayoutOld';
import { EmojiWrapperOldVisualRefresh, IconEmptyWrapperOldVisualRefresh, IconPositionWrapperOldVisualRefresh, IconWrapperOldVisualRefresh, TitleWrapperClassNameOldVisualRefresh } from './styled';
var styles = {
  lozengeInternalWrapperStyle: "_n3tdv77o",
  lozengeWrapperStyle: "_1e0c1o8l _s7n4yfq0 _19pkze3t _2hwx1b66 _otyrze3t _18u0v77o",
  iconEmptyStyle: "_1bsb7vkz _1e0c1o8l _tzy4idpf",
  iconOuterWrapperStyle: "_2hwx1b66 _1e0c1o8l _kqswh2mm",
  iconTitleWrapperStyle: "_o5721jtm _1nmz9jpi _16d9qvcn _ca0qv77o _u5f31b66 _n3tdv77o _19bv1b66",
  iconWrapperStyle: "_kqswstnw _1e0c116y _4cvr1h6o _vchhusvi _154ize3t _1ltvze3t _94n5ze3t _1bsb7vkz _uiztglyw",
  noLinkAppearanceStyle: "_11c81oud _syaz131l _18u01b66"
};
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled -- Ignored via go/DSP-18766
var NoLinkAppearanceOldVisualRefresh = forwardRef(function (_ref, __cmplr) {
  var _ref$as = _ref.as,
    C = _ref$as === void 0 ? "span" : _ref$as,
    __cmpls = _ref.style,
    __cmplp = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/React.createElement(C, _extends({}, __cmplp, {
    style: __cmpls,
    ref: __cmplr,
    className: ax(["_syaz1wmz _18u01b66", __cmplp.className])
  }));
});

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled -- Ignored via go/DSP-18766
if (process.env.NODE_ENV !== 'production') {
  NoLinkAppearanceOldVisualRefresh.displayName = 'NoLinkAppearanceOldVisualRefresh';
}
var LinkAppearance = forwardRef(function (_ref2, __cmplr) {
  var _ref2$as = _ref2.as,
    C = _ref2$as === void 0 ? "a" : _ref2$as,
    __cmpls = _ref2.style,
    __cmplp = _objectWithoutProperties(_ref2, _excluded2);
  return /*#__PURE__*/React.createElement(C, _extends({}, __cmplp, {
    style: __cmpls,
    ref: __cmplr,
    className: ax(["_syaz1y58 _9oik1r31 _1bnxglyw _jf4cnqa1", __cmplp.className])
  }));
});
if (process.env.NODE_ENV !== 'production') {
  LinkAppearance.displayName = 'LinkAppearance';
}
var IconAndTitleLayoutNew = function IconAndTitleLayoutNew(_ref3) {
  var icon = _ref3.icon,
    emoji = _ref3.emoji,
    defaultIcon = _ref3.defaultIcon,
    onClick = _ref3.onClick,
    children = _ref3.children,
    title = _ref3.title,
    titleColor = _ref3.titleColor,
    titleTextColor = _ref3.titleTextColor,
    link = _ref3.link,
    rightSide = _ref3.rightSide,
    _ref3$testId = _ref3.testId,
    testId = _ref3$testId === void 0 ? 'inline-card-icon-and-title' : _ref3$testId;
  var renderAtlaskitIcon = React.useCallback(function () {
    if (emoji) {
      if (fg('platform-linking-visual-refresh-v1')) {
        return /*#__PURE__*/React.createElement(Box, {
          as: "span",
          xcss: styles.iconWrapperStyle,
          testId: "icon-position-emoji-wrapper"
        }, emoji);
      }
      return /*#__PURE__*/React.createElement(EmojiWrapperOldVisualRefresh, null, emoji);
    }
    if (!icon || typeof icon === 'string') {
      return null;
    }
    if (fg('platform-linking-visual-refresh-v1')) {
      return /*#__PURE__*/React.createElement(Box, {
        as: "span",
        xcss: styles.iconWrapperStyle,
        testId: "icon-atlaskit-icon-wrapper"
      }, icon);
    }
    return /*#__PURE__*/React.createElement(IconWrapperOldVisualRefresh, null, icon);
  }, [emoji, icon]);
  var renderImageIcon = React.useCallback(function (errored, testId) {
    if (!icon || typeof icon !== 'string') {
      return null;
    }
    if (fg('platform-linking-visual-refresh-v1')) {
      return /*#__PURE__*/React.createElement(ImageLoader, {
        src: icon,
        loaded: /*#__PURE__*/React.createElement("img", {
          src: icon,
          "data-testid": "".concat(testId, "-image"),
          alt: "",
          className: ax(["_1bsb1osq"])
        }),
        errored: errored,
        loading: /*#__PURE__*/React.createElement(Shimmer, {
          testId: "".concat(testId, "-loading")
        })
      });
    }
    return /*#__PURE__*/React.createElement(ImageLoader, {
      src: icon
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop
      ,
      loaded: /*#__PURE__*/React.createElement(Icon, {
        className: "smart-link-icon",
        src: icon,
        "data-testid": "".concat(testId, "-image")
      }),
      errored: errored,
      loading: /*#__PURE__*/React.createElement(Shimmer, {
        testId: "".concat(testId, "-loading")
      })
    });
  }, [icon]);
  var renderIconPlaceholder = React.useCallback(function (testId) {
    if (fg('platform-linking-visual-refresh-v1')) {
      return defaultIcon || /*#__PURE__*/React.createElement(LinkIcon, {
        label: "link",
        LEGACY_size: "small",
        testId: "".concat(testId, "-default"),
        color: "currentColor"
      });
    }
    if (defaultIcon) {
      return /*#__PURE__*/React.createElement(IconWrapperOldVisualRefresh, null, defaultIcon);
    }
    return /*#__PURE__*/React.createElement(IconWrapperOldVisualRefresh, null, /*#__PURE__*/React.createElement(LinkIcon, {
      label: "link",
      LEGACY_size: "small",
      testId: "".concat(testId, "-default"),
      color: "currentColor"
    }));
  }, [defaultIcon]);
  var renderIcon = React.useCallback(function (testId) {
    var icon = renderAtlaskitIcon();
    if (icon) {
      return icon;
    }
    var placeholder = renderIconPlaceholder(testId);
    var image = renderImageIcon(placeholder, testId);
    if (fg('platform-linking-visual-refresh-v1')) {
      return /*#__PURE__*/React.createElement(Box, {
        as: "span",
        xcss: styles.iconWrapperStyle,
        testId: "".concat(testId, "-image-wrapper")
      }, image || placeholder);
    }
    return image || placeholder;
  }, [renderAtlaskitIcon, renderIconPlaceholder, renderImageIcon]);
  var handleClick = React.useCallback(function (event) {
    if (onClick) {
      event.preventDefault();
      event.stopPropagation();
      onClick(event);
    }
  }, [onClick]);
  var handleKeyPress = React.useCallback(function (event) {
    if (event.key !== ' ' && event.key !== 'Enter') {
      return;
    }
    if (onClick) {
      event.preventDefault();
      event.stopPropagation();
      onClick(event);
    }
  }, [onClick]);

  // maybe consider memoising this after clean up
  var titlePart = /*#__PURE__*/React.createElement(React.Fragment, null, fg('platform-linking-visual-refresh-v1') ? /*#__PURE__*/React.createElement(Box, {
    as: "span",
    xcss: styles.iconOuterWrapperStyle,
    testId: "icon-position-wrapper"
  }, children || /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {
    as: "span",
    xcss: styles.iconEmptyStyle,
    testId: "icon-empty-wrapper"
  }), renderIcon(testId))) : /*#__PURE__*/React.createElement(IconPositionWrapperOldVisualRefresh, {
    "data-testid": "icon-position-wrapper"
  }, children || /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconEmptyWrapperOldVisualRefresh, {
    "data-testid": "icon-empty-wrapper"
  }), renderIcon(testId))), fg('platform-linking-visual-refresh-v1') ? /*#__PURE__*/React.createElement(Box, _extends({
    as: "span",
    style: {
      color: titleTextColor
    }
  }, !fg('platform-linking-visual-refresh-v1') ? {
    className: TitleWrapperClassNameOldVisualRefresh
  } : {}), title) : /*#__PURE__*/React.createElement("span", _extends({
    style: {
      color: titleTextColor
    }
  }, !fg('platform-linking-visual-refresh-v1') ? {
    className: TitleWrapperClassNameOldVisualRefresh
  } : {}), title));
  return /*#__PURE__*/React.createElement(React.Fragment, null, fg('platform-linking-visual-refresh-v1') ? /*#__PURE__*/React.createElement(IconTitleWrapper, {
    style: {
      color: titleColor
    },
    testId: testId
  }, link ? /*#__PURE__*/React.createElement(LinkAppearance, {
    href: link,
    onClick: handleClick,
    onKeyPress: handleKeyPress
  }, titlePart) : titlePart, rightSide ? /*#__PURE__*/React.createElement(Box, {
    as: "span",
    xcss: styles.noLinkAppearanceStyle
  }, rightSide) : null) : /*#__PURE__*/React.createElement(IconTitleWrapperOldVisualRefresh, {
    style: {
      color: titleColor
    },
    "data-testid": testId
  }, link ? /*#__PURE__*/React.createElement(LinkAppearance, {
    href: link,
    onClick: handleClick,
    onKeyPress: handleKeyPress
  }, titlePart) : titlePart, rightSide ? /*#__PURE__*/React.createElement(NoLinkAppearanceOldVisualRefresh, null, rightSide) : null));
};
export var IconAndTitleLayout = function IconAndTitleLayout(_ref4) {
  var _ref4$rightSideSpacer = _ref4.rightSideSpacer,
    rightSideSpacer = _ref4$rightSideSpacer === void 0 ? true : _ref4$rightSideSpacer,
    props = _objectWithoutProperties(_ref4, _excluded3);
  if (fg('bandicoots-compiled-migration-smartcard')) {
    return /*#__PURE__*/React.createElement(IconAndTitleLayoutNew, _extends({
      rightSideSpacer: rightSideSpacer
    }, props));
  }
  return /*#__PURE__*/React.createElement(IconAndTitleLayoutOld, _extends({
    rightSideSpacer: rightSideSpacer
  }, props));
};

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled
var IconTitleWrapperOldVisualRefresh = forwardRef(function (_ref5, __cmplr) {
  var _ref5$as = _ref5.as,
    C = _ref5$as === void 0 ? "span" : _ref5$as,
    __cmpls = _ref5.style,
    __cmplp = _objectWithoutProperties(_ref5, _excluded4);
  return /*#__PURE__*/React.createElement(C, _extends({}, __cmplp, {
    style: __cmpls,
    ref: __cmplr,
    className: ax(["_o5721jtm _1nmz9jpi _16d9qvcn _ca0qv77o _u5f31b66 _n3tdv77o _19bv1b66", __cmplp.className])
  }));
});
if (process.env.NODE_ENV !== 'production') {
  IconTitleWrapperOldVisualRefresh.displayName = 'IconTitleWrapperOldVisualRefresh';
}
export var IconTitleWrapper = function IconTitleWrapper(props) {
  if (fg('platform-linking-visual-refresh-v1')) {
    return /*#__PURE__*/React.createElement(Box, _extends({
      as: "span",
      xcss: styles.iconTitleWrapperStyle
    }, props));
  }
  // note: This is just to get the types to work due to compiled css weirdness.
  return /*#__PURE__*/React.createElement(IconTitleWrapperOldVisualRefresh, props);
};

// eslint-disable-next-line @atlaskit/ui-styling-standard/no-styled
var LozengeWrapperOldVisualRefresh = forwardRef(function (_ref6, __cmplr) {
  var _ref6$as = _ref6.as,
    C = _ref6$as === void 0 ? "span" : _ref6$as,
    __cmpls = _ref6.style,
    __cmplp = _objectWithoutProperties(_ref6, _excluded5);
  return /*#__PURE__*/React.createElement(C, _extends({}, __cmplp, {
    style: __cmpls,
    ref: __cmplr,
    className: ax(["_1e0c1o8l _s7n4t94y _19pkidpf _2hwx1b66 _otyridpf _18u0v77o", __cmplp.className])
  }));
});
if (process.env.NODE_ENV !== 'production') {
  LozengeWrapperOldVisualRefresh.displayName = 'LozengeWrapperOldVisualRefresh';
}
export var LozengeWrapper = function LozengeWrapper(props) {
  if (fg('platform-linking-visual-refresh-v1')) {
    return /*#__PURE__*/React.createElement(Box, {
      as: "span",
      xcss: styles.lozengeWrapperStyle
    }, /*#__PURE__*/React.createElement(Box, _extends({
      xcss: styles.lozengeInternalWrapperStyle
    }, props)));
  }
  // note: This is just to get the types to work due to compiled css weirdness.
  return /*#__PURE__*/React.createElement(LozengeWrapperOldVisualRefresh, props);
};
var iconImageStyle = null;