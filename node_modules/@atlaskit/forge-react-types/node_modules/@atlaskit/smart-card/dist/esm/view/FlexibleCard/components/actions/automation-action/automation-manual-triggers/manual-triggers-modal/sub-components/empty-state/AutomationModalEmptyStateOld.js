import React from 'react';
import { defineMessages, FormattedMessage, useIntl } from 'react-intl-next';
import { useAnalyticsEvents } from '@atlaskit/analytics-next';
import Button from '@atlaskit/button';
import { Box, Stack, xcss } from '@atlaskit/primitives';
import { useAutomationMenu } from '../../menu-context';
import EmptyIcon from './empty-icon';
var i18n = defineMessages({
  defaultEmptyStateAdminDesc: {
    id: 'automation-menu.modal.empty.automations.admin.description',
    defaultMessage: 'Use the manual trigger to populate a menu of selections that anyone, or people you specify, can apply as one-click automations.',
    description: 'A description shown in the automation menu when the rule list is empty for an admin.'
  },
  defaultEmptyStateDesc: {
    id: 'automation-menu.modal.empty.automations.user.description',
    defaultMessage: 'Admins havenâ€™t configured any manually triggered automations yet.',
    description: 'A description shown in the automation menu when the rule list is empty for a user.'
  },
  learnMoreLink: {
    id: 'automation-menu.empty-state.learn-more.link',
    defaultMessage: 'Learn more about the manual trigger',
    description: 'The text of a link that takes a user to the documentation for manually triggered rules in Automation for Confluence.'
  },
  emptyAutomationListImageAlt: {
    id: 'automation-menu.empty-state.image.alt',
    defaultMessage: 'Empty automation list icon',
    description: 'Alternative text for the image that renders when the automation list is empty.'
  }
});
var emptyStateStyles = xcss({
  paddingLeft: 'space.300',
  paddingRight: 'space.300',
  marginTop: 'space.500'
});
var imageStyles = xcss({
  marginTop: 'space.050',
  marginBottom: 'space.300',
  width: '160px',
  height: '156px'
});
var descriptionStyles = xcss({
  width: '360px',
  textAlign: 'center'
});
export var AutomationModalEmptyStateOld = function AutomationModalEmptyStateOld() {
  var _useIntl = useIntl(),
    formatMessage = _useIntl.formatMessage;
  var _useAnalyticsEvents = useAnalyticsEvents(),
    createAnalyticsEvent = _useAnalyticsEvents.createAnalyticsEvent;
  var _useAutomationMenu = useAutomationMenu(),
    canManageAutomation = _useAutomationMenu.canManageAutomation,
    analyticsSource = _useAutomationMenu.analyticsSource,
    emptyStateDescription = _useAutomationMenu.emptyStateDescription,
    emptyStateAdminDescription = _useAutomationMenu.emptyStateAdminDescription;
  var emptyStateDesc = emptyStateDescription !== null && emptyStateDescription !== void 0 ? emptyStateDescription : /*#__PURE__*/React.createElement(FormattedMessage, i18n.defaultEmptyStateDesc);
  var adminEmptyStateDesc = emptyStateAdminDescription !== null && emptyStateAdminDescription !== void 0 ? emptyStateAdminDescription : /*#__PURE__*/React.createElement(FormattedMessage, i18n.defaultEmptyStateAdminDesc);
  var displayedEmptyStateDesc = canManageAutomation ? adminEmptyStateDesc : emptyStateDesc;
  return /*#__PURE__*/React.createElement(Stack, {
    xcss: emptyStateStyles,
    alignInline: "center",
    alignBlock: "center",
    grow: "fill"
  }, /*#__PURE__*/React.createElement(Box, {
    xcss: imageStyles
  }, /*#__PURE__*/React.createElement(EmptyIcon, {
    alt: formatMessage(i18n.emptyAutomationListImageAlt)
  })), /*#__PURE__*/React.createElement(Box, {
    xcss: descriptionStyles
  }, displayedEmptyStateDesc, canManageAutomation && /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(Button, {
    appearance: "link",
    spacing: "none",
    href: "https://www.atlassian.com/platform/automation",
    target: "_blank",
    onClick: function onClick() {
      createAnalyticsEvent({
        type: 'sendUIEvent',
        data: {
          action: 'clicked',
          actionSubject: 'link',
          actionSubjectId: 'learnMore',
          source: analyticsSource
        }
      }).fire();
    }
  }, /*#__PURE__*/React.createElement(FormattedMessage, i18n.learnMoreLink)))));
};