import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
var _templateObject;
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import { useEffect } from 'react';

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { css, jsx } from '@emotion/react';
import { ElementName, SmartLinkDirection, SmartLinkSize } from '../../../../../constants';
import { getBaseStyles, getGapSize, highlightRemoveStyles, renderChildren } from '../utils';
var getBlockStyles = function getBlockStyles(direction, size
// eslint-disable-next-line @atlaskit/design-system/no-css-tagged-template-expression -- needs manual remediation
) {
  return css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n\t", "\n\t", "\n  justify-content: flex-start;\n\t[data-separator] + [data-separator]:before {\n\t\tcontent: '\u2022';\n\t\tmargin-right: ", "rem;\n\t}\n\t// Pull request elements: source branch \u2192 target branch\n\t[data-smart-element='", "']\n\t\t+ [data-smart-element='", "']:before {\n\t\tcontent: '\u2192';\n\t}\n\t// Pull request elements: target branch \u2190 source branch\n\t[data-smart-element='", "']\n\t\t+ [data-smart-element='", "']:before {\n\t\tcontent: '\u2190';\n\t}\n"])), getBaseStyles(direction, size), highlightRemoveStyles, getGapSize(size), ElementName.SourceBranch, ElementName.TargetBranch, ElementName.TargetBranch, ElementName.SourceBranch);
};

/**
 * A block represents a collection of elements and actions that are arranged
 * in a row. All elements and actions should be contained within a Block.
 * @internal
 * @param {ActionGroupProps} ActionGroupProps
 * @see Action
 */
var Block = function Block(_ref) {
  var children = _ref.children,
    _ref$direction = _ref.direction,
    direction = _ref$direction === void 0 ? SmartLinkDirection.Horizontal : _ref$direction,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? SmartLinkSize.Medium : _ref$size,
    _ref$testId = _ref.testId,
    testId = _ref$testId === void 0 ? 'smart-block' : _ref$testId,
    overrideCss = _ref.overrideCss,
    blockRef = _ref.blockRef,
    onRender = _ref.onRender,
    onTransitionEnd = _ref.onTransitionEnd;
  useEffect(function () {
    onRender && onRender();
  }, [onRender]);
  return jsx("div", {
    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage -- Ignored via go/DSP-18766
    css: [getBlockStyles(direction, size), overrideCss],
    "data-smart-block": true,
    "data-testid": testId,
    onTransitionEnd: onTransitionEnd,
    ref: blockRef
  }, renderChildren(children, size));
};
export default Block;