import _extends from "@babel/runtime/helpers/extends";
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import { useContext } from 'react';

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { css, jsx } from '@emotion/react';
import { FlexibleUiContext } from '../../../../../state/flexible-ui-context';
import Text from '../text';
const SNIPPET_DEFAULT_MAX_LINES = 3;
const getSnippetStyles = overrideCss => css({
  color: "var(--ds-text, #172B4D)",
  WebkitUserSelect: 'text',
  MozUserSelect: 'text',
  MsUserSelect: 'text',
  userSelect: 'text'
},
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
overrideCss);
const SnippetElementOld = ({
  content: overrideContent,
  maxLines = SNIPPET_DEFAULT_MAX_LINES,
  overrideCss,
  ...props
} = {}) => {
  const context = useContext(FlexibleUiContext);
  return jsx(Text, _extends({
    content: overrideContent !== null && overrideContent !== void 0 ? overrideContent : context === null || context === void 0 ? void 0 : context.snippet,
    maxLines: maxLines,
    overrideCss: getSnippetStyles(overrideCss)
  }, props));
};
export default SnippetElementOld;