import React from 'react';
import ErrorIcon from '@atlaskit/icon/utility/migration/error';
import { Box, Inline, xcss } from '@atlaskit/primitives';
import MotionWrapper from '../../../common/motion-wrapper';
const containerStyles = xcss({
  all: 'unset',
  borderRadius: 'border.radius',
  margin: 'space.100',
  marginBottom: 'space.0',
  // eslint-disable-next-line @atlaskit/design-system/use-tokens-typography
  lineHeight: '20px',
  padding: 'space.075',
  paddingInline: 'space.100',
  width: '100%',
  ':empty': {
    display: 'none'
  }
});
const errorStyles = xcss({
  backgroundColor: 'color.background.danger'
});
const errorContentStyles = xcss({
  paddingInlineStart: 'space.025'
});
const titleStyles = xcss({
  color: 'color.text.subtle',
  font: "var(--ds-font-body-UNSAFE_small, normal 400 12px/16px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, system-ui, \"Helvetica Neue\", sans-serif)"
});
const getIcon = appearance => {
  switch (appearance) {
    case 'error':
      return /*#__PURE__*/React.createElement(ErrorIcon, {
        color: "var(--ds-icon-danger, #C9372C)",
        spacing: "compact",
        label: "Error",
        LEGACY_size: "small",
        testId: "action-error-icon",
        LEGACY_margin: `0 ${"var(--ds-space-negative-025, -2px)"}`
      });
    default:
      return null;
  }
};
export const ActionFooterOld = ({
  message,
  testId
}) => {
  if (!message) {
    return null;
  }
  return /*#__PURE__*/React.createElement(Box, {
    testId: `${testId}-footer`,
    xcss: [containerStyles, message.appearance === 'error' && errorStyles]
  }, /*#__PURE__*/React.createElement(MotionWrapper, {
    isFadeIn: true,
    show: true,
    showTransition: true
  }, /*#__PURE__*/React.createElement(Inline, {
    alignBlock: "start",
    grow: "fill",
    space: "space.075",
    xcss: errorContentStyles
  }, message.icon || getIcon(message.appearance), /*#__PURE__*/React.createElement(Box, {
    xcss: titleStyles
  }, message.title))));
};