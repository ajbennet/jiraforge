import _extends from "@babel/runtime/helpers/extends";
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { jsx } from '@emotion/react';
import { FormattedMessage, IntlProvider } from 'react-intl-next';
import Button from '@atlaskit/button/standard-button';
import Modal, { ModalBody, ModalFooter, ModalHeader, ModalTitle, ModalTransition } from '@atlaskit/modal-dialog';
import { messages } from '../../../messages';
import { breakWordsCss } from './styled';
const WarningModalOld = props => {
  const {
    isOpen,
    unsafeLinkText,
    url,
    onClose,
    onContinue,
    intl
  } = props;
  const content = jsx(ModalTransition, null, isOpen && jsx(Modal, {
    onClose: onClose,
    testId: "link-with-safety-warning"
  }, jsx(ModalHeader, null, jsx(ModalTitle, {
    appearance: "warning"
  }, jsx(FormattedMessage, messages.check_this_link))), jsx(ModalBody, null, jsx("div", {
    css: breakWordsCss
  }, url && unsafeLinkText && jsx(FormattedMessage, _extends({}, messages.link_safety_warning_message, {
    values: {
      unsafeLinkText: unsafeLinkText,
      a: () => jsx("a", {
        href: url,
        target: "_blank",
        rel: "noopener noreferrer"
      }, url)
    }
  })))), jsx(ModalFooter, null, jsx(Button, {
    appearance: "subtle",
    onClick: onClose
  }, jsx(FormattedMessage, messages.go_back)), jsx(Button, {
    appearance: "warning",
    onClick: onContinue,
    autoFocus: true
  }, jsx(FormattedMessage, messages.continue)))));
  return intl ? content : jsx(IntlProvider, {
    locale: "en"
  }, content);
};
export default WarningModalOld;