import _extends from "@babel/runtime/helpers/extends";
import React, { useRef } from 'react';

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { css } from '@emotion/react';
import { di } from 'react-magnetic-di';
import { SmartLinkDirection } from '../../../../../../constants';
import useAISummaryAction from '../../../../../../state/hooks/use-ai-summary-action';
import AISummary from '../../../../../common/ai-summary';
import MotionWrapper from '../../../common/motion-wrapper';
import Block from '../../block';
import AIEventSummaryViewed from '../ai-event-summary-viewed';
const AISummaryBlockResolvedViewOld = props => {
  const {
    testId,
    aiSummaryMinHeight = 0,
    placeholder,
    url
  } = props;
  const {
    state: {
      content,
      status
    }
  } = useAISummaryAction(url);
  const showAISummary = status === 'done' ||
  // We want to display the AI Summary component only when there is content available during the loading process.
  status === 'loading' && !!content;
  const isSummarisedOnMountRef = useRef(status === 'done');
  const minHeight = isSummarisedOnMountRef.current ? 0 : aiSummaryMinHeight;
  if (!showAISummary) {
    return /*#__PURE__*/React.createElement(React.Fragment, null, placeholder);
  }
  return /*#__PURE__*/React.createElement(Block, _extends({}, props, {
    direction: SmartLinkDirection.Vertical,
    testId: `${testId}-resolved-view`
    /**
     * Enabled for feature discovery to allow box shadow to overflow
     * Cleanup: https://product-fabric.atlassian.net/browse/EDM-8681
     */,
    overrideCss: css({
      overflow: 'visible'
    },
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    props.overrideCss)
  }), status === 'done' && /*#__PURE__*/React.createElement(AIEventSummaryViewed, {
    fromCache: isSummarisedOnMountRef.current
  }), /*#__PURE__*/React.createElement(MotionWrapper, {
    minHeight: minHeight,
    show: showAISummary,
    showTransition: !isSummarisedOnMountRef.current
  }, /*#__PURE__*/React.createElement(AISummary, {
    testId: `${testId}-ai-summary`,
    minHeight: minHeight,
    content: content
  })));
};
export default AISummaryBlockResolvedViewOld;