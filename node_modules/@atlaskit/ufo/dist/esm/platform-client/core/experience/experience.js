import _createClass from "@babel/runtime/helpers/createClass";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
function _createSuper(t) { var r = _isNativeReflectConstruct(); return function () { var e, o = _getPrototypeOf(t); if (r) { var s = _getPrototypeOf(this).constructor; e = Reflect.construct(o, arguments, s); } else e = o.apply(this, arguments); return _possibleConstructorReturn(this, e); }; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
import { UFOAbstractExperience } from './abstract-experience';
export var UFOExperience = /*#__PURE__*/function (_UFOAbstractExperienc) {
  _inherits(UFOExperience, _UFOAbstractExperienc);
  var _super = _createSuper(UFOExperience);
  function UFOExperience() {
    _classCallCheck(this, UFOExperience);
    return _super.apply(this, arguments);
  }
  return _createClass(UFOExperience);
}(UFOAbstractExperience);