/* stage.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
require("./stage.compiled.css");
var _react = _interopRequireWildcard(require("react"));
var React = _react;
var _runtime = require("@compiled/react/runtime");
var _readOnlyError2 = _interopRequireDefault(require("@babel/runtime/helpers/readOnlyError"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _reactTransitionGroup = require("react-transition-group");
var _compiled = require("@atlaskit/primitives/compiled");
var _colors = require("@atlaskit/theme/colors");
var _bar = _interopRequireDefault(require("./bar"));
var _marker = _interopRequireDefault(require("./marker"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
var styles = {
  listItemContent: "_1bsb1osq _kqswh2mm"
};
var textColor = {
  unvisited: "_syaz131l",
  current: "_syaz1e6v",
  visited: "_syaz1fxt",
  disabled: "_syaz1lh4"
};
var fontWeight = {
  unvisited: "_k48pi7a9",
  current: "_k48pmoej",
  visited: "_k48pmoej",
  disabled: "_k48pmoej"
};
var getMarkerColor = function getMarkerColor(_ref) {
  var status = _ref.status,
    percentageCompleted = _ref.percentageCompleted;
  switch (status) {
    case 'unvisited':
      return "var(--ds-icon-subtle, ".concat(_colors.N70, ")");
    case 'current':
    case 'visited':
      return "var(--ds-icon-brand, ".concat(_colors.B300, ")");
    case 'disabled':
      if (percentageCompleted === 0) {
        return "var(--ds-icon-disabled, ".concat(_colors.N70, ")");
      }
      // If the percentage completed is greater than 0, we show the brand colour, so that the marker (circle) blends in with the progress bar.
      // Otherwise, the grey marker would be visible within the progress bar.
      return "var(--ds-icon-brand, ".concat(_colors.B300, ")");
    default:
      return;
  }
};
var listItemStyles = null;
var titleStyles = null;
var ProgressTrackerStage = exports.default = /*#__PURE__*/function (_PureComponent) {
  function ProgressTrackerStage(props) {
    var _this;
    (0, _classCallCheck2.default)(this, ProgressTrackerStage);
    _this = _callSuper(this, ProgressTrackerStage, [props]);
    (0, _defineProperty2.default)(_this, "nodeRefMarker", /*#__PURE__*/(0, _react.createRef)());
    (0, _defineProperty2.default)(_this, "nodeRefBar", /*#__PURE__*/(0, _react.createRef)());
    (0, _defineProperty2.default)(_this, "nodeRefTitle", /*#__PURE__*/(0, _react.createRef)());
    (0, _defineProperty2.default)(_this, "onEntered", function () {
      _this.setState({
        transitioning: false,
        oldMarkerColor: getMarkerColor({
          status: _this.props.item.status,
          percentageCompleted: _this.props.item.percentageComplete
        }),
        oldPercentageComplete: _this.props.item.percentageComplete
      });
    });
    _this.state = {
      transitioning: false,
      oldMarkerColor: getMarkerColor({
        status: _this.props.item.status,
        percentageCompleted: _this.props.item.percentageComplete
      }),
      oldPercentageComplete: 0
    };
    return _this;
  }
  (0, _inherits2.default)(ProgressTrackerStage, _PureComponent);
  return (0, _createClass2.default)(ProgressTrackerStage, [{
    key: "UNSAFE_componentWillMount",
    value: function UNSAFE_componentWillMount() {
      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {
        transitioning: true
      }));
    }
  }, {
    key: "UNSAFE_componentWillReceiveProps",
    value: function UNSAFE_componentWillReceiveProps() {
      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {
        transitioning: true
      }));
    }
  }, {
    key: "shouldShowLink",
    value: function shouldShowLink() {
      return this.props.item.status === 'visited' &&
      // TODO: `noLink` is unnecessary as we should just be detecting if the `href` is set...
      !this.props.item.noLink;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
        item = _this$props.item,
        render = _this$props.render,
        transitionDelay = _this$props.transitionDelay,
        transitionSpeed = _this$props.transitionSpeed,
        transitionEasing = _this$props.transitionEasing,
        testId = _this$props.testId;
      var ariaCurrent = item.status === 'current' ? 'step' : 'false';
      var listInlineStyles = (0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)({}, '--ds--pt--ts', "".concat(transitionSpeed, "ms")), '--ds--pt--td', "".concat(transitionDelay, "ms")), '--ds--pt--te', transitionEasing), '--ds--pt--mc', this.state.oldMarkerColor), '--ds--pt--bg', getMarkerColor({
        status: item.status,
        percentageCompleted: item.percentageComplete
      })), "listStyleType", 'none');
      return /*#__PURE__*/React.createElement("li", {
        "data-testid": testId
        // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
        ,
        style: listInlineStyles,
        "aria-current": ariaCurrent,
        className: (0, _runtime.ax)(["_6rthze3t _1pfhze3t _12l2ze3t _ahbqze3t _1i4q1hna"])
      }, /*#__PURE__*/React.createElement(_compiled.Box, {
        xcss: styles.listItemContent
      }, /*#__PURE__*/React.createElement(_reactTransitionGroup.CSSTransition, {
        appear: true,
        in: this.state.transitioning,
        onEntered: this.onEntered,
        timeout: transitionDelay + transitionSpeed,
        classNames: "fade",
        nodeRef: this.nodeRefMarker
      }, /*#__PURE__*/React.createElement(_marker.default, {
        testId: testId && "".concat(testId, "-marker")
      })), /*#__PURE__*/React.createElement(_reactTransitionGroup.CSSTransition, {
        appear: true,
        in: this.state.transitioning,
        onEntered: this.onEntered,
        timeout: transitionDelay + transitionSpeed,
        classNames: "fade",
        nodeRef: this.nodeRefBar
      }, /*#__PURE__*/React.createElement(_bar.default, {
        testId: testId && "".concat(testId, "-bar"),
        percentageComplete: item.percentageComplete
      })), /*#__PURE__*/React.createElement(_reactTransitionGroup.CSSTransition, {
        appear: true,
        in: this.state.transitioning,
        onEntered: this.onEntered,
        timeout: transitionDelay + transitionSpeed,
        classNames: "fade",
        nodeRef: this.nodeRefTitle
      }, /*#__PURE__*/React.createElement("div", {
        "data-testid": testId && "".concat(testId, "-title"),
        className: (0, _runtime.ax)(["_11c81oud _v564ph28 _1pfhv47k _y3gn1h6o _1t9yph28 _1ez2kb7n _1uuw17dr", textColor[item.status], fontWeight[item.status]])
      }, this.shouldShowLink() ? render.link({
        item: item
      }) : item.label))));
    }
  }]);
}(_react.PureComponent);