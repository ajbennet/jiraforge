"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.blockquote = void 0;
var _adfSchemaGenerator = require("@atlaskit/adf-schema-generator");
var _unsupportedMark = require("../marks/unsupportedMark");
var _unsupportedNodeAttribute = require("../marks/unsupportedNodeAttribute");
var _list = require("./list");
var _paragraph = require("./paragraph");
var _unsupportedBlock = require("./unsupportedBlock");
var _codeBlock = require("./codeBlock");
var _mediaGroup = require("./mediaGroup");
var _mediaSingle = require("./mediaSingle");
var blockquote = exports.blockquote = (0, _adfSchemaGenerator.adfNode)('blockquote').define({
  defining: true,
  selectable: true,
  // Marks don't make it into the PM node spec, as they get overridden by the marks in
  // packages/adf-schema-generator/src/transforms/adfToPm/buildPmSpec.ts
  marks: [_unsupportedMark.unsupportedMark, _unsupportedNodeAttribute.unsupportedNodeAttribute],
  content: [(0, _adfSchemaGenerator.$onePlus)((0, _adfSchemaGenerator.$or)(_paragraph.paragraph.use('with_no_marks'), _list.orderedList, _list.bulletList, _unsupportedBlock.unsupportedBlock, _codeBlock.codeBlock, _mediaSingle.mediaSingle.use('caption'), _mediaSingle.mediaSingle.use('full'), _mediaGroup.mediaGroup))]
}).variant('legacy', {
  ignore: ['json-schema', 'validator-spec'],
  content: [(0, _adfSchemaGenerator.$onePlus)((0, _adfSchemaGenerator.$or)(_paragraph.paragraph, _unsupportedBlock.unsupportedBlock))]
}).variant('without_nested_codeblock_or_media', {
  content: [(0, _adfSchemaGenerator.$onePlus)((0, _adfSchemaGenerator.$or)(_paragraph.paragraph.use('with_no_marks'), _list.orderedList, _list.bulletList, _unsupportedBlock.unsupportedBlock))],
  ignore: ['json-schema', 'validator-spec']
});