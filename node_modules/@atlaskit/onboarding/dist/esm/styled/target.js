import _extends from "@babel/runtime/helpers/extends";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["bgColor", "children", "className", "radius", "testId", "style"],
  _excluded2 = ["bgColor", "children", "className", "pulse", "radius", "testId"],
  _excluded3 = ["onClick"],
  _excluded4 = ["bgColor", "children", "className", "radius", "pulse", "testId"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
/**
 * @jsxRuntime classic
 * @jsx jsx
 */

import { css, jsx, keyframes } from '@emotion/react';
import { reduceMotionAsPerUserPreference } from '@atlaskit/motion';
import { P300 } from '@atlaskit/theme/colors';
// NOTE:
// Pulse color "rgb(101, 84, 192)" derived from "colors.P300"
var baseShadow = "0 0 0 2px ".concat("var(--ds-border-discovery, ".concat(P300, ")"));
var easing = 'cubic-bezier(0.55, 0.055, 0.675, 0.19)';
var pulseKeyframes = keyframes({
  '0%, 33%': {
    boxShadow: "".concat(baseShadow, ", 0 0 0 ", "var(--ds-border-discovery, rgba(101, 84, 192, 1))")
  },
  '66%, 100%': {
    boxShadow: "".concat(baseShadow, ", 0 0 0 10px rgba(101, 84, 192, 0.01)")
  }
});
// This is needed for unit tests
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-exported-styles -- Ignored via go/DSP-18766
export var pulseKeyframesName = pulseKeyframes.name;
var animationStyles = css({
  animation: "".concat(pulseKeyframes, " 3000ms ").concat(easing, " infinite"),
  // Keep a purple boxshadow on the Pulse component if `prefers-reduced-motion`
  // is applied so we still have a functioning semantic affordance.
  boxShadow: baseShadow
});
var Base = function Base(_ref) {
  var bgColor = _ref.bgColor,
    children = _ref.children,
    className = _ref.className,
    radius = _ref.radius,
    testId = _ref.testId,
    style = _ref.style,
    props = _objectWithoutProperties(_ref, _excluded);
  return jsx("div", _extends({
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop
    className: className,
    "data-testid": testId,
    style: _objectSpread(_objectSpread({}, style), {}, {
      backgroundColor: bgColor,
      borderRadius: radius ? "".concat(radius, "px") : undefined
    })
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  }, props), children);
};

/**
 * __Target inner__
 *
 * Used to apply spotlight border and pulse to spotlight targets.
 *
 * @internal
 */
export var TargetInner = function TargetInner(_ref2) {
  var bgColor = _ref2.bgColor,
    children = _ref2.children,
    className = _ref2.className,
    pulse = _ref2.pulse,
    radius = _ref2.radius,
    testId = _ref2.testId,
    props = _objectWithoutProperties(_ref2, _excluded2);
  return jsx(Base, _extends({
    bgColor: bgColor
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop
    ,
    className: className,
    radius: radius,
    testId: testId
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  }, props, {
    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
    css: [pulse && animationStyles, reduceMotionAsPerUserPreference]
  }), children);
};
var targetOverlayStyles = css({
  width: '100%',
  height: '100%',
  position: 'absolute',
  insetBlockStart: "var(--ds-space-0, 0)",
  insetInlineStart: "var(--ds-space-0, 0)"
});

/**
 * __Target overlay__
 *
 * Overlays a spotlight target, allowing for custom click events that are intended
 * only for onboarding.
 *
 * @internal
 */
export var TargetOverlay = function TargetOverlay(_ref3) {
  var onClick = _ref3.onClick,
    props = _objectWithoutProperties(_ref3, _excluded3);
  return (
    // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions
    jsx("div", _extends({
      onClick: onClick
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props, {
      css: targetOverlayStyles
      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
      ,
      style: {
        cursor: onClick ? 'pointer' : 'auto'
      }
    }))
  );
};

/**
 * __Spotlight pulse__
 *
 * A spotlight pulse draws attention to a new feature.
 *
 * - [Examples](https://atlassian.design/components/onboarding/examples)
 * - [Code](https://atlassian.design/components/onboarding/code)
 * - [Usage](https://atlassian.design/components/onboarding/usage)
 */
export var Pulse = function Pulse(_ref4) {
  var bgColor = _ref4.bgColor,
    children = _ref4.children,
    className = _ref4.className,
    radius = _ref4.radius,
    _ref4$pulse = _ref4.pulse,
    pulse = _ref4$pulse === void 0 ? true : _ref4$pulse,
    testId = _ref4.testId,
    props = _objectWithoutProperties(_ref4, _excluded4);
  return jsx(Base, _extends({
    bgColor: bgColor
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop
    ,
    className: className,
    radius: radius,
    testId: testId
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  }, props, {
    css: [pulse && animationStyles,
    // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
    reduceMotionAsPerUserPreference]
  }), children);
};