"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var _react2 = require("@emotion/react");
var _person = _interopRequireDefault(require("@atlaskit/icon/core/migration/person"));
var _releaseShip = _interopRequireDefault(require("@atlaskit/icon/core/migration/release--ship"));
var _person2 = _interopRequireDefault(require("@atlaskit/icon/core/person"));
var _release = _interopRequireDefault(require("@atlaskit/icon/core/release"));
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _colors = require("@atlaskit/theme/colors");
var _constants = require("./constants");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } /**
 * @jsxRuntime classic
 * @jsx jsx
 */
var avatarDefaultIconStyles = (0, _react2.css)({
  display: 'flex',
  width: '100%',
  height: '100%',
  backgroundColor: "var(--ds-icon-subtle, ".concat(_colors.N90, ")")
});
var avatarDefaultIconVisualRefreshStyles = (0, _react2.css)({
  display: 'flex',
  width: '100%',
  height: '100%',
  backgroundColor: "var(--ds-background-accent-gray-subtler, #DCDFE4)"
});
var nestedAvatarStyles = Object.entries(_constants.AVATAR_SIZES).reduce(function (styles, _ref) {
  var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
    key = _ref2[0],
    size = _ref2[1];
  return _objectSpread(_objectSpread({}, styles), {}, (0, _defineProperty2.default)({}, key, (0, _react2.css)({
    // eslint-disable-next-line @atlaskit/design-system/no-nested-styles, @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
    '& svg': {
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
      width: "".concat(size, "px"),
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
      height: "".concat(size, "px")
    }
  })));
}, {});
var avatarImageStyles = (0, _react2.css)({
  display: 'flex',
  width: '100%',
  height: '100%',
  flex: '1 1 100%'
});

/**
 * __Avatar image__
 *
 * An avatar image is an internal component used to control the rendering phases of an image.
 */
var AvatarImage = function AvatarImage(_ref3) {
  var _ref3$alt = _ref3.alt,
    alt = _ref3$alt === void 0 ? '' : _ref3$alt,
    src = _ref3.src,
    appearance = _ref3.appearance,
    size = _ref3.size,
    testId = _ref3.testId;
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    hasImageErrored = _useState2[0],
    setHasImageErrored = _useState2[1];
  var borderRadius = appearance === 'circle' ? '50%' : "".concat(_constants.AVATAR_RADIUS[size], "px");
  var isHidden = !alt ? true : undefined;

  // If src changes, reset state
  (0, _react.useEffect)(function () {
    setHasImageErrored(false);
  }, [src]);
  if (!src || hasImageErrored) {
    return (0, _react2.jsx)("span", {
      css: [(0, _platformFeatureFlags.fg)('platform-component-visual-refresh') ? avatarDefaultIconVisualRefreshStyles : avatarDefaultIconStyles, nestedAvatarStyles[size]]
    }, appearance === 'circle' ? (0, _platformFeatureFlags.fg)('platform-component-visual-refresh') ? (0, _react2.jsx)(_person2.default, {
      label: alt,
      color: "var(--ds-icon-subtle, #626F86)",
      testId: testId && "".concat(testId, "--person"),
      spacing: "spacious"
    }) : (0, _react2.jsx)(_person.default, {
      label: alt,
      color: "var(--ds-icon-inverse, ".concat(_colors.N0, ")"),
      LEGACY_secondaryColor: "var(--ds-icon-subtle, ".concat(_colors.N90, ")"),
      testId: testId && "".concat(testId, "--person"),
      spacing: "spacious"
    }) : (0, _platformFeatureFlags.fg)('platform-component-visual-refresh') ? (0, _react2.jsx)(_release.default, {
      label: alt,
      color: "var(--ds-icon-subtle, #626F86)",
      testId: testId && "".concat(testId, "--ship"),
      spacing: "spacious"
    }) : (0, _react2.jsx)(_releaseShip.default, {
      label: alt,
      color: "var(--ds-icon-inverse, ".concat(_colors.N0, ")"),
      LEGACY_secondaryColor: "var(--ds-icon-subtle, ".concat(_colors.N90, ")"),
      testId: testId && "".concat(testId, "--ship"),
      spacing: "spacious"
    }));
  }
  return (0, _react2.jsx)("img", {
    src: src,
    alt: alt,
    "data-testid": testId && "".concat(testId, "--image"),
    css: avatarImageStyles,
    style: {
      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
      borderRadius: borderRadius
    },
    onError: function onError() {
      return setHasImageErrored(true);
    },
    "aria-hidden": isHidden,
    "data-vc": testId ? "".concat(testId, "--image") : 'avatar-image',
    "data-ssr-placeholder-ignored": true
  });
};
var _default = exports.default = AvatarImage;