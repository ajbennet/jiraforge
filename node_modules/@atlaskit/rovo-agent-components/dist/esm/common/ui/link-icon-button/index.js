import _extends from "@babel/runtime/helpers/extends";
import React from 'react';
import { useIntl } from 'react-intl-next';
import { IconButton } from '@atlaskit/button/new';
import LinkIcon from '@atlaskit/icon/core/link';
import { Box, xcss } from '@atlaskit/primitives';
import messages from './messages';
var hiddenStyles = xcss({
  opacity: 0
});
export var LinkIconButton = function LinkIconButton(_ref) {
  var handleCopy = _ref.handleCopy,
    _ref$visible = _ref.visible,
    visible = _ref$visible === void 0 ? true : _ref$visible;
  var _useIntl = useIntl(),
    formatMessage = _useIntl.formatMessage;
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {
    xcss: [!visible && hiddenStyles]
  }, /*#__PURE__*/React.createElement(IconButton, {
    type: "button",
    onClick: handleCopy,
    icon: function icon(iconProps) {
      return /*#__PURE__*/React.createElement(LinkIcon, _extends({}, iconProps, {
        color: "var(--ds-icon, #44546F)"
      }));
    },
    appearance: "subtle",
    spacing: "compact",
    label: formatMessage(messages.copyAgentLinkLabel)
  })));
};