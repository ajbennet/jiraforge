import React from 'react';
import { useIntl } from 'react-intl-next';
import StarIcon from '@atlaskit/icon/utility/migration/star-unstarred--star';
import { Box, xcss } from '@atlaskit/primitives';
import Skeleton from '@atlaskit/skeleton';
import { messages } from './messages';
import { formatNumber } from './utils';
var countStyles = xcss({
  font: "var(--ds-font-body-small, normal 400 11px/16px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, system-ui, \"Helvetica Neue\", sans-serif)",
  display: 'flex',
  alignItems: 'center',
  gap: 'space.050',
  paddingInlineStart: 'space.025'
});
export var AgentStarCount = function AgentStarCount(_ref) {
  var starCount = _ref.starCount,
    isLoading = _ref.isLoading;
  var _useIntl = useIntl(),
    formatMessage = _useIntl.formatMessage;
  if ((starCount === null || starCount === undefined) && !isLoading) {
    return null;
  }
  return /*#__PURE__*/React.createElement(Box, {
    xcss: countStyles
  }, /*#__PURE__*/React.createElement(StarIcon, {
    LEGACY_margin: "0 ".concat("var(--ds-space-negative-025, -2px)"),
    color: "currentColor",
    label: "",
    LEGACY_size: "small"
  }), isLoading ? /*#__PURE__*/React.createElement(Skeleton, {
    testId: "agent-profile-info-star-count-skeleton",
    isShimmering: true,
    height: 16,
    width: 75,
    borderRadius: 3
  }) : formatMessage(messages.starredCount, {
    starCount: formatNumber(starCount !== null && starCount !== void 0 ? starCount : 0)
  }));
};