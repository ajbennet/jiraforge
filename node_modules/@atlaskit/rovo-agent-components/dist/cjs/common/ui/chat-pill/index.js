"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ConversationStarterPill = exports.ChatPill = exports.BrowseAgentsPill = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = _interopRequireDefault(require("react"));
var _reactIntlNext = require("react-intl-next");
var _aiAgent = _interopRequireDefault(require("@atlaskit/icon/core/ai-agent"));
var _primitives = require("@atlaskit/primitives");
var _chatIcon = require("../chat-icon");
var _messages = _interopRequireDefault(require("./messages"));
var _excluded = ["children", "whiteSpacePreWrap", "renderIcon"],
  _excluded2 = ["children", "whiteSpacePreWrap"];
var conversationStarterPillStyles = (0, _primitives.xcss)({
  color: 'color.text',
  padding: 'space.100',
  border: "1px solid ".concat("var(--ds-border, #091E4224)"),
  borderRadius: 'border.radius.200',
  borderBottomRightRadius: "var(--ds-border-radius-050, 2px)",
  font: "var(--ds-font-body, normal 400 14px/20px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, system-ui, \"Helvetica Neue\", sans-serif)",
  fontWeight: "var(--ds-font-weight-medium, 500)",
  // eslint-disable-next-line @atlaskit/design-system/use-tokens-typography
  lineHeight: '16px',
  textOverflow: 'ellipsis',
  whiteSpace: 'nowrap',
  flexShrink: 1,
  background: 'none',
  width: '100%',
  ':hover': {
    backgroundColor: 'color.background.neutral.hovered'
  },
  ':active': {
    backgroundColor: 'color.background.neutral.pressed'
  }
});
var buttonStyles = (0, _primitives.xcss)({
  color: 'color.text',
  padding: 'space.100',
  borderRadius: 'border.radius.200',
  borderBottomRightRadius: "var(--ds-border-radius-050, 2px)",
  font: "var(--ds-font-body, normal 400 14px/20px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, system-ui, \"Helvetica Neue\", sans-serif)",
  fontWeight: "var(--ds-font-weight-medium, 500)",
  // eslint-disable-next-line @atlaskit/design-system/use-tokens-typography
  lineHeight: '16px',
  textOverflow: 'ellipsis',
  whiteSpace: 'nowrap',
  flexShrink: 1,
  backgroundColor: 'color.background.neutral',
  ':hover': {
    backgroundColor: 'color.background.neutral.hovered'
  },
  ':active': {
    backgroundColor: 'color.background.neutral.pressed'
  }
});
var buttonInlineStyles = (0, _primitives.xcss)({
  paddingInline: 'space.025'
});
var queryTextStyles = (0, _primitives.xcss)({
  wordBreak: 'break-word',
  textAlign: 'left'
});
var whiteSpacePreWrapStyles = (0, _primitives.xcss)({
  whiteSpace: 'pre-wrap'
});
var ChatPill = exports.ChatPill = /*#__PURE__*/_react.default.forwardRef(function (_ref, ref) {
  var children = _ref.children,
    _ref$whiteSpacePreWra = _ref.whiteSpacePreWrap,
    whiteSpacePreWrap = _ref$whiteSpacePreWra === void 0 ? true : _ref$whiteSpacePreWra,
    _ref$renderIcon = _ref.renderIcon,
    renderIcon = _ref$renderIcon === void 0 ? true : _ref$renderIcon,
    props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  return /*#__PURE__*/_react.default.createElement(_primitives.Pressable, (0, _extends2.default)({
    ref: ref
  }, props, {
    xcss: buttonStyles
  }), /*#__PURE__*/_react.default.createElement(_primitives.Inline, {
    space: "space.050",
    xcss: buttonInlineStyles
  }, renderIcon ? /*#__PURE__*/_react.default.createElement(_chatIcon.ChatPillIcon, null) : null, /*#__PURE__*/_react.default.createElement(_primitives.Box, {
    xcss: [queryTextStyles, whiteSpacePreWrap && whiteSpacePreWrapStyles]
  }, children)));
});
var BrowseAgentsPill = exports.BrowseAgentsPill = /*#__PURE__*/_react.default.forwardRef(function (props, ref) {
  var _useIntl = (0, _reactIntlNext.useIntl)(),
    formatMessage = _useIntl.formatMessage;
  return /*#__PURE__*/_react.default.createElement(_primitives.Pressable, (0, _extends2.default)({
    ref: ref
  }, props, {
    xcss: buttonStyles
  }), /*#__PURE__*/_react.default.createElement(_primitives.Inline, {
    space: "space.050",
    xcss: buttonInlineStyles
  }, /*#__PURE__*/_react.default.createElement(_aiAgent.default, {
    color: "currentColor",
    label: ""
  }), /*#__PURE__*/_react.default.createElement(_primitives.Box, {
    xcss: queryTextStyles
  }, formatMessage(_messages.default.browseAgentsPillLabel))));
});
var ConversationStarterPill = exports.ConversationStarterPill = /*#__PURE__*/_react.default.forwardRef(function (_ref2, ref) {
  var children = _ref2.children,
    _ref2$whiteSpacePreWr = _ref2.whiteSpacePreWrap,
    whiteSpacePreWrap = _ref2$whiteSpacePreWr === void 0 ? true : _ref2$whiteSpacePreWr,
    props = (0, _objectWithoutProperties2.default)(_ref2, _excluded2);
  return /*#__PURE__*/_react.default.createElement(_primitives.Pressable, (0, _extends2.default)({
    ref: ref
  }, props, {
    xcss: conversationStarterPillStyles
  }), /*#__PURE__*/_react.default.createElement(_primitives.Inline, {
    space: "space.050",
    xcss: buttonInlineStyles
  }, /*#__PURE__*/_react.default.createElement(_chatIcon.ChatPillIcon, null), /*#__PURE__*/_react.default.createElement(_primitives.Box, {
    xcss: [queryTextStyles, whiteSpacePreWrap && whiteSpacePreWrapStyles]
  }, children)));
});