/* base.tsx generated by @compiled/babel-plugin v0.36.1 */
import _extends from "@babel/runtime/helpers/extends";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["before", "contentElement", "after", "testId", "appearance", "style", "color", "href", "className"];
import "./base.compiled.css";
import { ax, ix } from "@compiled/react/runtime";
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
import React from 'react';
import { fg } from '@atlaskit/platform-feature-flags';
import { backgroundColors, borderColors, focusRingColors, linkActiveBackgroundColors, linkHoverBackgroundColors, removeButtonColors, removeButtonHoverColors, textActiveColors, textColors, textHoverColors } from '../../../styles';
var cssVar = {
  color: {
    background: {
      default: '--ds-cb',
      hover: '--ds-cbh',
      active: '--ds-cba'
    },
    borderColor: '--ds-bc',
    focusRing: '--ds-cfr',
    text: {
      default: '--ds-ct',
      hover: '--ds-cth',
      active: '--ds-ctp',
      link: '--ds-ctl'
    },
    removeButton: {
      default: '--ds-rb',
      hover: '--ds-rbh'
    }
  },
  borderRadius: '--ds-br'
};
// To be removed with platform-component-visual-refresh (BLU-2992)
var baseStylesOld = null;
var baseStyles = null;

// To be removed with platform-component-visual-refresh (BLU-2992)
var interactiveStylesOld = null;
var interactiveStyles = null;

// To be removed with platform-component-visual-refresh (BLU-2992)
var focusRingStylesOld = null;
var focusRingStyles = null;

// To be removed with platform-component-visual-refresh (BLU-2992)
var nonStandardLinkStyles = null;
var BaseTag = /*#__PURE__*/React.forwardRef(function BaseTag(_ref, ref) {
  var _objectSpread2;
  var before = _ref.before,
    contentElement = _ref.contentElement,
    after = _ref.after,
    testId = _ref.testId,
    _ref$appearance = _ref.appearance,
    appearance = _ref$appearance === void 0 ? 'default' : _ref$appearance,
    style = _ref.style,
    _ref$color = _ref.color,
    color = _ref$color === void 0 ? 'standard' : _ref$color,
    href = _ref.href,
    className = _ref.className,
    other = _objectWithoutProperties(_ref, _excluded);
  var isLink = Boolean(href);
  var isRemovable = Boolean(after);
  var isInteractive = isLink || isRemovable;
  var isStandardLink = isLink && color === 'standard';

  // Change link text color if  the tag is standard color
  var textLinkColors = isStandardLink ? textColors['standardLink'] : textColors[color];
  var backgroundHoverColors = isRemovable && !isLink ? backgroundColors[color] : linkHoverBackgroundColors[color];
  var backgroundActiveColors = isRemovable && !isLink ? backgroundColors[color] : linkActiveBackgroundColors[color];
  return /*#__PURE__*/React.createElement("span", _extends({}, other, {
    ref: ref,
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
    className: ax([fg('platform-component-visual-refresh') ? "_zulp1b66 _2rko1sit _1dqonqa1 _189ee4h9 _1mou1b66 _195g1b66 _18zr1b66 _1e0c116y _vchhusvi _1ul9idpf _4t3iv47k _kqswh2mm _4cvr1h6o _bfhksm61 _syaz1fxt _80om73ad _hci618i8 _1jt519tc _ntai3gwo _8xtez9n9 _g80y1rtr _16uamsox _13m11mrw _sm9f4hk3 _9u4y1fn9 _1576w76v _1hgs14mw" : "_2rkofxuz _1mou1b66 _195g1b66 _1rjcze3t _18zrze3t _1e0c116y _1ul9idpf _4t3iv47k _kqswh2mm _80om73ad _wjr319tc _1wa23gwo _10msz9n9 _1baemsox _pbck1mrw _1m3n4hk3 _994z1fn9", fg('platform-component-visual-refresh') ? "_1e3812j9 _7glxv77o" : "_1guj1r31 _pbhaglyw _11ow1o36 _giqx18i8 _1pfb19tc _1kqb3gwo _6spkz9n9 _o9551rtr _vpp8msox _xgw91mrw _q76p4hk3 _o5is1fn9 _4mwww76v _19i014mw", isLink && fg('platform-component-visual-refresh') && "_irr3166n _1di61dty", !fg('platform-component-visual-refresh') && isLink && !isStandardLink && "_n3spmsox _5wtq1mrw _151h4hk3 _10mx1fn9", !fg('platform-component-visual-refresh') && isInteractive && "_1cro19tc _1mhg3gwo _188kz9n9 _1kw819tc _7e5o3gwo _173az9n9", className]),
    "data-testid": testId,
    style: _objectSpread(_objectSpread((_objectSpread2 = {}, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_objectSpread2, cssVar.color.borderColor, borderColors[color]), cssVar.color.text.default, textColors[color]), cssVar.color.text.hover, textHoverColors[color]), cssVar.color.text.active, textActiveColors[color]), cssVar.color.text.link, textLinkColors), cssVar.color.background.default, backgroundColors[color]), cssVar.color.background.hover, backgroundHoverColors), cssVar.color.background.active, backgroundActiveColors), cssVar.color.focusRing, focusRingColors), cssVar.color.removeButton.default, removeButtonColors[color]), _defineProperty(_defineProperty(_objectSpread2, cssVar.color.removeButton.hover, removeButtonHoverColors[color]), cssVar.borderRadius, appearance === 'rounded' ? '10px' : '3px')), style), {}, {
      "--_124va8q": ix("var(".concat(cssVar.borderRadius, ")")),
      "--_toyvsf": ix("2px solid ".concat("var(--ds-border-focused, #388BFF)"))
    })
  }), before, contentElement, after);
});

// eslint-disable-next-line @repo/internal/react/require-jsdoc
export default BaseTag;