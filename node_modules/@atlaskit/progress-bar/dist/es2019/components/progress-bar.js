/* progress-bar.tsx generated by @compiled/babel-plugin v0.36.1 */
import "./progress-bar.compiled.css";
import { ax, ix } from "@compiled/react/runtime";
import React from 'react';
import { G300, N40A, N500 } from '@atlaskit/theme/colors';
const MIN_VALUE = 0;
const MAX_VALUE = 1;
const increasingBarAnimation = null;
const decreasingBarAnimation = null;
const containerStyles = null;
const containerAppearance = {
  default: "_bfhk1vi8",
  success: "_bfhk1vi8",
  inverse: "_bfhk18ht"
};
const barAppearance = {
  default: "_bfhk1wby",
  success: "_bfhk1bh5",
  inverse: "_bfhkvuon"
};
const barStyles = null;
const determinateBarStyles = null;
const increasingBarStyles = null;
const decreasingBarStyles = null;

/**
 * __Progress bar__
 *
 * A progress bar displays the status of a given process.
 *
 * - [Examples](https://atlassian.design/components/progress-bar/examples)
 * - [Code](https://atlassian.design/components/progress-bar/code)
 * - [Usage](https://atlassian.design/components/progress-bar/usage)
 */
const ProgressBar = ({
  appearance = 'default',
  ariaLabel,
  isIndeterminate = false,
  testId = 'progress-bar',
  value = 0
}) => {
  const valueParsed = isIndeterminate ? MIN_VALUE : Math.max(MIN_VALUE, Math.min(value, MAX_VALUE));
  return /*#__PURE__*/React.createElement("div", {
    role: "progressbar",
    "aria-label": ariaLabel,
    "aria-valuemin": MIN_VALUE,
    "aria-valuenow": valueParsed,
    "aria-valuemax": MAX_VALUE,
    tabIndex: 0,
    "data-testid": testId,
    className: ax(["_2rko1sit _1reo15vq _18m915vq _1bsb1osq _4t3ii2wt _kqswh2mm _bfhk1vi8", containerAppearance[appearance]])
  }, isIndeterminate ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("span", {
    className: ax(["_2rko1sit _1e0c1ule _4t3ii2wt _kqswstnw", barAppearance[appearance], "_y44v1ud3"])
  }), /*#__PURE__*/React.createElement("span", {
    className: ax(["_2rko1sit _1e0c1ule _4t3ii2wt _kqswstnw", barAppearance[appearance], "_y44voiec"])
  })) : /*#__PURE__*/React.createElement("span", {
    style: {
      width: `${Number(value) * 100}%`
    },
    className: ax(["_2rko1sit _1e0c1ule _4t3ii2wt _kqswstnw", barAppearance[appearance], "_v564calv"])
  }));
};
export default ProgressBar;